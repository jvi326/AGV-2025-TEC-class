
Bluetooth_chassis_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002624  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000007c  080026e4  080026e4  000036e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08002760  08002760  00003768  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08002760  08002760  00003768  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08002760  08002768  00003768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08002760  08002760  00003760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08002764  08002764  00003764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00003768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000b0  20000000  08002768  00004000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000b0  08002768  000040b0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00003768  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001521  00000000  00000000  00003790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004d3  00000000  00000000  00004cb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000168  00000000  00000000  00005188  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000128  00000000  00000000  000052f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000aded  00000000  00000000  00005418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001597  00000000  00000000  00010205  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003a974  00000000  00000000  0001179c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0004c110  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000006cc  00000000  00000000  0004c154  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  0004c820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080026cc 	.word	0x080026cc

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080026cc 	.word	0x080026cc

08000108 <__aeabi_cfrcmple>:
 8000108:	4684      	mov	ip, r0
 800010a:	0008      	movs	r0, r1
 800010c:	4661      	mov	r1, ip
 800010e:	e7ff      	b.n	8000110 <__aeabi_cfcmpeq>

08000110 <__aeabi_cfcmpeq>:
 8000110:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000112:	f000 fa95 	bl	8000640 <__lesf2>
 8000116:	2800      	cmp	r0, #0
 8000118:	d401      	bmi.n	800011e <__aeabi_cfcmpeq+0xe>
 800011a:	2100      	movs	r1, #0
 800011c:	42c8      	cmn	r0, r1
 800011e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000120 <__aeabi_fcmpeq>:
 8000120:	b510      	push	{r4, lr}
 8000122:	f000 fa1d 	bl	8000560 <__eqsf2>
 8000126:	4240      	negs	r0, r0
 8000128:	3001      	adds	r0, #1
 800012a:	bd10      	pop	{r4, pc}

0800012c <__aeabi_fcmplt>:
 800012c:	b510      	push	{r4, lr}
 800012e:	f000 fa87 	bl	8000640 <__lesf2>
 8000132:	2800      	cmp	r0, #0
 8000134:	db01      	blt.n	800013a <__aeabi_fcmplt+0xe>
 8000136:	2000      	movs	r0, #0
 8000138:	bd10      	pop	{r4, pc}
 800013a:	2001      	movs	r0, #1
 800013c:	bd10      	pop	{r4, pc}
 800013e:	46c0      	nop			@ (mov r8, r8)

08000140 <__aeabi_fcmple>:
 8000140:	b510      	push	{r4, lr}
 8000142:	f000 fa7d 	bl	8000640 <__lesf2>
 8000146:	2800      	cmp	r0, #0
 8000148:	dd01      	ble.n	800014e <__aeabi_fcmple+0xe>
 800014a:	2000      	movs	r0, #0
 800014c:	bd10      	pop	{r4, pc}
 800014e:	2001      	movs	r0, #1
 8000150:	bd10      	pop	{r4, pc}
 8000152:	46c0      	nop			@ (mov r8, r8)

08000154 <__aeabi_fcmpgt>:
 8000154:	b510      	push	{r4, lr}
 8000156:	f000 fa2b 	bl	80005b0 <__gesf2>
 800015a:	2800      	cmp	r0, #0
 800015c:	dc01      	bgt.n	8000162 <__aeabi_fcmpgt+0xe>
 800015e:	2000      	movs	r0, #0
 8000160:	bd10      	pop	{r4, pc}
 8000162:	2001      	movs	r0, #1
 8000164:	bd10      	pop	{r4, pc}
 8000166:	46c0      	nop			@ (mov r8, r8)

08000168 <__aeabi_fcmpge>:
 8000168:	b510      	push	{r4, lr}
 800016a:	f000 fa21 	bl	80005b0 <__gesf2>
 800016e:	2800      	cmp	r0, #0
 8000170:	da01      	bge.n	8000176 <__aeabi_fcmpge+0xe>
 8000172:	2000      	movs	r0, #0
 8000174:	bd10      	pop	{r4, pc}
 8000176:	2001      	movs	r0, #1
 8000178:	bd10      	pop	{r4, pc}
 800017a:	46c0      	nop			@ (mov r8, r8)

0800017c <__aeabi_fadd>:
 800017c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800017e:	024b      	lsls	r3, r1, #9
 8000180:	0a5a      	lsrs	r2, r3, #9
 8000182:	4694      	mov	ip, r2
 8000184:	004a      	lsls	r2, r1, #1
 8000186:	0fc9      	lsrs	r1, r1, #31
 8000188:	46ce      	mov	lr, r9
 800018a:	4647      	mov	r7, r8
 800018c:	4689      	mov	r9, r1
 800018e:	0045      	lsls	r5, r0, #1
 8000190:	0246      	lsls	r6, r0, #9
 8000192:	0e2d      	lsrs	r5, r5, #24
 8000194:	0e12      	lsrs	r2, r2, #24
 8000196:	b580      	push	{r7, lr}
 8000198:	0999      	lsrs	r1, r3, #6
 800019a:	0a77      	lsrs	r7, r6, #9
 800019c:	0fc4      	lsrs	r4, r0, #31
 800019e:	09b6      	lsrs	r6, r6, #6
 80001a0:	1aab      	subs	r3, r5, r2
 80001a2:	454c      	cmp	r4, r9
 80001a4:	d020      	beq.n	80001e8 <__aeabi_fadd+0x6c>
 80001a6:	2b00      	cmp	r3, #0
 80001a8:	dd0c      	ble.n	80001c4 <__aeabi_fadd+0x48>
 80001aa:	2a00      	cmp	r2, #0
 80001ac:	d134      	bne.n	8000218 <__aeabi_fadd+0x9c>
 80001ae:	2900      	cmp	r1, #0
 80001b0:	d02a      	beq.n	8000208 <__aeabi_fadd+0x8c>
 80001b2:	1e5a      	subs	r2, r3, #1
 80001b4:	2b01      	cmp	r3, #1
 80001b6:	d100      	bne.n	80001ba <__aeabi_fadd+0x3e>
 80001b8:	e08f      	b.n	80002da <__aeabi_fadd+0x15e>
 80001ba:	2bff      	cmp	r3, #255	@ 0xff
 80001bc:	d100      	bne.n	80001c0 <__aeabi_fadd+0x44>
 80001be:	e0cd      	b.n	800035c <__aeabi_fadd+0x1e0>
 80001c0:	0013      	movs	r3, r2
 80001c2:	e02f      	b.n	8000224 <__aeabi_fadd+0xa8>
 80001c4:	2b00      	cmp	r3, #0
 80001c6:	d060      	beq.n	800028a <__aeabi_fadd+0x10e>
 80001c8:	1b53      	subs	r3, r2, r5
 80001ca:	2d00      	cmp	r5, #0
 80001cc:	d000      	beq.n	80001d0 <__aeabi_fadd+0x54>
 80001ce:	e0ee      	b.n	80003ae <__aeabi_fadd+0x232>
 80001d0:	2e00      	cmp	r6, #0
 80001d2:	d100      	bne.n	80001d6 <__aeabi_fadd+0x5a>
 80001d4:	e13e      	b.n	8000454 <__aeabi_fadd+0x2d8>
 80001d6:	1e5c      	subs	r4, r3, #1
 80001d8:	2b01      	cmp	r3, #1
 80001da:	d100      	bne.n	80001de <__aeabi_fadd+0x62>
 80001dc:	e16b      	b.n	80004b6 <__aeabi_fadd+0x33a>
 80001de:	2bff      	cmp	r3, #255	@ 0xff
 80001e0:	d100      	bne.n	80001e4 <__aeabi_fadd+0x68>
 80001e2:	e0b9      	b.n	8000358 <__aeabi_fadd+0x1dc>
 80001e4:	0023      	movs	r3, r4
 80001e6:	e0e7      	b.n	80003b8 <__aeabi_fadd+0x23c>
 80001e8:	2b00      	cmp	r3, #0
 80001ea:	dc00      	bgt.n	80001ee <__aeabi_fadd+0x72>
 80001ec:	e0a4      	b.n	8000338 <__aeabi_fadd+0x1bc>
 80001ee:	2a00      	cmp	r2, #0
 80001f0:	d069      	beq.n	80002c6 <__aeabi_fadd+0x14a>
 80001f2:	2dff      	cmp	r5, #255	@ 0xff
 80001f4:	d100      	bne.n	80001f8 <__aeabi_fadd+0x7c>
 80001f6:	e0b1      	b.n	800035c <__aeabi_fadd+0x1e0>
 80001f8:	2280      	movs	r2, #128	@ 0x80
 80001fa:	04d2      	lsls	r2, r2, #19
 80001fc:	4311      	orrs	r1, r2
 80001fe:	2b1b      	cmp	r3, #27
 8000200:	dc00      	bgt.n	8000204 <__aeabi_fadd+0x88>
 8000202:	e0e9      	b.n	80003d8 <__aeabi_fadd+0x25c>
 8000204:	002b      	movs	r3, r5
 8000206:	3605      	adds	r6, #5
 8000208:	08f7      	lsrs	r7, r6, #3
 800020a:	2bff      	cmp	r3, #255	@ 0xff
 800020c:	d100      	bne.n	8000210 <__aeabi_fadd+0x94>
 800020e:	e0a5      	b.n	800035c <__aeabi_fadd+0x1e0>
 8000210:	027a      	lsls	r2, r7, #9
 8000212:	0a52      	lsrs	r2, r2, #9
 8000214:	b2d8      	uxtb	r0, r3
 8000216:	e030      	b.n	800027a <__aeabi_fadd+0xfe>
 8000218:	2dff      	cmp	r5, #255	@ 0xff
 800021a:	d100      	bne.n	800021e <__aeabi_fadd+0xa2>
 800021c:	e09e      	b.n	800035c <__aeabi_fadd+0x1e0>
 800021e:	2280      	movs	r2, #128	@ 0x80
 8000220:	04d2      	lsls	r2, r2, #19
 8000222:	4311      	orrs	r1, r2
 8000224:	2001      	movs	r0, #1
 8000226:	2b1b      	cmp	r3, #27
 8000228:	dc08      	bgt.n	800023c <__aeabi_fadd+0xc0>
 800022a:	0008      	movs	r0, r1
 800022c:	2220      	movs	r2, #32
 800022e:	40d8      	lsrs	r0, r3
 8000230:	1ad3      	subs	r3, r2, r3
 8000232:	4099      	lsls	r1, r3
 8000234:	000b      	movs	r3, r1
 8000236:	1e5a      	subs	r2, r3, #1
 8000238:	4193      	sbcs	r3, r2
 800023a:	4318      	orrs	r0, r3
 800023c:	1a36      	subs	r6, r6, r0
 800023e:	0173      	lsls	r3, r6, #5
 8000240:	d400      	bmi.n	8000244 <__aeabi_fadd+0xc8>
 8000242:	e071      	b.n	8000328 <__aeabi_fadd+0x1ac>
 8000244:	01b6      	lsls	r6, r6, #6
 8000246:	09b7      	lsrs	r7, r6, #6
 8000248:	0038      	movs	r0, r7
 800024a:	f001 fbaf 	bl	80019ac <__clzsi2>
 800024e:	003b      	movs	r3, r7
 8000250:	3805      	subs	r0, #5
 8000252:	4083      	lsls	r3, r0
 8000254:	4285      	cmp	r5, r0
 8000256:	dd4d      	ble.n	80002f4 <__aeabi_fadd+0x178>
 8000258:	4eb4      	ldr	r6, [pc, #720]	@ (800052c <__aeabi_fadd+0x3b0>)
 800025a:	1a2d      	subs	r5, r5, r0
 800025c:	401e      	ands	r6, r3
 800025e:	075a      	lsls	r2, r3, #29
 8000260:	d068      	beq.n	8000334 <__aeabi_fadd+0x1b8>
 8000262:	220f      	movs	r2, #15
 8000264:	4013      	ands	r3, r2
 8000266:	2b04      	cmp	r3, #4
 8000268:	d064      	beq.n	8000334 <__aeabi_fadd+0x1b8>
 800026a:	3604      	adds	r6, #4
 800026c:	0173      	lsls	r3, r6, #5
 800026e:	d561      	bpl.n	8000334 <__aeabi_fadd+0x1b8>
 8000270:	1c68      	adds	r0, r5, #1
 8000272:	2dfe      	cmp	r5, #254	@ 0xfe
 8000274:	d154      	bne.n	8000320 <__aeabi_fadd+0x1a4>
 8000276:	20ff      	movs	r0, #255	@ 0xff
 8000278:	2200      	movs	r2, #0
 800027a:	05c0      	lsls	r0, r0, #23
 800027c:	4310      	orrs	r0, r2
 800027e:	07e4      	lsls	r4, r4, #31
 8000280:	4320      	orrs	r0, r4
 8000282:	bcc0      	pop	{r6, r7}
 8000284:	46b9      	mov	r9, r7
 8000286:	46b0      	mov	r8, r6
 8000288:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800028a:	22fe      	movs	r2, #254	@ 0xfe
 800028c:	4690      	mov	r8, r2
 800028e:	1c68      	adds	r0, r5, #1
 8000290:	0002      	movs	r2, r0
 8000292:	4640      	mov	r0, r8
 8000294:	4210      	tst	r0, r2
 8000296:	d16b      	bne.n	8000370 <__aeabi_fadd+0x1f4>
 8000298:	2d00      	cmp	r5, #0
 800029a:	d000      	beq.n	800029e <__aeabi_fadd+0x122>
 800029c:	e0dd      	b.n	800045a <__aeabi_fadd+0x2de>
 800029e:	2e00      	cmp	r6, #0
 80002a0:	d100      	bne.n	80002a4 <__aeabi_fadd+0x128>
 80002a2:	e102      	b.n	80004aa <__aeabi_fadd+0x32e>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	d0b3      	beq.n	8000210 <__aeabi_fadd+0x94>
 80002a8:	2280      	movs	r2, #128	@ 0x80
 80002aa:	1a77      	subs	r7, r6, r1
 80002ac:	04d2      	lsls	r2, r2, #19
 80002ae:	4217      	tst	r7, r2
 80002b0:	d100      	bne.n	80002b4 <__aeabi_fadd+0x138>
 80002b2:	e136      	b.n	8000522 <__aeabi_fadd+0x3a6>
 80002b4:	464c      	mov	r4, r9
 80002b6:	1b8e      	subs	r6, r1, r6
 80002b8:	d061      	beq.n	800037e <__aeabi_fadd+0x202>
 80002ba:	2001      	movs	r0, #1
 80002bc:	4216      	tst	r6, r2
 80002be:	d130      	bne.n	8000322 <__aeabi_fadd+0x1a6>
 80002c0:	2300      	movs	r3, #0
 80002c2:	08f7      	lsrs	r7, r6, #3
 80002c4:	e7a4      	b.n	8000210 <__aeabi_fadd+0x94>
 80002c6:	2900      	cmp	r1, #0
 80002c8:	d09e      	beq.n	8000208 <__aeabi_fadd+0x8c>
 80002ca:	1e5a      	subs	r2, r3, #1
 80002cc:	2b01      	cmp	r3, #1
 80002ce:	d100      	bne.n	80002d2 <__aeabi_fadd+0x156>
 80002d0:	e0ca      	b.n	8000468 <__aeabi_fadd+0x2ec>
 80002d2:	2bff      	cmp	r3, #255	@ 0xff
 80002d4:	d042      	beq.n	800035c <__aeabi_fadd+0x1e0>
 80002d6:	0013      	movs	r3, r2
 80002d8:	e791      	b.n	80001fe <__aeabi_fadd+0x82>
 80002da:	1a71      	subs	r1, r6, r1
 80002dc:	014b      	lsls	r3, r1, #5
 80002de:	d400      	bmi.n	80002e2 <__aeabi_fadd+0x166>
 80002e0:	e0d1      	b.n	8000486 <__aeabi_fadd+0x30a>
 80002e2:	018f      	lsls	r7, r1, #6
 80002e4:	09bf      	lsrs	r7, r7, #6
 80002e6:	0038      	movs	r0, r7
 80002e8:	f001 fb60 	bl	80019ac <__clzsi2>
 80002ec:	003b      	movs	r3, r7
 80002ee:	3805      	subs	r0, #5
 80002f0:	4083      	lsls	r3, r0
 80002f2:	2501      	movs	r5, #1
 80002f4:	2220      	movs	r2, #32
 80002f6:	1b40      	subs	r0, r0, r5
 80002f8:	3001      	adds	r0, #1
 80002fa:	1a12      	subs	r2, r2, r0
 80002fc:	001e      	movs	r6, r3
 80002fe:	4093      	lsls	r3, r2
 8000300:	40c6      	lsrs	r6, r0
 8000302:	1e5a      	subs	r2, r3, #1
 8000304:	4193      	sbcs	r3, r2
 8000306:	431e      	orrs	r6, r3
 8000308:	d039      	beq.n	800037e <__aeabi_fadd+0x202>
 800030a:	0773      	lsls	r3, r6, #29
 800030c:	d100      	bne.n	8000310 <__aeabi_fadd+0x194>
 800030e:	e11b      	b.n	8000548 <__aeabi_fadd+0x3cc>
 8000310:	230f      	movs	r3, #15
 8000312:	2500      	movs	r5, #0
 8000314:	4033      	ands	r3, r6
 8000316:	2b04      	cmp	r3, #4
 8000318:	d1a7      	bne.n	800026a <__aeabi_fadd+0xee>
 800031a:	2001      	movs	r0, #1
 800031c:	0172      	lsls	r2, r6, #5
 800031e:	d57c      	bpl.n	800041a <__aeabi_fadd+0x29e>
 8000320:	b2c0      	uxtb	r0, r0
 8000322:	01b2      	lsls	r2, r6, #6
 8000324:	0a52      	lsrs	r2, r2, #9
 8000326:	e7a8      	b.n	800027a <__aeabi_fadd+0xfe>
 8000328:	0773      	lsls	r3, r6, #29
 800032a:	d003      	beq.n	8000334 <__aeabi_fadd+0x1b8>
 800032c:	230f      	movs	r3, #15
 800032e:	4033      	ands	r3, r6
 8000330:	2b04      	cmp	r3, #4
 8000332:	d19a      	bne.n	800026a <__aeabi_fadd+0xee>
 8000334:	002b      	movs	r3, r5
 8000336:	e767      	b.n	8000208 <__aeabi_fadd+0x8c>
 8000338:	2b00      	cmp	r3, #0
 800033a:	d023      	beq.n	8000384 <__aeabi_fadd+0x208>
 800033c:	1b53      	subs	r3, r2, r5
 800033e:	2d00      	cmp	r5, #0
 8000340:	d17b      	bne.n	800043a <__aeabi_fadd+0x2be>
 8000342:	2e00      	cmp	r6, #0
 8000344:	d100      	bne.n	8000348 <__aeabi_fadd+0x1cc>
 8000346:	e086      	b.n	8000456 <__aeabi_fadd+0x2da>
 8000348:	1e5d      	subs	r5, r3, #1
 800034a:	2b01      	cmp	r3, #1
 800034c:	d100      	bne.n	8000350 <__aeabi_fadd+0x1d4>
 800034e:	e08b      	b.n	8000468 <__aeabi_fadd+0x2ec>
 8000350:	2bff      	cmp	r3, #255	@ 0xff
 8000352:	d002      	beq.n	800035a <__aeabi_fadd+0x1de>
 8000354:	002b      	movs	r3, r5
 8000356:	e075      	b.n	8000444 <__aeabi_fadd+0x2c8>
 8000358:	464c      	mov	r4, r9
 800035a:	4667      	mov	r7, ip
 800035c:	2f00      	cmp	r7, #0
 800035e:	d100      	bne.n	8000362 <__aeabi_fadd+0x1e6>
 8000360:	e789      	b.n	8000276 <__aeabi_fadd+0xfa>
 8000362:	2280      	movs	r2, #128	@ 0x80
 8000364:	03d2      	lsls	r2, r2, #15
 8000366:	433a      	orrs	r2, r7
 8000368:	0252      	lsls	r2, r2, #9
 800036a:	20ff      	movs	r0, #255	@ 0xff
 800036c:	0a52      	lsrs	r2, r2, #9
 800036e:	e784      	b.n	800027a <__aeabi_fadd+0xfe>
 8000370:	1a77      	subs	r7, r6, r1
 8000372:	017b      	lsls	r3, r7, #5
 8000374:	d46b      	bmi.n	800044e <__aeabi_fadd+0x2d2>
 8000376:	2f00      	cmp	r7, #0
 8000378:	d000      	beq.n	800037c <__aeabi_fadd+0x200>
 800037a:	e765      	b.n	8000248 <__aeabi_fadd+0xcc>
 800037c:	2400      	movs	r4, #0
 800037e:	2000      	movs	r0, #0
 8000380:	2200      	movs	r2, #0
 8000382:	e77a      	b.n	800027a <__aeabi_fadd+0xfe>
 8000384:	22fe      	movs	r2, #254	@ 0xfe
 8000386:	1c6b      	adds	r3, r5, #1
 8000388:	421a      	tst	r2, r3
 800038a:	d149      	bne.n	8000420 <__aeabi_fadd+0x2a4>
 800038c:	2d00      	cmp	r5, #0
 800038e:	d000      	beq.n	8000392 <__aeabi_fadd+0x216>
 8000390:	e09f      	b.n	80004d2 <__aeabi_fadd+0x356>
 8000392:	2e00      	cmp	r6, #0
 8000394:	d100      	bne.n	8000398 <__aeabi_fadd+0x21c>
 8000396:	e0ba      	b.n	800050e <__aeabi_fadd+0x392>
 8000398:	2900      	cmp	r1, #0
 800039a:	d100      	bne.n	800039e <__aeabi_fadd+0x222>
 800039c:	e0cf      	b.n	800053e <__aeabi_fadd+0x3c2>
 800039e:	1872      	adds	r2, r6, r1
 80003a0:	0153      	lsls	r3, r2, #5
 80003a2:	d400      	bmi.n	80003a6 <__aeabi_fadd+0x22a>
 80003a4:	e0cd      	b.n	8000542 <__aeabi_fadd+0x3c6>
 80003a6:	0192      	lsls	r2, r2, #6
 80003a8:	2001      	movs	r0, #1
 80003aa:	0a52      	lsrs	r2, r2, #9
 80003ac:	e765      	b.n	800027a <__aeabi_fadd+0xfe>
 80003ae:	2aff      	cmp	r2, #255	@ 0xff
 80003b0:	d0d2      	beq.n	8000358 <__aeabi_fadd+0x1dc>
 80003b2:	2080      	movs	r0, #128	@ 0x80
 80003b4:	04c0      	lsls	r0, r0, #19
 80003b6:	4306      	orrs	r6, r0
 80003b8:	2001      	movs	r0, #1
 80003ba:	2b1b      	cmp	r3, #27
 80003bc:	dc08      	bgt.n	80003d0 <__aeabi_fadd+0x254>
 80003be:	0030      	movs	r0, r6
 80003c0:	2420      	movs	r4, #32
 80003c2:	40d8      	lsrs	r0, r3
 80003c4:	1ae3      	subs	r3, r4, r3
 80003c6:	409e      	lsls	r6, r3
 80003c8:	0033      	movs	r3, r6
 80003ca:	1e5c      	subs	r4, r3, #1
 80003cc:	41a3      	sbcs	r3, r4
 80003ce:	4318      	orrs	r0, r3
 80003d0:	464c      	mov	r4, r9
 80003d2:	0015      	movs	r5, r2
 80003d4:	1a0e      	subs	r6, r1, r0
 80003d6:	e732      	b.n	800023e <__aeabi_fadd+0xc2>
 80003d8:	0008      	movs	r0, r1
 80003da:	2220      	movs	r2, #32
 80003dc:	40d8      	lsrs	r0, r3
 80003de:	1ad3      	subs	r3, r2, r3
 80003e0:	4099      	lsls	r1, r3
 80003e2:	000b      	movs	r3, r1
 80003e4:	1e5a      	subs	r2, r3, #1
 80003e6:	4193      	sbcs	r3, r2
 80003e8:	4303      	orrs	r3, r0
 80003ea:	18f6      	adds	r6, r6, r3
 80003ec:	0173      	lsls	r3, r6, #5
 80003ee:	d59b      	bpl.n	8000328 <__aeabi_fadd+0x1ac>
 80003f0:	3501      	adds	r5, #1
 80003f2:	2dff      	cmp	r5, #255	@ 0xff
 80003f4:	d100      	bne.n	80003f8 <__aeabi_fadd+0x27c>
 80003f6:	e73e      	b.n	8000276 <__aeabi_fadd+0xfa>
 80003f8:	2301      	movs	r3, #1
 80003fa:	494d      	ldr	r1, [pc, #308]	@ (8000530 <__aeabi_fadd+0x3b4>)
 80003fc:	0872      	lsrs	r2, r6, #1
 80003fe:	4033      	ands	r3, r6
 8000400:	400a      	ands	r2, r1
 8000402:	431a      	orrs	r2, r3
 8000404:	0016      	movs	r6, r2
 8000406:	0753      	lsls	r3, r2, #29
 8000408:	d004      	beq.n	8000414 <__aeabi_fadd+0x298>
 800040a:	230f      	movs	r3, #15
 800040c:	4013      	ands	r3, r2
 800040e:	2b04      	cmp	r3, #4
 8000410:	d000      	beq.n	8000414 <__aeabi_fadd+0x298>
 8000412:	e72a      	b.n	800026a <__aeabi_fadd+0xee>
 8000414:	0173      	lsls	r3, r6, #5
 8000416:	d500      	bpl.n	800041a <__aeabi_fadd+0x29e>
 8000418:	e72a      	b.n	8000270 <__aeabi_fadd+0xf4>
 800041a:	002b      	movs	r3, r5
 800041c:	08f7      	lsrs	r7, r6, #3
 800041e:	e6f7      	b.n	8000210 <__aeabi_fadd+0x94>
 8000420:	2bff      	cmp	r3, #255	@ 0xff
 8000422:	d100      	bne.n	8000426 <__aeabi_fadd+0x2aa>
 8000424:	e727      	b.n	8000276 <__aeabi_fadd+0xfa>
 8000426:	1871      	adds	r1, r6, r1
 8000428:	0849      	lsrs	r1, r1, #1
 800042a:	074a      	lsls	r2, r1, #29
 800042c:	d02f      	beq.n	800048e <__aeabi_fadd+0x312>
 800042e:	220f      	movs	r2, #15
 8000430:	400a      	ands	r2, r1
 8000432:	2a04      	cmp	r2, #4
 8000434:	d02b      	beq.n	800048e <__aeabi_fadd+0x312>
 8000436:	1d0e      	adds	r6, r1, #4
 8000438:	e6e6      	b.n	8000208 <__aeabi_fadd+0x8c>
 800043a:	2aff      	cmp	r2, #255	@ 0xff
 800043c:	d08d      	beq.n	800035a <__aeabi_fadd+0x1de>
 800043e:	2080      	movs	r0, #128	@ 0x80
 8000440:	04c0      	lsls	r0, r0, #19
 8000442:	4306      	orrs	r6, r0
 8000444:	2b1b      	cmp	r3, #27
 8000446:	dd24      	ble.n	8000492 <__aeabi_fadd+0x316>
 8000448:	0013      	movs	r3, r2
 800044a:	1d4e      	adds	r6, r1, #5
 800044c:	e6dc      	b.n	8000208 <__aeabi_fadd+0x8c>
 800044e:	464c      	mov	r4, r9
 8000450:	1b8f      	subs	r7, r1, r6
 8000452:	e6f9      	b.n	8000248 <__aeabi_fadd+0xcc>
 8000454:	464c      	mov	r4, r9
 8000456:	000e      	movs	r6, r1
 8000458:	e6d6      	b.n	8000208 <__aeabi_fadd+0x8c>
 800045a:	2e00      	cmp	r6, #0
 800045c:	d149      	bne.n	80004f2 <__aeabi_fadd+0x376>
 800045e:	2900      	cmp	r1, #0
 8000460:	d068      	beq.n	8000534 <__aeabi_fadd+0x3b8>
 8000462:	4667      	mov	r7, ip
 8000464:	464c      	mov	r4, r9
 8000466:	e77c      	b.n	8000362 <__aeabi_fadd+0x1e6>
 8000468:	1870      	adds	r0, r6, r1
 800046a:	0143      	lsls	r3, r0, #5
 800046c:	d574      	bpl.n	8000558 <__aeabi_fadd+0x3dc>
 800046e:	4930      	ldr	r1, [pc, #192]	@ (8000530 <__aeabi_fadd+0x3b4>)
 8000470:	0840      	lsrs	r0, r0, #1
 8000472:	4001      	ands	r1, r0
 8000474:	0743      	lsls	r3, r0, #29
 8000476:	d009      	beq.n	800048c <__aeabi_fadd+0x310>
 8000478:	230f      	movs	r3, #15
 800047a:	4003      	ands	r3, r0
 800047c:	2b04      	cmp	r3, #4
 800047e:	d005      	beq.n	800048c <__aeabi_fadd+0x310>
 8000480:	2302      	movs	r3, #2
 8000482:	1d0e      	adds	r6, r1, #4
 8000484:	e6c0      	b.n	8000208 <__aeabi_fadd+0x8c>
 8000486:	2301      	movs	r3, #1
 8000488:	08cf      	lsrs	r7, r1, #3
 800048a:	e6c1      	b.n	8000210 <__aeabi_fadd+0x94>
 800048c:	2302      	movs	r3, #2
 800048e:	08cf      	lsrs	r7, r1, #3
 8000490:	e6be      	b.n	8000210 <__aeabi_fadd+0x94>
 8000492:	2520      	movs	r5, #32
 8000494:	0030      	movs	r0, r6
 8000496:	40d8      	lsrs	r0, r3
 8000498:	1aeb      	subs	r3, r5, r3
 800049a:	409e      	lsls	r6, r3
 800049c:	0033      	movs	r3, r6
 800049e:	1e5d      	subs	r5, r3, #1
 80004a0:	41ab      	sbcs	r3, r5
 80004a2:	4303      	orrs	r3, r0
 80004a4:	0015      	movs	r5, r2
 80004a6:	185e      	adds	r6, r3, r1
 80004a8:	e7a0      	b.n	80003ec <__aeabi_fadd+0x270>
 80004aa:	2900      	cmp	r1, #0
 80004ac:	d100      	bne.n	80004b0 <__aeabi_fadd+0x334>
 80004ae:	e765      	b.n	800037c <__aeabi_fadd+0x200>
 80004b0:	464c      	mov	r4, r9
 80004b2:	4667      	mov	r7, ip
 80004b4:	e6ac      	b.n	8000210 <__aeabi_fadd+0x94>
 80004b6:	1b8f      	subs	r7, r1, r6
 80004b8:	017b      	lsls	r3, r7, #5
 80004ba:	d52e      	bpl.n	800051a <__aeabi_fadd+0x39e>
 80004bc:	01bf      	lsls	r7, r7, #6
 80004be:	09bf      	lsrs	r7, r7, #6
 80004c0:	0038      	movs	r0, r7
 80004c2:	f001 fa73 	bl	80019ac <__clzsi2>
 80004c6:	003b      	movs	r3, r7
 80004c8:	3805      	subs	r0, #5
 80004ca:	4083      	lsls	r3, r0
 80004cc:	464c      	mov	r4, r9
 80004ce:	3501      	adds	r5, #1
 80004d0:	e710      	b.n	80002f4 <__aeabi_fadd+0x178>
 80004d2:	2e00      	cmp	r6, #0
 80004d4:	d100      	bne.n	80004d8 <__aeabi_fadd+0x35c>
 80004d6:	e740      	b.n	800035a <__aeabi_fadd+0x1de>
 80004d8:	2900      	cmp	r1, #0
 80004da:	d100      	bne.n	80004de <__aeabi_fadd+0x362>
 80004dc:	e741      	b.n	8000362 <__aeabi_fadd+0x1e6>
 80004de:	2380      	movs	r3, #128	@ 0x80
 80004e0:	03db      	lsls	r3, r3, #15
 80004e2:	429f      	cmp	r7, r3
 80004e4:	d200      	bcs.n	80004e8 <__aeabi_fadd+0x36c>
 80004e6:	e73c      	b.n	8000362 <__aeabi_fadd+0x1e6>
 80004e8:	459c      	cmp	ip, r3
 80004ea:	d300      	bcc.n	80004ee <__aeabi_fadd+0x372>
 80004ec:	e739      	b.n	8000362 <__aeabi_fadd+0x1e6>
 80004ee:	4667      	mov	r7, ip
 80004f0:	e737      	b.n	8000362 <__aeabi_fadd+0x1e6>
 80004f2:	2900      	cmp	r1, #0
 80004f4:	d100      	bne.n	80004f8 <__aeabi_fadd+0x37c>
 80004f6:	e734      	b.n	8000362 <__aeabi_fadd+0x1e6>
 80004f8:	2380      	movs	r3, #128	@ 0x80
 80004fa:	03db      	lsls	r3, r3, #15
 80004fc:	429f      	cmp	r7, r3
 80004fe:	d200      	bcs.n	8000502 <__aeabi_fadd+0x386>
 8000500:	e72f      	b.n	8000362 <__aeabi_fadd+0x1e6>
 8000502:	459c      	cmp	ip, r3
 8000504:	d300      	bcc.n	8000508 <__aeabi_fadd+0x38c>
 8000506:	e72c      	b.n	8000362 <__aeabi_fadd+0x1e6>
 8000508:	464c      	mov	r4, r9
 800050a:	4667      	mov	r7, ip
 800050c:	e729      	b.n	8000362 <__aeabi_fadd+0x1e6>
 800050e:	2900      	cmp	r1, #0
 8000510:	d100      	bne.n	8000514 <__aeabi_fadd+0x398>
 8000512:	e734      	b.n	800037e <__aeabi_fadd+0x202>
 8000514:	2300      	movs	r3, #0
 8000516:	08cf      	lsrs	r7, r1, #3
 8000518:	e67a      	b.n	8000210 <__aeabi_fadd+0x94>
 800051a:	464c      	mov	r4, r9
 800051c:	2301      	movs	r3, #1
 800051e:	08ff      	lsrs	r7, r7, #3
 8000520:	e676      	b.n	8000210 <__aeabi_fadd+0x94>
 8000522:	2f00      	cmp	r7, #0
 8000524:	d100      	bne.n	8000528 <__aeabi_fadd+0x3ac>
 8000526:	e729      	b.n	800037c <__aeabi_fadd+0x200>
 8000528:	08ff      	lsrs	r7, r7, #3
 800052a:	e671      	b.n	8000210 <__aeabi_fadd+0x94>
 800052c:	fbffffff 	.word	0xfbffffff
 8000530:	7dffffff 	.word	0x7dffffff
 8000534:	2280      	movs	r2, #128	@ 0x80
 8000536:	2400      	movs	r4, #0
 8000538:	20ff      	movs	r0, #255	@ 0xff
 800053a:	03d2      	lsls	r2, r2, #15
 800053c:	e69d      	b.n	800027a <__aeabi_fadd+0xfe>
 800053e:	2300      	movs	r3, #0
 8000540:	e666      	b.n	8000210 <__aeabi_fadd+0x94>
 8000542:	2300      	movs	r3, #0
 8000544:	08d7      	lsrs	r7, r2, #3
 8000546:	e663      	b.n	8000210 <__aeabi_fadd+0x94>
 8000548:	2001      	movs	r0, #1
 800054a:	0172      	lsls	r2, r6, #5
 800054c:	d500      	bpl.n	8000550 <__aeabi_fadd+0x3d4>
 800054e:	e6e7      	b.n	8000320 <__aeabi_fadd+0x1a4>
 8000550:	0031      	movs	r1, r6
 8000552:	2300      	movs	r3, #0
 8000554:	08cf      	lsrs	r7, r1, #3
 8000556:	e65b      	b.n	8000210 <__aeabi_fadd+0x94>
 8000558:	2301      	movs	r3, #1
 800055a:	08c7      	lsrs	r7, r0, #3
 800055c:	e658      	b.n	8000210 <__aeabi_fadd+0x94>
 800055e:	46c0      	nop			@ (mov r8, r8)

08000560 <__eqsf2>:
 8000560:	b570      	push	{r4, r5, r6, lr}
 8000562:	0042      	lsls	r2, r0, #1
 8000564:	024e      	lsls	r6, r1, #9
 8000566:	004c      	lsls	r4, r1, #1
 8000568:	0245      	lsls	r5, r0, #9
 800056a:	0a6d      	lsrs	r5, r5, #9
 800056c:	0e12      	lsrs	r2, r2, #24
 800056e:	0fc3      	lsrs	r3, r0, #31
 8000570:	0a76      	lsrs	r6, r6, #9
 8000572:	0e24      	lsrs	r4, r4, #24
 8000574:	0fc9      	lsrs	r1, r1, #31
 8000576:	2aff      	cmp	r2, #255	@ 0xff
 8000578:	d010      	beq.n	800059c <__eqsf2+0x3c>
 800057a:	2cff      	cmp	r4, #255	@ 0xff
 800057c:	d00c      	beq.n	8000598 <__eqsf2+0x38>
 800057e:	2001      	movs	r0, #1
 8000580:	42a2      	cmp	r2, r4
 8000582:	d10a      	bne.n	800059a <__eqsf2+0x3a>
 8000584:	42b5      	cmp	r5, r6
 8000586:	d108      	bne.n	800059a <__eqsf2+0x3a>
 8000588:	428b      	cmp	r3, r1
 800058a:	d00f      	beq.n	80005ac <__eqsf2+0x4c>
 800058c:	2a00      	cmp	r2, #0
 800058e:	d104      	bne.n	800059a <__eqsf2+0x3a>
 8000590:	0028      	movs	r0, r5
 8000592:	1e43      	subs	r3, r0, #1
 8000594:	4198      	sbcs	r0, r3
 8000596:	e000      	b.n	800059a <__eqsf2+0x3a>
 8000598:	2001      	movs	r0, #1
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	2001      	movs	r0, #1
 800059e:	2cff      	cmp	r4, #255	@ 0xff
 80005a0:	d1fb      	bne.n	800059a <__eqsf2+0x3a>
 80005a2:	4335      	orrs	r5, r6
 80005a4:	d1f9      	bne.n	800059a <__eqsf2+0x3a>
 80005a6:	404b      	eors	r3, r1
 80005a8:	0018      	movs	r0, r3
 80005aa:	e7f6      	b.n	800059a <__eqsf2+0x3a>
 80005ac:	2000      	movs	r0, #0
 80005ae:	e7f4      	b.n	800059a <__eqsf2+0x3a>

080005b0 <__gesf2>:
 80005b0:	b530      	push	{r4, r5, lr}
 80005b2:	0042      	lsls	r2, r0, #1
 80005b4:	0244      	lsls	r4, r0, #9
 80005b6:	024d      	lsls	r5, r1, #9
 80005b8:	0fc3      	lsrs	r3, r0, #31
 80005ba:	0048      	lsls	r0, r1, #1
 80005bc:	0a64      	lsrs	r4, r4, #9
 80005be:	0e12      	lsrs	r2, r2, #24
 80005c0:	0a6d      	lsrs	r5, r5, #9
 80005c2:	0e00      	lsrs	r0, r0, #24
 80005c4:	0fc9      	lsrs	r1, r1, #31
 80005c6:	2aff      	cmp	r2, #255	@ 0xff
 80005c8:	d018      	beq.n	80005fc <__gesf2+0x4c>
 80005ca:	28ff      	cmp	r0, #255	@ 0xff
 80005cc:	d00a      	beq.n	80005e4 <__gesf2+0x34>
 80005ce:	2a00      	cmp	r2, #0
 80005d0:	d11e      	bne.n	8000610 <__gesf2+0x60>
 80005d2:	2800      	cmp	r0, #0
 80005d4:	d10a      	bne.n	80005ec <__gesf2+0x3c>
 80005d6:	2d00      	cmp	r5, #0
 80005d8:	d029      	beq.n	800062e <__gesf2+0x7e>
 80005da:	2c00      	cmp	r4, #0
 80005dc:	d12d      	bne.n	800063a <__gesf2+0x8a>
 80005de:	0048      	lsls	r0, r1, #1
 80005e0:	3801      	subs	r0, #1
 80005e2:	bd30      	pop	{r4, r5, pc}
 80005e4:	2d00      	cmp	r5, #0
 80005e6:	d125      	bne.n	8000634 <__gesf2+0x84>
 80005e8:	2a00      	cmp	r2, #0
 80005ea:	d101      	bne.n	80005f0 <__gesf2+0x40>
 80005ec:	2c00      	cmp	r4, #0
 80005ee:	d0f6      	beq.n	80005de <__gesf2+0x2e>
 80005f0:	428b      	cmp	r3, r1
 80005f2:	d019      	beq.n	8000628 <__gesf2+0x78>
 80005f4:	2001      	movs	r0, #1
 80005f6:	425b      	negs	r3, r3
 80005f8:	4318      	orrs	r0, r3
 80005fa:	e7f2      	b.n	80005e2 <__gesf2+0x32>
 80005fc:	2c00      	cmp	r4, #0
 80005fe:	d119      	bne.n	8000634 <__gesf2+0x84>
 8000600:	28ff      	cmp	r0, #255	@ 0xff
 8000602:	d1f7      	bne.n	80005f4 <__gesf2+0x44>
 8000604:	2d00      	cmp	r5, #0
 8000606:	d115      	bne.n	8000634 <__gesf2+0x84>
 8000608:	2000      	movs	r0, #0
 800060a:	428b      	cmp	r3, r1
 800060c:	d1f2      	bne.n	80005f4 <__gesf2+0x44>
 800060e:	e7e8      	b.n	80005e2 <__gesf2+0x32>
 8000610:	2800      	cmp	r0, #0
 8000612:	d0ef      	beq.n	80005f4 <__gesf2+0x44>
 8000614:	428b      	cmp	r3, r1
 8000616:	d1ed      	bne.n	80005f4 <__gesf2+0x44>
 8000618:	4282      	cmp	r2, r0
 800061a:	dceb      	bgt.n	80005f4 <__gesf2+0x44>
 800061c:	db04      	blt.n	8000628 <__gesf2+0x78>
 800061e:	42ac      	cmp	r4, r5
 8000620:	d8e8      	bhi.n	80005f4 <__gesf2+0x44>
 8000622:	2000      	movs	r0, #0
 8000624:	42ac      	cmp	r4, r5
 8000626:	d2dc      	bcs.n	80005e2 <__gesf2+0x32>
 8000628:	0058      	lsls	r0, r3, #1
 800062a:	3801      	subs	r0, #1
 800062c:	e7d9      	b.n	80005e2 <__gesf2+0x32>
 800062e:	2c00      	cmp	r4, #0
 8000630:	d0d7      	beq.n	80005e2 <__gesf2+0x32>
 8000632:	e7df      	b.n	80005f4 <__gesf2+0x44>
 8000634:	2002      	movs	r0, #2
 8000636:	4240      	negs	r0, r0
 8000638:	e7d3      	b.n	80005e2 <__gesf2+0x32>
 800063a:	428b      	cmp	r3, r1
 800063c:	d1da      	bne.n	80005f4 <__gesf2+0x44>
 800063e:	e7ee      	b.n	800061e <__gesf2+0x6e>

08000640 <__lesf2>:
 8000640:	b530      	push	{r4, r5, lr}
 8000642:	0042      	lsls	r2, r0, #1
 8000644:	0244      	lsls	r4, r0, #9
 8000646:	024d      	lsls	r5, r1, #9
 8000648:	0fc3      	lsrs	r3, r0, #31
 800064a:	0048      	lsls	r0, r1, #1
 800064c:	0a64      	lsrs	r4, r4, #9
 800064e:	0e12      	lsrs	r2, r2, #24
 8000650:	0a6d      	lsrs	r5, r5, #9
 8000652:	0e00      	lsrs	r0, r0, #24
 8000654:	0fc9      	lsrs	r1, r1, #31
 8000656:	2aff      	cmp	r2, #255	@ 0xff
 8000658:	d017      	beq.n	800068a <__lesf2+0x4a>
 800065a:	28ff      	cmp	r0, #255	@ 0xff
 800065c:	d00a      	beq.n	8000674 <__lesf2+0x34>
 800065e:	2a00      	cmp	r2, #0
 8000660:	d11b      	bne.n	800069a <__lesf2+0x5a>
 8000662:	2800      	cmp	r0, #0
 8000664:	d10a      	bne.n	800067c <__lesf2+0x3c>
 8000666:	2d00      	cmp	r5, #0
 8000668:	d01d      	beq.n	80006a6 <__lesf2+0x66>
 800066a:	2c00      	cmp	r4, #0
 800066c:	d12d      	bne.n	80006ca <__lesf2+0x8a>
 800066e:	0048      	lsls	r0, r1, #1
 8000670:	3801      	subs	r0, #1
 8000672:	e011      	b.n	8000698 <__lesf2+0x58>
 8000674:	2d00      	cmp	r5, #0
 8000676:	d10e      	bne.n	8000696 <__lesf2+0x56>
 8000678:	2a00      	cmp	r2, #0
 800067a:	d101      	bne.n	8000680 <__lesf2+0x40>
 800067c:	2c00      	cmp	r4, #0
 800067e:	d0f6      	beq.n	800066e <__lesf2+0x2e>
 8000680:	428b      	cmp	r3, r1
 8000682:	d10c      	bne.n	800069e <__lesf2+0x5e>
 8000684:	0058      	lsls	r0, r3, #1
 8000686:	3801      	subs	r0, #1
 8000688:	e006      	b.n	8000698 <__lesf2+0x58>
 800068a:	2c00      	cmp	r4, #0
 800068c:	d103      	bne.n	8000696 <__lesf2+0x56>
 800068e:	28ff      	cmp	r0, #255	@ 0xff
 8000690:	d105      	bne.n	800069e <__lesf2+0x5e>
 8000692:	2d00      	cmp	r5, #0
 8000694:	d015      	beq.n	80006c2 <__lesf2+0x82>
 8000696:	2002      	movs	r0, #2
 8000698:	bd30      	pop	{r4, r5, pc}
 800069a:	2800      	cmp	r0, #0
 800069c:	d106      	bne.n	80006ac <__lesf2+0x6c>
 800069e:	2001      	movs	r0, #1
 80006a0:	425b      	negs	r3, r3
 80006a2:	4318      	orrs	r0, r3
 80006a4:	e7f8      	b.n	8000698 <__lesf2+0x58>
 80006a6:	2c00      	cmp	r4, #0
 80006a8:	d0f6      	beq.n	8000698 <__lesf2+0x58>
 80006aa:	e7f8      	b.n	800069e <__lesf2+0x5e>
 80006ac:	428b      	cmp	r3, r1
 80006ae:	d1f6      	bne.n	800069e <__lesf2+0x5e>
 80006b0:	4282      	cmp	r2, r0
 80006b2:	dcf4      	bgt.n	800069e <__lesf2+0x5e>
 80006b4:	dbe6      	blt.n	8000684 <__lesf2+0x44>
 80006b6:	42ac      	cmp	r4, r5
 80006b8:	d8f1      	bhi.n	800069e <__lesf2+0x5e>
 80006ba:	2000      	movs	r0, #0
 80006bc:	42ac      	cmp	r4, r5
 80006be:	d2eb      	bcs.n	8000698 <__lesf2+0x58>
 80006c0:	e7e0      	b.n	8000684 <__lesf2+0x44>
 80006c2:	2000      	movs	r0, #0
 80006c4:	428b      	cmp	r3, r1
 80006c6:	d1ea      	bne.n	800069e <__lesf2+0x5e>
 80006c8:	e7e6      	b.n	8000698 <__lesf2+0x58>
 80006ca:	428b      	cmp	r3, r1
 80006cc:	d1e7      	bne.n	800069e <__lesf2+0x5e>
 80006ce:	e7f2      	b.n	80006b6 <__lesf2+0x76>

080006d0 <__aeabi_fmul>:
 80006d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006d2:	464f      	mov	r7, r9
 80006d4:	4646      	mov	r6, r8
 80006d6:	46d6      	mov	lr, sl
 80006d8:	0044      	lsls	r4, r0, #1
 80006da:	b5c0      	push	{r6, r7, lr}
 80006dc:	0246      	lsls	r6, r0, #9
 80006de:	1c0f      	adds	r7, r1, #0
 80006e0:	0a76      	lsrs	r6, r6, #9
 80006e2:	0e24      	lsrs	r4, r4, #24
 80006e4:	0fc5      	lsrs	r5, r0, #31
 80006e6:	2c00      	cmp	r4, #0
 80006e8:	d100      	bne.n	80006ec <__aeabi_fmul+0x1c>
 80006ea:	e0da      	b.n	80008a2 <__aeabi_fmul+0x1d2>
 80006ec:	2cff      	cmp	r4, #255	@ 0xff
 80006ee:	d074      	beq.n	80007da <__aeabi_fmul+0x10a>
 80006f0:	2380      	movs	r3, #128	@ 0x80
 80006f2:	00f6      	lsls	r6, r6, #3
 80006f4:	04db      	lsls	r3, r3, #19
 80006f6:	431e      	orrs	r6, r3
 80006f8:	2300      	movs	r3, #0
 80006fa:	4699      	mov	r9, r3
 80006fc:	469a      	mov	sl, r3
 80006fe:	3c7f      	subs	r4, #127	@ 0x7f
 8000700:	027b      	lsls	r3, r7, #9
 8000702:	0a5b      	lsrs	r3, r3, #9
 8000704:	4698      	mov	r8, r3
 8000706:	007b      	lsls	r3, r7, #1
 8000708:	0e1b      	lsrs	r3, r3, #24
 800070a:	0fff      	lsrs	r7, r7, #31
 800070c:	2b00      	cmp	r3, #0
 800070e:	d074      	beq.n	80007fa <__aeabi_fmul+0x12a>
 8000710:	2bff      	cmp	r3, #255	@ 0xff
 8000712:	d100      	bne.n	8000716 <__aeabi_fmul+0x46>
 8000714:	e08e      	b.n	8000834 <__aeabi_fmul+0x164>
 8000716:	4642      	mov	r2, r8
 8000718:	2180      	movs	r1, #128	@ 0x80
 800071a:	00d2      	lsls	r2, r2, #3
 800071c:	04c9      	lsls	r1, r1, #19
 800071e:	4311      	orrs	r1, r2
 8000720:	3b7f      	subs	r3, #127	@ 0x7f
 8000722:	002a      	movs	r2, r5
 8000724:	18e4      	adds	r4, r4, r3
 8000726:	464b      	mov	r3, r9
 8000728:	407a      	eors	r2, r7
 800072a:	4688      	mov	r8, r1
 800072c:	b2d2      	uxtb	r2, r2
 800072e:	2b0a      	cmp	r3, #10
 8000730:	dc75      	bgt.n	800081e <__aeabi_fmul+0x14e>
 8000732:	464b      	mov	r3, r9
 8000734:	2000      	movs	r0, #0
 8000736:	2b02      	cmp	r3, #2
 8000738:	dd0f      	ble.n	800075a <__aeabi_fmul+0x8a>
 800073a:	4649      	mov	r1, r9
 800073c:	2301      	movs	r3, #1
 800073e:	408b      	lsls	r3, r1
 8000740:	21a6      	movs	r1, #166	@ 0xa6
 8000742:	00c9      	lsls	r1, r1, #3
 8000744:	420b      	tst	r3, r1
 8000746:	d169      	bne.n	800081c <__aeabi_fmul+0x14c>
 8000748:	2190      	movs	r1, #144	@ 0x90
 800074a:	0089      	lsls	r1, r1, #2
 800074c:	420b      	tst	r3, r1
 800074e:	d000      	beq.n	8000752 <__aeabi_fmul+0x82>
 8000750:	e100      	b.n	8000954 <__aeabi_fmul+0x284>
 8000752:	2188      	movs	r1, #136	@ 0x88
 8000754:	4219      	tst	r1, r3
 8000756:	d000      	beq.n	800075a <__aeabi_fmul+0x8a>
 8000758:	e0f5      	b.n	8000946 <__aeabi_fmul+0x276>
 800075a:	4641      	mov	r1, r8
 800075c:	0409      	lsls	r1, r1, #16
 800075e:	0c09      	lsrs	r1, r1, #16
 8000760:	4643      	mov	r3, r8
 8000762:	0008      	movs	r0, r1
 8000764:	0c35      	lsrs	r5, r6, #16
 8000766:	0436      	lsls	r6, r6, #16
 8000768:	0c1b      	lsrs	r3, r3, #16
 800076a:	0c36      	lsrs	r6, r6, #16
 800076c:	4370      	muls	r0, r6
 800076e:	4369      	muls	r1, r5
 8000770:	435e      	muls	r6, r3
 8000772:	435d      	muls	r5, r3
 8000774:	1876      	adds	r6, r6, r1
 8000776:	0c03      	lsrs	r3, r0, #16
 8000778:	199b      	adds	r3, r3, r6
 800077a:	4299      	cmp	r1, r3
 800077c:	d903      	bls.n	8000786 <__aeabi_fmul+0xb6>
 800077e:	2180      	movs	r1, #128	@ 0x80
 8000780:	0249      	lsls	r1, r1, #9
 8000782:	468c      	mov	ip, r1
 8000784:	4465      	add	r5, ip
 8000786:	0400      	lsls	r0, r0, #16
 8000788:	0419      	lsls	r1, r3, #16
 800078a:	0c00      	lsrs	r0, r0, #16
 800078c:	1809      	adds	r1, r1, r0
 800078e:	018e      	lsls	r6, r1, #6
 8000790:	1e70      	subs	r0, r6, #1
 8000792:	4186      	sbcs	r6, r0
 8000794:	0c1b      	lsrs	r3, r3, #16
 8000796:	0e89      	lsrs	r1, r1, #26
 8000798:	195b      	adds	r3, r3, r5
 800079a:	430e      	orrs	r6, r1
 800079c:	019b      	lsls	r3, r3, #6
 800079e:	431e      	orrs	r6, r3
 80007a0:	011b      	lsls	r3, r3, #4
 80007a2:	d46c      	bmi.n	800087e <__aeabi_fmul+0x1ae>
 80007a4:	0023      	movs	r3, r4
 80007a6:	337f      	adds	r3, #127	@ 0x7f
 80007a8:	2b00      	cmp	r3, #0
 80007aa:	dc00      	bgt.n	80007ae <__aeabi_fmul+0xde>
 80007ac:	e0b1      	b.n	8000912 <__aeabi_fmul+0x242>
 80007ae:	0015      	movs	r5, r2
 80007b0:	0771      	lsls	r1, r6, #29
 80007b2:	d00b      	beq.n	80007cc <__aeabi_fmul+0xfc>
 80007b4:	200f      	movs	r0, #15
 80007b6:	0021      	movs	r1, r4
 80007b8:	4030      	ands	r0, r6
 80007ba:	2804      	cmp	r0, #4
 80007bc:	d006      	beq.n	80007cc <__aeabi_fmul+0xfc>
 80007be:	3604      	adds	r6, #4
 80007c0:	0132      	lsls	r2, r6, #4
 80007c2:	d503      	bpl.n	80007cc <__aeabi_fmul+0xfc>
 80007c4:	4b6e      	ldr	r3, [pc, #440]	@ (8000980 <__aeabi_fmul+0x2b0>)
 80007c6:	401e      	ands	r6, r3
 80007c8:	000b      	movs	r3, r1
 80007ca:	3380      	adds	r3, #128	@ 0x80
 80007cc:	2bfe      	cmp	r3, #254	@ 0xfe
 80007ce:	dd00      	ble.n	80007d2 <__aeabi_fmul+0x102>
 80007d0:	e0bd      	b.n	800094e <__aeabi_fmul+0x27e>
 80007d2:	01b2      	lsls	r2, r6, #6
 80007d4:	0a52      	lsrs	r2, r2, #9
 80007d6:	b2db      	uxtb	r3, r3
 80007d8:	e048      	b.n	800086c <__aeabi_fmul+0x19c>
 80007da:	2e00      	cmp	r6, #0
 80007dc:	d000      	beq.n	80007e0 <__aeabi_fmul+0x110>
 80007de:	e092      	b.n	8000906 <__aeabi_fmul+0x236>
 80007e0:	2308      	movs	r3, #8
 80007e2:	4699      	mov	r9, r3
 80007e4:	3b06      	subs	r3, #6
 80007e6:	469a      	mov	sl, r3
 80007e8:	027b      	lsls	r3, r7, #9
 80007ea:	0a5b      	lsrs	r3, r3, #9
 80007ec:	4698      	mov	r8, r3
 80007ee:	007b      	lsls	r3, r7, #1
 80007f0:	24ff      	movs	r4, #255	@ 0xff
 80007f2:	0e1b      	lsrs	r3, r3, #24
 80007f4:	0fff      	lsrs	r7, r7, #31
 80007f6:	2b00      	cmp	r3, #0
 80007f8:	d18a      	bne.n	8000710 <__aeabi_fmul+0x40>
 80007fa:	4642      	mov	r2, r8
 80007fc:	2a00      	cmp	r2, #0
 80007fe:	d164      	bne.n	80008ca <__aeabi_fmul+0x1fa>
 8000800:	4649      	mov	r1, r9
 8000802:	3201      	adds	r2, #1
 8000804:	4311      	orrs	r1, r2
 8000806:	4689      	mov	r9, r1
 8000808:	290a      	cmp	r1, #10
 800080a:	dc08      	bgt.n	800081e <__aeabi_fmul+0x14e>
 800080c:	407d      	eors	r5, r7
 800080e:	2001      	movs	r0, #1
 8000810:	b2ea      	uxtb	r2, r5
 8000812:	2902      	cmp	r1, #2
 8000814:	dc91      	bgt.n	800073a <__aeabi_fmul+0x6a>
 8000816:	0015      	movs	r5, r2
 8000818:	2200      	movs	r2, #0
 800081a:	e027      	b.n	800086c <__aeabi_fmul+0x19c>
 800081c:	0015      	movs	r5, r2
 800081e:	4653      	mov	r3, sl
 8000820:	2b02      	cmp	r3, #2
 8000822:	d100      	bne.n	8000826 <__aeabi_fmul+0x156>
 8000824:	e093      	b.n	800094e <__aeabi_fmul+0x27e>
 8000826:	2b03      	cmp	r3, #3
 8000828:	d01a      	beq.n	8000860 <__aeabi_fmul+0x190>
 800082a:	2b01      	cmp	r3, #1
 800082c:	d12c      	bne.n	8000888 <__aeabi_fmul+0x1b8>
 800082e:	2300      	movs	r3, #0
 8000830:	2200      	movs	r2, #0
 8000832:	e01b      	b.n	800086c <__aeabi_fmul+0x19c>
 8000834:	4643      	mov	r3, r8
 8000836:	34ff      	adds	r4, #255	@ 0xff
 8000838:	2b00      	cmp	r3, #0
 800083a:	d055      	beq.n	80008e8 <__aeabi_fmul+0x218>
 800083c:	2103      	movs	r1, #3
 800083e:	464b      	mov	r3, r9
 8000840:	430b      	orrs	r3, r1
 8000842:	0019      	movs	r1, r3
 8000844:	2b0a      	cmp	r3, #10
 8000846:	dc00      	bgt.n	800084a <__aeabi_fmul+0x17a>
 8000848:	e092      	b.n	8000970 <__aeabi_fmul+0x2a0>
 800084a:	2b0f      	cmp	r3, #15
 800084c:	d000      	beq.n	8000850 <__aeabi_fmul+0x180>
 800084e:	e08c      	b.n	800096a <__aeabi_fmul+0x29a>
 8000850:	2280      	movs	r2, #128	@ 0x80
 8000852:	03d2      	lsls	r2, r2, #15
 8000854:	4216      	tst	r6, r2
 8000856:	d003      	beq.n	8000860 <__aeabi_fmul+0x190>
 8000858:	4643      	mov	r3, r8
 800085a:	4213      	tst	r3, r2
 800085c:	d100      	bne.n	8000860 <__aeabi_fmul+0x190>
 800085e:	e07d      	b.n	800095c <__aeabi_fmul+0x28c>
 8000860:	2280      	movs	r2, #128	@ 0x80
 8000862:	03d2      	lsls	r2, r2, #15
 8000864:	4332      	orrs	r2, r6
 8000866:	0252      	lsls	r2, r2, #9
 8000868:	0a52      	lsrs	r2, r2, #9
 800086a:	23ff      	movs	r3, #255	@ 0xff
 800086c:	05d8      	lsls	r0, r3, #23
 800086e:	07ed      	lsls	r5, r5, #31
 8000870:	4310      	orrs	r0, r2
 8000872:	4328      	orrs	r0, r5
 8000874:	bce0      	pop	{r5, r6, r7}
 8000876:	46ba      	mov	sl, r7
 8000878:	46b1      	mov	r9, r6
 800087a:	46a8      	mov	r8, r5
 800087c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800087e:	2301      	movs	r3, #1
 8000880:	0015      	movs	r5, r2
 8000882:	0871      	lsrs	r1, r6, #1
 8000884:	401e      	ands	r6, r3
 8000886:	430e      	orrs	r6, r1
 8000888:	0023      	movs	r3, r4
 800088a:	3380      	adds	r3, #128	@ 0x80
 800088c:	1c61      	adds	r1, r4, #1
 800088e:	2b00      	cmp	r3, #0
 8000890:	dd41      	ble.n	8000916 <__aeabi_fmul+0x246>
 8000892:	0772      	lsls	r2, r6, #29
 8000894:	d094      	beq.n	80007c0 <__aeabi_fmul+0xf0>
 8000896:	220f      	movs	r2, #15
 8000898:	4032      	ands	r2, r6
 800089a:	2a04      	cmp	r2, #4
 800089c:	d000      	beq.n	80008a0 <__aeabi_fmul+0x1d0>
 800089e:	e78e      	b.n	80007be <__aeabi_fmul+0xee>
 80008a0:	e78e      	b.n	80007c0 <__aeabi_fmul+0xf0>
 80008a2:	2e00      	cmp	r6, #0
 80008a4:	d105      	bne.n	80008b2 <__aeabi_fmul+0x1e2>
 80008a6:	2304      	movs	r3, #4
 80008a8:	4699      	mov	r9, r3
 80008aa:	3b03      	subs	r3, #3
 80008ac:	2400      	movs	r4, #0
 80008ae:	469a      	mov	sl, r3
 80008b0:	e726      	b.n	8000700 <__aeabi_fmul+0x30>
 80008b2:	0030      	movs	r0, r6
 80008b4:	f001 f87a 	bl	80019ac <__clzsi2>
 80008b8:	2476      	movs	r4, #118	@ 0x76
 80008ba:	1f43      	subs	r3, r0, #5
 80008bc:	409e      	lsls	r6, r3
 80008be:	2300      	movs	r3, #0
 80008c0:	4264      	negs	r4, r4
 80008c2:	4699      	mov	r9, r3
 80008c4:	469a      	mov	sl, r3
 80008c6:	1a24      	subs	r4, r4, r0
 80008c8:	e71a      	b.n	8000700 <__aeabi_fmul+0x30>
 80008ca:	4640      	mov	r0, r8
 80008cc:	f001 f86e 	bl	80019ac <__clzsi2>
 80008d0:	464b      	mov	r3, r9
 80008d2:	1a24      	subs	r4, r4, r0
 80008d4:	3c76      	subs	r4, #118	@ 0x76
 80008d6:	2b0a      	cmp	r3, #10
 80008d8:	dca1      	bgt.n	800081e <__aeabi_fmul+0x14e>
 80008da:	4643      	mov	r3, r8
 80008dc:	3805      	subs	r0, #5
 80008de:	4083      	lsls	r3, r0
 80008e0:	407d      	eors	r5, r7
 80008e2:	4698      	mov	r8, r3
 80008e4:	b2ea      	uxtb	r2, r5
 80008e6:	e724      	b.n	8000732 <__aeabi_fmul+0x62>
 80008e8:	464a      	mov	r2, r9
 80008ea:	3302      	adds	r3, #2
 80008ec:	4313      	orrs	r3, r2
 80008ee:	002a      	movs	r2, r5
 80008f0:	407a      	eors	r2, r7
 80008f2:	b2d2      	uxtb	r2, r2
 80008f4:	2b0a      	cmp	r3, #10
 80008f6:	dc92      	bgt.n	800081e <__aeabi_fmul+0x14e>
 80008f8:	4649      	mov	r1, r9
 80008fa:	0015      	movs	r5, r2
 80008fc:	2900      	cmp	r1, #0
 80008fe:	d026      	beq.n	800094e <__aeabi_fmul+0x27e>
 8000900:	4699      	mov	r9, r3
 8000902:	2002      	movs	r0, #2
 8000904:	e719      	b.n	800073a <__aeabi_fmul+0x6a>
 8000906:	230c      	movs	r3, #12
 8000908:	4699      	mov	r9, r3
 800090a:	3b09      	subs	r3, #9
 800090c:	24ff      	movs	r4, #255	@ 0xff
 800090e:	469a      	mov	sl, r3
 8000910:	e6f6      	b.n	8000700 <__aeabi_fmul+0x30>
 8000912:	0015      	movs	r5, r2
 8000914:	0021      	movs	r1, r4
 8000916:	2201      	movs	r2, #1
 8000918:	1ad3      	subs	r3, r2, r3
 800091a:	2b1b      	cmp	r3, #27
 800091c:	dd00      	ble.n	8000920 <__aeabi_fmul+0x250>
 800091e:	e786      	b.n	800082e <__aeabi_fmul+0x15e>
 8000920:	319e      	adds	r1, #158	@ 0x9e
 8000922:	0032      	movs	r2, r6
 8000924:	408e      	lsls	r6, r1
 8000926:	40da      	lsrs	r2, r3
 8000928:	1e73      	subs	r3, r6, #1
 800092a:	419e      	sbcs	r6, r3
 800092c:	4332      	orrs	r2, r6
 800092e:	0753      	lsls	r3, r2, #29
 8000930:	d004      	beq.n	800093c <__aeabi_fmul+0x26c>
 8000932:	230f      	movs	r3, #15
 8000934:	4013      	ands	r3, r2
 8000936:	2b04      	cmp	r3, #4
 8000938:	d000      	beq.n	800093c <__aeabi_fmul+0x26c>
 800093a:	3204      	adds	r2, #4
 800093c:	0153      	lsls	r3, r2, #5
 800093e:	d510      	bpl.n	8000962 <__aeabi_fmul+0x292>
 8000940:	2301      	movs	r3, #1
 8000942:	2200      	movs	r2, #0
 8000944:	e792      	b.n	800086c <__aeabi_fmul+0x19c>
 8000946:	003d      	movs	r5, r7
 8000948:	4646      	mov	r6, r8
 800094a:	4682      	mov	sl, r0
 800094c:	e767      	b.n	800081e <__aeabi_fmul+0x14e>
 800094e:	23ff      	movs	r3, #255	@ 0xff
 8000950:	2200      	movs	r2, #0
 8000952:	e78b      	b.n	800086c <__aeabi_fmul+0x19c>
 8000954:	2280      	movs	r2, #128	@ 0x80
 8000956:	2500      	movs	r5, #0
 8000958:	03d2      	lsls	r2, r2, #15
 800095a:	e786      	b.n	800086a <__aeabi_fmul+0x19a>
 800095c:	003d      	movs	r5, r7
 800095e:	431a      	orrs	r2, r3
 8000960:	e783      	b.n	800086a <__aeabi_fmul+0x19a>
 8000962:	0192      	lsls	r2, r2, #6
 8000964:	2300      	movs	r3, #0
 8000966:	0a52      	lsrs	r2, r2, #9
 8000968:	e780      	b.n	800086c <__aeabi_fmul+0x19c>
 800096a:	003d      	movs	r5, r7
 800096c:	4646      	mov	r6, r8
 800096e:	e777      	b.n	8000860 <__aeabi_fmul+0x190>
 8000970:	002a      	movs	r2, r5
 8000972:	2301      	movs	r3, #1
 8000974:	407a      	eors	r2, r7
 8000976:	408b      	lsls	r3, r1
 8000978:	2003      	movs	r0, #3
 800097a:	b2d2      	uxtb	r2, r2
 800097c:	e6e9      	b.n	8000752 <__aeabi_fmul+0x82>
 800097e:	46c0      	nop			@ (mov r8, r8)
 8000980:	f7ffffff 	.word	0xf7ffffff

08000984 <__aeabi_f2iz>:
 8000984:	0241      	lsls	r1, r0, #9
 8000986:	0042      	lsls	r2, r0, #1
 8000988:	0fc3      	lsrs	r3, r0, #31
 800098a:	0a49      	lsrs	r1, r1, #9
 800098c:	2000      	movs	r0, #0
 800098e:	0e12      	lsrs	r2, r2, #24
 8000990:	2a7e      	cmp	r2, #126	@ 0x7e
 8000992:	dd03      	ble.n	800099c <__aeabi_f2iz+0x18>
 8000994:	2a9d      	cmp	r2, #157	@ 0x9d
 8000996:	dd02      	ble.n	800099e <__aeabi_f2iz+0x1a>
 8000998:	4a09      	ldr	r2, [pc, #36]	@ (80009c0 <__aeabi_f2iz+0x3c>)
 800099a:	1898      	adds	r0, r3, r2
 800099c:	4770      	bx	lr
 800099e:	2080      	movs	r0, #128	@ 0x80
 80009a0:	0400      	lsls	r0, r0, #16
 80009a2:	4301      	orrs	r1, r0
 80009a4:	2a95      	cmp	r2, #149	@ 0x95
 80009a6:	dc07      	bgt.n	80009b8 <__aeabi_f2iz+0x34>
 80009a8:	2096      	movs	r0, #150	@ 0x96
 80009aa:	1a82      	subs	r2, r0, r2
 80009ac:	40d1      	lsrs	r1, r2
 80009ae:	4248      	negs	r0, r1
 80009b0:	2b00      	cmp	r3, #0
 80009b2:	d1f3      	bne.n	800099c <__aeabi_f2iz+0x18>
 80009b4:	0008      	movs	r0, r1
 80009b6:	e7f1      	b.n	800099c <__aeabi_f2iz+0x18>
 80009b8:	3a96      	subs	r2, #150	@ 0x96
 80009ba:	4091      	lsls	r1, r2
 80009bc:	e7f7      	b.n	80009ae <__aeabi_f2iz+0x2a>
 80009be:	46c0      	nop			@ (mov r8, r8)
 80009c0:	7fffffff 	.word	0x7fffffff

080009c4 <__aeabi_i2f>:
 80009c4:	b570      	push	{r4, r5, r6, lr}
 80009c6:	2800      	cmp	r0, #0
 80009c8:	d012      	beq.n	80009f0 <__aeabi_i2f+0x2c>
 80009ca:	17c3      	asrs	r3, r0, #31
 80009cc:	18c5      	adds	r5, r0, r3
 80009ce:	405d      	eors	r5, r3
 80009d0:	0fc4      	lsrs	r4, r0, #31
 80009d2:	0028      	movs	r0, r5
 80009d4:	f000 ffea 	bl	80019ac <__clzsi2>
 80009d8:	239e      	movs	r3, #158	@ 0x9e
 80009da:	1a1b      	subs	r3, r3, r0
 80009dc:	2b96      	cmp	r3, #150	@ 0x96
 80009de:	dc0f      	bgt.n	8000a00 <__aeabi_i2f+0x3c>
 80009e0:	2808      	cmp	r0, #8
 80009e2:	d038      	beq.n	8000a56 <__aeabi_i2f+0x92>
 80009e4:	3808      	subs	r0, #8
 80009e6:	4085      	lsls	r5, r0
 80009e8:	026d      	lsls	r5, r5, #9
 80009ea:	0a6d      	lsrs	r5, r5, #9
 80009ec:	b2d8      	uxtb	r0, r3
 80009ee:	e002      	b.n	80009f6 <__aeabi_i2f+0x32>
 80009f0:	2400      	movs	r4, #0
 80009f2:	2000      	movs	r0, #0
 80009f4:	2500      	movs	r5, #0
 80009f6:	05c0      	lsls	r0, r0, #23
 80009f8:	4328      	orrs	r0, r5
 80009fa:	07e4      	lsls	r4, r4, #31
 80009fc:	4320      	orrs	r0, r4
 80009fe:	bd70      	pop	{r4, r5, r6, pc}
 8000a00:	2b99      	cmp	r3, #153	@ 0x99
 8000a02:	dc14      	bgt.n	8000a2e <__aeabi_i2f+0x6a>
 8000a04:	1f42      	subs	r2, r0, #5
 8000a06:	4095      	lsls	r5, r2
 8000a08:	002a      	movs	r2, r5
 8000a0a:	4915      	ldr	r1, [pc, #84]	@ (8000a60 <__aeabi_i2f+0x9c>)
 8000a0c:	4011      	ands	r1, r2
 8000a0e:	0755      	lsls	r5, r2, #29
 8000a10:	d01c      	beq.n	8000a4c <__aeabi_i2f+0x88>
 8000a12:	250f      	movs	r5, #15
 8000a14:	402a      	ands	r2, r5
 8000a16:	2a04      	cmp	r2, #4
 8000a18:	d018      	beq.n	8000a4c <__aeabi_i2f+0x88>
 8000a1a:	3104      	adds	r1, #4
 8000a1c:	08ca      	lsrs	r2, r1, #3
 8000a1e:	0149      	lsls	r1, r1, #5
 8000a20:	d515      	bpl.n	8000a4e <__aeabi_i2f+0x8a>
 8000a22:	239f      	movs	r3, #159	@ 0x9f
 8000a24:	0252      	lsls	r2, r2, #9
 8000a26:	1a18      	subs	r0, r3, r0
 8000a28:	0a55      	lsrs	r5, r2, #9
 8000a2a:	b2c0      	uxtb	r0, r0
 8000a2c:	e7e3      	b.n	80009f6 <__aeabi_i2f+0x32>
 8000a2e:	2205      	movs	r2, #5
 8000a30:	0029      	movs	r1, r5
 8000a32:	1a12      	subs	r2, r2, r0
 8000a34:	40d1      	lsrs	r1, r2
 8000a36:	0002      	movs	r2, r0
 8000a38:	321b      	adds	r2, #27
 8000a3a:	4095      	lsls	r5, r2
 8000a3c:	002a      	movs	r2, r5
 8000a3e:	1e55      	subs	r5, r2, #1
 8000a40:	41aa      	sbcs	r2, r5
 8000a42:	430a      	orrs	r2, r1
 8000a44:	4906      	ldr	r1, [pc, #24]	@ (8000a60 <__aeabi_i2f+0x9c>)
 8000a46:	4011      	ands	r1, r2
 8000a48:	0755      	lsls	r5, r2, #29
 8000a4a:	d1e2      	bne.n	8000a12 <__aeabi_i2f+0x4e>
 8000a4c:	08ca      	lsrs	r2, r1, #3
 8000a4e:	0252      	lsls	r2, r2, #9
 8000a50:	0a55      	lsrs	r5, r2, #9
 8000a52:	b2d8      	uxtb	r0, r3
 8000a54:	e7cf      	b.n	80009f6 <__aeabi_i2f+0x32>
 8000a56:	026d      	lsls	r5, r5, #9
 8000a58:	0a6d      	lsrs	r5, r5, #9
 8000a5a:	308e      	adds	r0, #142	@ 0x8e
 8000a5c:	e7cb      	b.n	80009f6 <__aeabi_i2f+0x32>
 8000a5e:	46c0      	nop			@ (mov r8, r8)
 8000a60:	fbffffff 	.word	0xfbffffff

08000a64 <__aeabi_dadd>:
 8000a64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000a66:	464f      	mov	r7, r9
 8000a68:	4646      	mov	r6, r8
 8000a6a:	46d6      	mov	lr, sl
 8000a6c:	b5c0      	push	{r6, r7, lr}
 8000a6e:	b082      	sub	sp, #8
 8000a70:	9000      	str	r0, [sp, #0]
 8000a72:	9101      	str	r1, [sp, #4]
 8000a74:	030e      	lsls	r6, r1, #12
 8000a76:	004c      	lsls	r4, r1, #1
 8000a78:	0fcd      	lsrs	r5, r1, #31
 8000a7a:	0a71      	lsrs	r1, r6, #9
 8000a7c:	9e00      	ldr	r6, [sp, #0]
 8000a7e:	005f      	lsls	r7, r3, #1
 8000a80:	0f76      	lsrs	r6, r6, #29
 8000a82:	430e      	orrs	r6, r1
 8000a84:	9900      	ldr	r1, [sp, #0]
 8000a86:	9200      	str	r2, [sp, #0]
 8000a88:	9301      	str	r3, [sp, #4]
 8000a8a:	00c9      	lsls	r1, r1, #3
 8000a8c:	4689      	mov	r9, r1
 8000a8e:	0319      	lsls	r1, r3, #12
 8000a90:	0d7b      	lsrs	r3, r7, #21
 8000a92:	4698      	mov	r8, r3
 8000a94:	9b01      	ldr	r3, [sp, #4]
 8000a96:	0a49      	lsrs	r1, r1, #9
 8000a98:	0fdb      	lsrs	r3, r3, #31
 8000a9a:	469c      	mov	ip, r3
 8000a9c:	9b00      	ldr	r3, [sp, #0]
 8000a9e:	9a00      	ldr	r2, [sp, #0]
 8000aa0:	0f5b      	lsrs	r3, r3, #29
 8000aa2:	430b      	orrs	r3, r1
 8000aa4:	4641      	mov	r1, r8
 8000aa6:	0d64      	lsrs	r4, r4, #21
 8000aa8:	00d2      	lsls	r2, r2, #3
 8000aaa:	1a61      	subs	r1, r4, r1
 8000aac:	4565      	cmp	r5, ip
 8000aae:	d100      	bne.n	8000ab2 <__aeabi_dadd+0x4e>
 8000ab0:	e0a6      	b.n	8000c00 <__aeabi_dadd+0x19c>
 8000ab2:	2900      	cmp	r1, #0
 8000ab4:	dd72      	ble.n	8000b9c <__aeabi_dadd+0x138>
 8000ab6:	4647      	mov	r7, r8
 8000ab8:	2f00      	cmp	r7, #0
 8000aba:	d100      	bne.n	8000abe <__aeabi_dadd+0x5a>
 8000abc:	e0dd      	b.n	8000c7a <__aeabi_dadd+0x216>
 8000abe:	4fcc      	ldr	r7, [pc, #816]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000ac0:	42bc      	cmp	r4, r7
 8000ac2:	d100      	bne.n	8000ac6 <__aeabi_dadd+0x62>
 8000ac4:	e19a      	b.n	8000dfc <__aeabi_dadd+0x398>
 8000ac6:	2701      	movs	r7, #1
 8000ac8:	2938      	cmp	r1, #56	@ 0x38
 8000aca:	dc17      	bgt.n	8000afc <__aeabi_dadd+0x98>
 8000acc:	2780      	movs	r7, #128	@ 0x80
 8000ace:	043f      	lsls	r7, r7, #16
 8000ad0:	433b      	orrs	r3, r7
 8000ad2:	291f      	cmp	r1, #31
 8000ad4:	dd00      	ble.n	8000ad8 <__aeabi_dadd+0x74>
 8000ad6:	e1dd      	b.n	8000e94 <__aeabi_dadd+0x430>
 8000ad8:	2720      	movs	r7, #32
 8000ada:	1a78      	subs	r0, r7, r1
 8000adc:	001f      	movs	r7, r3
 8000ade:	4087      	lsls	r7, r0
 8000ae0:	46ba      	mov	sl, r7
 8000ae2:	0017      	movs	r7, r2
 8000ae4:	40cf      	lsrs	r7, r1
 8000ae6:	4684      	mov	ip, r0
 8000ae8:	0038      	movs	r0, r7
 8000aea:	4657      	mov	r7, sl
 8000aec:	4307      	orrs	r7, r0
 8000aee:	4660      	mov	r0, ip
 8000af0:	4082      	lsls	r2, r0
 8000af2:	40cb      	lsrs	r3, r1
 8000af4:	1e50      	subs	r0, r2, #1
 8000af6:	4182      	sbcs	r2, r0
 8000af8:	1af6      	subs	r6, r6, r3
 8000afa:	4317      	orrs	r7, r2
 8000afc:	464b      	mov	r3, r9
 8000afe:	1bdf      	subs	r7, r3, r7
 8000b00:	45b9      	cmp	r9, r7
 8000b02:	4180      	sbcs	r0, r0
 8000b04:	4240      	negs	r0, r0
 8000b06:	1a36      	subs	r6, r6, r0
 8000b08:	0233      	lsls	r3, r6, #8
 8000b0a:	d400      	bmi.n	8000b0e <__aeabi_dadd+0xaa>
 8000b0c:	e0ff      	b.n	8000d0e <__aeabi_dadd+0x2aa>
 8000b0e:	0276      	lsls	r6, r6, #9
 8000b10:	0a76      	lsrs	r6, r6, #9
 8000b12:	2e00      	cmp	r6, #0
 8000b14:	d100      	bne.n	8000b18 <__aeabi_dadd+0xb4>
 8000b16:	e13c      	b.n	8000d92 <__aeabi_dadd+0x32e>
 8000b18:	0030      	movs	r0, r6
 8000b1a:	f000 ff47 	bl	80019ac <__clzsi2>
 8000b1e:	0003      	movs	r3, r0
 8000b20:	3b08      	subs	r3, #8
 8000b22:	2120      	movs	r1, #32
 8000b24:	0038      	movs	r0, r7
 8000b26:	1aca      	subs	r2, r1, r3
 8000b28:	40d0      	lsrs	r0, r2
 8000b2a:	409e      	lsls	r6, r3
 8000b2c:	0002      	movs	r2, r0
 8000b2e:	409f      	lsls	r7, r3
 8000b30:	4332      	orrs	r2, r6
 8000b32:	429c      	cmp	r4, r3
 8000b34:	dd00      	ble.n	8000b38 <__aeabi_dadd+0xd4>
 8000b36:	e1a6      	b.n	8000e86 <__aeabi_dadd+0x422>
 8000b38:	1b18      	subs	r0, r3, r4
 8000b3a:	3001      	adds	r0, #1
 8000b3c:	1a09      	subs	r1, r1, r0
 8000b3e:	003e      	movs	r6, r7
 8000b40:	408f      	lsls	r7, r1
 8000b42:	40c6      	lsrs	r6, r0
 8000b44:	1e7b      	subs	r3, r7, #1
 8000b46:	419f      	sbcs	r7, r3
 8000b48:	0013      	movs	r3, r2
 8000b4a:	408b      	lsls	r3, r1
 8000b4c:	4337      	orrs	r7, r6
 8000b4e:	431f      	orrs	r7, r3
 8000b50:	40c2      	lsrs	r2, r0
 8000b52:	003b      	movs	r3, r7
 8000b54:	0016      	movs	r6, r2
 8000b56:	2400      	movs	r4, #0
 8000b58:	4313      	orrs	r3, r2
 8000b5a:	d100      	bne.n	8000b5e <__aeabi_dadd+0xfa>
 8000b5c:	e1df      	b.n	8000f1e <__aeabi_dadd+0x4ba>
 8000b5e:	077b      	lsls	r3, r7, #29
 8000b60:	d100      	bne.n	8000b64 <__aeabi_dadd+0x100>
 8000b62:	e332      	b.n	80011ca <__aeabi_dadd+0x766>
 8000b64:	230f      	movs	r3, #15
 8000b66:	003a      	movs	r2, r7
 8000b68:	403b      	ands	r3, r7
 8000b6a:	2b04      	cmp	r3, #4
 8000b6c:	d004      	beq.n	8000b78 <__aeabi_dadd+0x114>
 8000b6e:	1d3a      	adds	r2, r7, #4
 8000b70:	42ba      	cmp	r2, r7
 8000b72:	41bf      	sbcs	r7, r7
 8000b74:	427f      	negs	r7, r7
 8000b76:	19f6      	adds	r6, r6, r7
 8000b78:	0233      	lsls	r3, r6, #8
 8000b7a:	d400      	bmi.n	8000b7e <__aeabi_dadd+0x11a>
 8000b7c:	e323      	b.n	80011c6 <__aeabi_dadd+0x762>
 8000b7e:	4b9c      	ldr	r3, [pc, #624]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000b80:	3401      	adds	r4, #1
 8000b82:	429c      	cmp	r4, r3
 8000b84:	d100      	bne.n	8000b88 <__aeabi_dadd+0x124>
 8000b86:	e0b4      	b.n	8000cf2 <__aeabi_dadd+0x28e>
 8000b88:	4b9a      	ldr	r3, [pc, #616]	@ (8000df4 <__aeabi_dadd+0x390>)
 8000b8a:	0564      	lsls	r4, r4, #21
 8000b8c:	401e      	ands	r6, r3
 8000b8e:	0d64      	lsrs	r4, r4, #21
 8000b90:	0777      	lsls	r7, r6, #29
 8000b92:	08d2      	lsrs	r2, r2, #3
 8000b94:	0276      	lsls	r6, r6, #9
 8000b96:	4317      	orrs	r7, r2
 8000b98:	0b36      	lsrs	r6, r6, #12
 8000b9a:	e0ac      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	d100      	bne.n	8000ba2 <__aeabi_dadd+0x13e>
 8000ba0:	e07e      	b.n	8000ca0 <__aeabi_dadd+0x23c>
 8000ba2:	4641      	mov	r1, r8
 8000ba4:	1b09      	subs	r1, r1, r4
 8000ba6:	2c00      	cmp	r4, #0
 8000ba8:	d000      	beq.n	8000bac <__aeabi_dadd+0x148>
 8000baa:	e160      	b.n	8000e6e <__aeabi_dadd+0x40a>
 8000bac:	0034      	movs	r4, r6
 8000bae:	4648      	mov	r0, r9
 8000bb0:	4304      	orrs	r4, r0
 8000bb2:	d100      	bne.n	8000bb6 <__aeabi_dadd+0x152>
 8000bb4:	e1c9      	b.n	8000f4a <__aeabi_dadd+0x4e6>
 8000bb6:	1e4c      	subs	r4, r1, #1
 8000bb8:	2901      	cmp	r1, #1
 8000bba:	d100      	bne.n	8000bbe <__aeabi_dadd+0x15a>
 8000bbc:	e22e      	b.n	800101c <__aeabi_dadd+0x5b8>
 8000bbe:	4d8c      	ldr	r5, [pc, #560]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000bc0:	42a9      	cmp	r1, r5
 8000bc2:	d100      	bne.n	8000bc6 <__aeabi_dadd+0x162>
 8000bc4:	e224      	b.n	8001010 <__aeabi_dadd+0x5ac>
 8000bc6:	2701      	movs	r7, #1
 8000bc8:	2c38      	cmp	r4, #56	@ 0x38
 8000bca:	dc11      	bgt.n	8000bf0 <__aeabi_dadd+0x18c>
 8000bcc:	0021      	movs	r1, r4
 8000bce:	291f      	cmp	r1, #31
 8000bd0:	dd00      	ble.n	8000bd4 <__aeabi_dadd+0x170>
 8000bd2:	e20b      	b.n	8000fec <__aeabi_dadd+0x588>
 8000bd4:	2420      	movs	r4, #32
 8000bd6:	0037      	movs	r7, r6
 8000bd8:	4648      	mov	r0, r9
 8000bda:	1a64      	subs	r4, r4, r1
 8000bdc:	40a7      	lsls	r7, r4
 8000bde:	40c8      	lsrs	r0, r1
 8000be0:	4307      	orrs	r7, r0
 8000be2:	4648      	mov	r0, r9
 8000be4:	40a0      	lsls	r0, r4
 8000be6:	40ce      	lsrs	r6, r1
 8000be8:	1e44      	subs	r4, r0, #1
 8000bea:	41a0      	sbcs	r0, r4
 8000bec:	1b9b      	subs	r3, r3, r6
 8000bee:	4307      	orrs	r7, r0
 8000bf0:	1bd7      	subs	r7, r2, r7
 8000bf2:	42ba      	cmp	r2, r7
 8000bf4:	4192      	sbcs	r2, r2
 8000bf6:	4252      	negs	r2, r2
 8000bf8:	4665      	mov	r5, ip
 8000bfa:	4644      	mov	r4, r8
 8000bfc:	1a9e      	subs	r6, r3, r2
 8000bfe:	e783      	b.n	8000b08 <__aeabi_dadd+0xa4>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	dc00      	bgt.n	8000c06 <__aeabi_dadd+0x1a2>
 8000c04:	e09c      	b.n	8000d40 <__aeabi_dadd+0x2dc>
 8000c06:	4647      	mov	r7, r8
 8000c08:	2f00      	cmp	r7, #0
 8000c0a:	d167      	bne.n	8000cdc <__aeabi_dadd+0x278>
 8000c0c:	001f      	movs	r7, r3
 8000c0e:	4317      	orrs	r7, r2
 8000c10:	d100      	bne.n	8000c14 <__aeabi_dadd+0x1b0>
 8000c12:	e0e4      	b.n	8000dde <__aeabi_dadd+0x37a>
 8000c14:	1e48      	subs	r0, r1, #1
 8000c16:	2901      	cmp	r1, #1
 8000c18:	d100      	bne.n	8000c1c <__aeabi_dadd+0x1b8>
 8000c1a:	e19b      	b.n	8000f54 <__aeabi_dadd+0x4f0>
 8000c1c:	4f74      	ldr	r7, [pc, #464]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000c1e:	42b9      	cmp	r1, r7
 8000c20:	d100      	bne.n	8000c24 <__aeabi_dadd+0x1c0>
 8000c22:	e0eb      	b.n	8000dfc <__aeabi_dadd+0x398>
 8000c24:	2701      	movs	r7, #1
 8000c26:	0001      	movs	r1, r0
 8000c28:	2838      	cmp	r0, #56	@ 0x38
 8000c2a:	dc11      	bgt.n	8000c50 <__aeabi_dadd+0x1ec>
 8000c2c:	291f      	cmp	r1, #31
 8000c2e:	dd00      	ble.n	8000c32 <__aeabi_dadd+0x1ce>
 8000c30:	e1c7      	b.n	8000fc2 <__aeabi_dadd+0x55e>
 8000c32:	2720      	movs	r7, #32
 8000c34:	1a78      	subs	r0, r7, r1
 8000c36:	001f      	movs	r7, r3
 8000c38:	4684      	mov	ip, r0
 8000c3a:	4087      	lsls	r7, r0
 8000c3c:	0010      	movs	r0, r2
 8000c3e:	40c8      	lsrs	r0, r1
 8000c40:	4307      	orrs	r7, r0
 8000c42:	4660      	mov	r0, ip
 8000c44:	4082      	lsls	r2, r0
 8000c46:	40cb      	lsrs	r3, r1
 8000c48:	1e50      	subs	r0, r2, #1
 8000c4a:	4182      	sbcs	r2, r0
 8000c4c:	18f6      	adds	r6, r6, r3
 8000c4e:	4317      	orrs	r7, r2
 8000c50:	444f      	add	r7, r9
 8000c52:	454f      	cmp	r7, r9
 8000c54:	4180      	sbcs	r0, r0
 8000c56:	4240      	negs	r0, r0
 8000c58:	1836      	adds	r6, r6, r0
 8000c5a:	0233      	lsls	r3, r6, #8
 8000c5c:	d557      	bpl.n	8000d0e <__aeabi_dadd+0x2aa>
 8000c5e:	4b64      	ldr	r3, [pc, #400]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000c60:	3401      	adds	r4, #1
 8000c62:	429c      	cmp	r4, r3
 8000c64:	d045      	beq.n	8000cf2 <__aeabi_dadd+0x28e>
 8000c66:	2101      	movs	r1, #1
 8000c68:	4b62      	ldr	r3, [pc, #392]	@ (8000df4 <__aeabi_dadd+0x390>)
 8000c6a:	087a      	lsrs	r2, r7, #1
 8000c6c:	401e      	ands	r6, r3
 8000c6e:	4039      	ands	r1, r7
 8000c70:	430a      	orrs	r2, r1
 8000c72:	07f7      	lsls	r7, r6, #31
 8000c74:	4317      	orrs	r7, r2
 8000c76:	0876      	lsrs	r6, r6, #1
 8000c78:	e771      	b.n	8000b5e <__aeabi_dadd+0xfa>
 8000c7a:	001f      	movs	r7, r3
 8000c7c:	4317      	orrs	r7, r2
 8000c7e:	d100      	bne.n	8000c82 <__aeabi_dadd+0x21e>
 8000c80:	e0ad      	b.n	8000dde <__aeabi_dadd+0x37a>
 8000c82:	1e4f      	subs	r7, r1, #1
 8000c84:	46bc      	mov	ip, r7
 8000c86:	2901      	cmp	r1, #1
 8000c88:	d100      	bne.n	8000c8c <__aeabi_dadd+0x228>
 8000c8a:	e182      	b.n	8000f92 <__aeabi_dadd+0x52e>
 8000c8c:	4f58      	ldr	r7, [pc, #352]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000c8e:	42b9      	cmp	r1, r7
 8000c90:	d100      	bne.n	8000c94 <__aeabi_dadd+0x230>
 8000c92:	e190      	b.n	8000fb6 <__aeabi_dadd+0x552>
 8000c94:	4661      	mov	r1, ip
 8000c96:	2701      	movs	r7, #1
 8000c98:	2938      	cmp	r1, #56	@ 0x38
 8000c9a:	dd00      	ble.n	8000c9e <__aeabi_dadd+0x23a>
 8000c9c:	e72e      	b.n	8000afc <__aeabi_dadd+0x98>
 8000c9e:	e718      	b.n	8000ad2 <__aeabi_dadd+0x6e>
 8000ca0:	4f55      	ldr	r7, [pc, #340]	@ (8000df8 <__aeabi_dadd+0x394>)
 8000ca2:	1c61      	adds	r1, r4, #1
 8000ca4:	4239      	tst	r1, r7
 8000ca6:	d000      	beq.n	8000caa <__aeabi_dadd+0x246>
 8000ca8:	e0d0      	b.n	8000e4c <__aeabi_dadd+0x3e8>
 8000caa:	0031      	movs	r1, r6
 8000cac:	4648      	mov	r0, r9
 8000cae:	001f      	movs	r7, r3
 8000cb0:	4301      	orrs	r1, r0
 8000cb2:	4317      	orrs	r7, r2
 8000cb4:	2c00      	cmp	r4, #0
 8000cb6:	d000      	beq.n	8000cba <__aeabi_dadd+0x256>
 8000cb8:	e13d      	b.n	8000f36 <__aeabi_dadd+0x4d2>
 8000cba:	2900      	cmp	r1, #0
 8000cbc:	d100      	bne.n	8000cc0 <__aeabi_dadd+0x25c>
 8000cbe:	e1bc      	b.n	800103a <__aeabi_dadd+0x5d6>
 8000cc0:	2f00      	cmp	r7, #0
 8000cc2:	d000      	beq.n	8000cc6 <__aeabi_dadd+0x262>
 8000cc4:	e1bf      	b.n	8001046 <__aeabi_dadd+0x5e2>
 8000cc6:	464b      	mov	r3, r9
 8000cc8:	2100      	movs	r1, #0
 8000cca:	08d8      	lsrs	r0, r3, #3
 8000ccc:	0777      	lsls	r7, r6, #29
 8000cce:	4307      	orrs	r7, r0
 8000cd0:	08f0      	lsrs	r0, r6, #3
 8000cd2:	0306      	lsls	r6, r0, #12
 8000cd4:	054c      	lsls	r4, r1, #21
 8000cd6:	0b36      	lsrs	r6, r6, #12
 8000cd8:	0d64      	lsrs	r4, r4, #21
 8000cda:	e00c      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000cdc:	4f44      	ldr	r7, [pc, #272]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000cde:	42bc      	cmp	r4, r7
 8000ce0:	d100      	bne.n	8000ce4 <__aeabi_dadd+0x280>
 8000ce2:	e08b      	b.n	8000dfc <__aeabi_dadd+0x398>
 8000ce4:	2701      	movs	r7, #1
 8000ce6:	2938      	cmp	r1, #56	@ 0x38
 8000ce8:	dcb2      	bgt.n	8000c50 <__aeabi_dadd+0x1ec>
 8000cea:	2780      	movs	r7, #128	@ 0x80
 8000cec:	043f      	lsls	r7, r7, #16
 8000cee:	433b      	orrs	r3, r7
 8000cf0:	e79c      	b.n	8000c2c <__aeabi_dadd+0x1c8>
 8000cf2:	2600      	movs	r6, #0
 8000cf4:	2700      	movs	r7, #0
 8000cf6:	0524      	lsls	r4, r4, #20
 8000cf8:	4334      	orrs	r4, r6
 8000cfa:	07ed      	lsls	r5, r5, #31
 8000cfc:	432c      	orrs	r4, r5
 8000cfe:	0038      	movs	r0, r7
 8000d00:	0021      	movs	r1, r4
 8000d02:	b002      	add	sp, #8
 8000d04:	bce0      	pop	{r5, r6, r7}
 8000d06:	46ba      	mov	sl, r7
 8000d08:	46b1      	mov	r9, r6
 8000d0a:	46a8      	mov	r8, r5
 8000d0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000d0e:	077b      	lsls	r3, r7, #29
 8000d10:	d004      	beq.n	8000d1c <__aeabi_dadd+0x2b8>
 8000d12:	230f      	movs	r3, #15
 8000d14:	403b      	ands	r3, r7
 8000d16:	2b04      	cmp	r3, #4
 8000d18:	d000      	beq.n	8000d1c <__aeabi_dadd+0x2b8>
 8000d1a:	e728      	b.n	8000b6e <__aeabi_dadd+0x10a>
 8000d1c:	08f8      	lsrs	r0, r7, #3
 8000d1e:	4b34      	ldr	r3, [pc, #208]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000d20:	0777      	lsls	r7, r6, #29
 8000d22:	4307      	orrs	r7, r0
 8000d24:	08f0      	lsrs	r0, r6, #3
 8000d26:	429c      	cmp	r4, r3
 8000d28:	d000      	beq.n	8000d2c <__aeabi_dadd+0x2c8>
 8000d2a:	e24a      	b.n	80011c2 <__aeabi_dadd+0x75e>
 8000d2c:	003b      	movs	r3, r7
 8000d2e:	4303      	orrs	r3, r0
 8000d30:	d059      	beq.n	8000de6 <__aeabi_dadd+0x382>
 8000d32:	2680      	movs	r6, #128	@ 0x80
 8000d34:	0336      	lsls	r6, r6, #12
 8000d36:	4306      	orrs	r6, r0
 8000d38:	0336      	lsls	r6, r6, #12
 8000d3a:	4c2d      	ldr	r4, [pc, #180]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000d3c:	0b36      	lsrs	r6, r6, #12
 8000d3e:	e7da      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000d40:	2900      	cmp	r1, #0
 8000d42:	d061      	beq.n	8000e08 <__aeabi_dadd+0x3a4>
 8000d44:	4641      	mov	r1, r8
 8000d46:	1b09      	subs	r1, r1, r4
 8000d48:	2c00      	cmp	r4, #0
 8000d4a:	d100      	bne.n	8000d4e <__aeabi_dadd+0x2ea>
 8000d4c:	e0b9      	b.n	8000ec2 <__aeabi_dadd+0x45e>
 8000d4e:	4c28      	ldr	r4, [pc, #160]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000d50:	45a0      	cmp	r8, r4
 8000d52:	d100      	bne.n	8000d56 <__aeabi_dadd+0x2f2>
 8000d54:	e1a5      	b.n	80010a2 <__aeabi_dadd+0x63e>
 8000d56:	2701      	movs	r7, #1
 8000d58:	2938      	cmp	r1, #56	@ 0x38
 8000d5a:	dc13      	bgt.n	8000d84 <__aeabi_dadd+0x320>
 8000d5c:	2480      	movs	r4, #128	@ 0x80
 8000d5e:	0424      	lsls	r4, r4, #16
 8000d60:	4326      	orrs	r6, r4
 8000d62:	291f      	cmp	r1, #31
 8000d64:	dd00      	ble.n	8000d68 <__aeabi_dadd+0x304>
 8000d66:	e1c8      	b.n	80010fa <__aeabi_dadd+0x696>
 8000d68:	2420      	movs	r4, #32
 8000d6a:	0037      	movs	r7, r6
 8000d6c:	4648      	mov	r0, r9
 8000d6e:	1a64      	subs	r4, r4, r1
 8000d70:	40a7      	lsls	r7, r4
 8000d72:	40c8      	lsrs	r0, r1
 8000d74:	4307      	orrs	r7, r0
 8000d76:	4648      	mov	r0, r9
 8000d78:	40a0      	lsls	r0, r4
 8000d7a:	40ce      	lsrs	r6, r1
 8000d7c:	1e44      	subs	r4, r0, #1
 8000d7e:	41a0      	sbcs	r0, r4
 8000d80:	199b      	adds	r3, r3, r6
 8000d82:	4307      	orrs	r7, r0
 8000d84:	18bf      	adds	r7, r7, r2
 8000d86:	4297      	cmp	r7, r2
 8000d88:	4192      	sbcs	r2, r2
 8000d8a:	4252      	negs	r2, r2
 8000d8c:	4644      	mov	r4, r8
 8000d8e:	18d6      	adds	r6, r2, r3
 8000d90:	e763      	b.n	8000c5a <__aeabi_dadd+0x1f6>
 8000d92:	0038      	movs	r0, r7
 8000d94:	f000 fe0a 	bl	80019ac <__clzsi2>
 8000d98:	0003      	movs	r3, r0
 8000d9a:	3318      	adds	r3, #24
 8000d9c:	2b1f      	cmp	r3, #31
 8000d9e:	dc00      	bgt.n	8000da2 <__aeabi_dadd+0x33e>
 8000da0:	e6bf      	b.n	8000b22 <__aeabi_dadd+0xbe>
 8000da2:	003a      	movs	r2, r7
 8000da4:	3808      	subs	r0, #8
 8000da6:	4082      	lsls	r2, r0
 8000da8:	429c      	cmp	r4, r3
 8000daa:	dd00      	ble.n	8000dae <__aeabi_dadd+0x34a>
 8000dac:	e083      	b.n	8000eb6 <__aeabi_dadd+0x452>
 8000dae:	1b1b      	subs	r3, r3, r4
 8000db0:	1c58      	adds	r0, r3, #1
 8000db2:	281f      	cmp	r0, #31
 8000db4:	dc00      	bgt.n	8000db8 <__aeabi_dadd+0x354>
 8000db6:	e1b4      	b.n	8001122 <__aeabi_dadd+0x6be>
 8000db8:	0017      	movs	r7, r2
 8000dba:	3b1f      	subs	r3, #31
 8000dbc:	40df      	lsrs	r7, r3
 8000dbe:	2820      	cmp	r0, #32
 8000dc0:	d005      	beq.n	8000dce <__aeabi_dadd+0x36a>
 8000dc2:	2340      	movs	r3, #64	@ 0x40
 8000dc4:	1a1b      	subs	r3, r3, r0
 8000dc6:	409a      	lsls	r2, r3
 8000dc8:	1e53      	subs	r3, r2, #1
 8000dca:	419a      	sbcs	r2, r3
 8000dcc:	4317      	orrs	r7, r2
 8000dce:	2400      	movs	r4, #0
 8000dd0:	2f00      	cmp	r7, #0
 8000dd2:	d00a      	beq.n	8000dea <__aeabi_dadd+0x386>
 8000dd4:	077b      	lsls	r3, r7, #29
 8000dd6:	d000      	beq.n	8000dda <__aeabi_dadd+0x376>
 8000dd8:	e6c4      	b.n	8000b64 <__aeabi_dadd+0x100>
 8000dda:	0026      	movs	r6, r4
 8000ddc:	e79e      	b.n	8000d1c <__aeabi_dadd+0x2b8>
 8000dde:	464b      	mov	r3, r9
 8000de0:	000c      	movs	r4, r1
 8000de2:	08d8      	lsrs	r0, r3, #3
 8000de4:	e79b      	b.n	8000d1e <__aeabi_dadd+0x2ba>
 8000de6:	2700      	movs	r7, #0
 8000de8:	4c01      	ldr	r4, [pc, #4]	@ (8000df0 <__aeabi_dadd+0x38c>)
 8000dea:	2600      	movs	r6, #0
 8000dec:	e783      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000dee:	46c0      	nop			@ (mov r8, r8)
 8000df0:	000007ff 	.word	0x000007ff
 8000df4:	ff7fffff 	.word	0xff7fffff
 8000df8:	000007fe 	.word	0x000007fe
 8000dfc:	464b      	mov	r3, r9
 8000dfe:	0777      	lsls	r7, r6, #29
 8000e00:	08d8      	lsrs	r0, r3, #3
 8000e02:	4307      	orrs	r7, r0
 8000e04:	08f0      	lsrs	r0, r6, #3
 8000e06:	e791      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 8000e08:	4fcd      	ldr	r7, [pc, #820]	@ (8001140 <__aeabi_dadd+0x6dc>)
 8000e0a:	1c61      	adds	r1, r4, #1
 8000e0c:	4239      	tst	r1, r7
 8000e0e:	d16b      	bne.n	8000ee8 <__aeabi_dadd+0x484>
 8000e10:	0031      	movs	r1, r6
 8000e12:	4648      	mov	r0, r9
 8000e14:	4301      	orrs	r1, r0
 8000e16:	2c00      	cmp	r4, #0
 8000e18:	d000      	beq.n	8000e1c <__aeabi_dadd+0x3b8>
 8000e1a:	e14b      	b.n	80010b4 <__aeabi_dadd+0x650>
 8000e1c:	001f      	movs	r7, r3
 8000e1e:	4317      	orrs	r7, r2
 8000e20:	2900      	cmp	r1, #0
 8000e22:	d100      	bne.n	8000e26 <__aeabi_dadd+0x3c2>
 8000e24:	e181      	b.n	800112a <__aeabi_dadd+0x6c6>
 8000e26:	2f00      	cmp	r7, #0
 8000e28:	d100      	bne.n	8000e2c <__aeabi_dadd+0x3c8>
 8000e2a:	e74c      	b.n	8000cc6 <__aeabi_dadd+0x262>
 8000e2c:	444a      	add	r2, r9
 8000e2e:	454a      	cmp	r2, r9
 8000e30:	4180      	sbcs	r0, r0
 8000e32:	18f6      	adds	r6, r6, r3
 8000e34:	4240      	negs	r0, r0
 8000e36:	1836      	adds	r6, r6, r0
 8000e38:	0233      	lsls	r3, r6, #8
 8000e3a:	d500      	bpl.n	8000e3e <__aeabi_dadd+0x3da>
 8000e3c:	e1b0      	b.n	80011a0 <__aeabi_dadd+0x73c>
 8000e3e:	0017      	movs	r7, r2
 8000e40:	4691      	mov	r9, r2
 8000e42:	4337      	orrs	r7, r6
 8000e44:	d000      	beq.n	8000e48 <__aeabi_dadd+0x3e4>
 8000e46:	e73e      	b.n	8000cc6 <__aeabi_dadd+0x262>
 8000e48:	2600      	movs	r6, #0
 8000e4a:	e754      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000e4c:	4649      	mov	r1, r9
 8000e4e:	1a89      	subs	r1, r1, r2
 8000e50:	4688      	mov	r8, r1
 8000e52:	45c1      	cmp	r9, r8
 8000e54:	41bf      	sbcs	r7, r7
 8000e56:	1af1      	subs	r1, r6, r3
 8000e58:	427f      	negs	r7, r7
 8000e5a:	1bc9      	subs	r1, r1, r7
 8000e5c:	020f      	lsls	r7, r1, #8
 8000e5e:	d461      	bmi.n	8000f24 <__aeabi_dadd+0x4c0>
 8000e60:	4647      	mov	r7, r8
 8000e62:	430f      	orrs	r7, r1
 8000e64:	d100      	bne.n	8000e68 <__aeabi_dadd+0x404>
 8000e66:	e0bd      	b.n	8000fe4 <__aeabi_dadd+0x580>
 8000e68:	000e      	movs	r6, r1
 8000e6a:	4647      	mov	r7, r8
 8000e6c:	e651      	b.n	8000b12 <__aeabi_dadd+0xae>
 8000e6e:	4cb5      	ldr	r4, [pc, #724]	@ (8001144 <__aeabi_dadd+0x6e0>)
 8000e70:	45a0      	cmp	r8, r4
 8000e72:	d100      	bne.n	8000e76 <__aeabi_dadd+0x412>
 8000e74:	e100      	b.n	8001078 <__aeabi_dadd+0x614>
 8000e76:	2701      	movs	r7, #1
 8000e78:	2938      	cmp	r1, #56	@ 0x38
 8000e7a:	dd00      	ble.n	8000e7e <__aeabi_dadd+0x41a>
 8000e7c:	e6b8      	b.n	8000bf0 <__aeabi_dadd+0x18c>
 8000e7e:	2480      	movs	r4, #128	@ 0x80
 8000e80:	0424      	lsls	r4, r4, #16
 8000e82:	4326      	orrs	r6, r4
 8000e84:	e6a3      	b.n	8000bce <__aeabi_dadd+0x16a>
 8000e86:	4eb0      	ldr	r6, [pc, #704]	@ (8001148 <__aeabi_dadd+0x6e4>)
 8000e88:	1ae4      	subs	r4, r4, r3
 8000e8a:	4016      	ands	r6, r2
 8000e8c:	077b      	lsls	r3, r7, #29
 8000e8e:	d000      	beq.n	8000e92 <__aeabi_dadd+0x42e>
 8000e90:	e73f      	b.n	8000d12 <__aeabi_dadd+0x2ae>
 8000e92:	e743      	b.n	8000d1c <__aeabi_dadd+0x2b8>
 8000e94:	000f      	movs	r7, r1
 8000e96:	0018      	movs	r0, r3
 8000e98:	3f20      	subs	r7, #32
 8000e9a:	40f8      	lsrs	r0, r7
 8000e9c:	4684      	mov	ip, r0
 8000e9e:	2920      	cmp	r1, #32
 8000ea0:	d003      	beq.n	8000eaa <__aeabi_dadd+0x446>
 8000ea2:	2740      	movs	r7, #64	@ 0x40
 8000ea4:	1a79      	subs	r1, r7, r1
 8000ea6:	408b      	lsls	r3, r1
 8000ea8:	431a      	orrs	r2, r3
 8000eaa:	1e53      	subs	r3, r2, #1
 8000eac:	419a      	sbcs	r2, r3
 8000eae:	4663      	mov	r3, ip
 8000eb0:	0017      	movs	r7, r2
 8000eb2:	431f      	orrs	r7, r3
 8000eb4:	e622      	b.n	8000afc <__aeabi_dadd+0x98>
 8000eb6:	48a4      	ldr	r0, [pc, #656]	@ (8001148 <__aeabi_dadd+0x6e4>)
 8000eb8:	1ae1      	subs	r1, r4, r3
 8000eba:	4010      	ands	r0, r2
 8000ebc:	0747      	lsls	r7, r0, #29
 8000ebe:	08c0      	lsrs	r0, r0, #3
 8000ec0:	e707      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 8000ec2:	0034      	movs	r4, r6
 8000ec4:	4648      	mov	r0, r9
 8000ec6:	4304      	orrs	r4, r0
 8000ec8:	d100      	bne.n	8000ecc <__aeabi_dadd+0x468>
 8000eca:	e0fa      	b.n	80010c2 <__aeabi_dadd+0x65e>
 8000ecc:	1e4c      	subs	r4, r1, #1
 8000ece:	2901      	cmp	r1, #1
 8000ed0:	d100      	bne.n	8000ed4 <__aeabi_dadd+0x470>
 8000ed2:	e0d7      	b.n	8001084 <__aeabi_dadd+0x620>
 8000ed4:	4f9b      	ldr	r7, [pc, #620]	@ (8001144 <__aeabi_dadd+0x6e0>)
 8000ed6:	42b9      	cmp	r1, r7
 8000ed8:	d100      	bne.n	8000edc <__aeabi_dadd+0x478>
 8000eda:	e0e2      	b.n	80010a2 <__aeabi_dadd+0x63e>
 8000edc:	2701      	movs	r7, #1
 8000ede:	2c38      	cmp	r4, #56	@ 0x38
 8000ee0:	dd00      	ble.n	8000ee4 <__aeabi_dadd+0x480>
 8000ee2:	e74f      	b.n	8000d84 <__aeabi_dadd+0x320>
 8000ee4:	0021      	movs	r1, r4
 8000ee6:	e73c      	b.n	8000d62 <__aeabi_dadd+0x2fe>
 8000ee8:	4c96      	ldr	r4, [pc, #600]	@ (8001144 <__aeabi_dadd+0x6e0>)
 8000eea:	42a1      	cmp	r1, r4
 8000eec:	d100      	bne.n	8000ef0 <__aeabi_dadd+0x48c>
 8000eee:	e0dd      	b.n	80010ac <__aeabi_dadd+0x648>
 8000ef0:	444a      	add	r2, r9
 8000ef2:	454a      	cmp	r2, r9
 8000ef4:	4180      	sbcs	r0, r0
 8000ef6:	18f3      	adds	r3, r6, r3
 8000ef8:	4240      	negs	r0, r0
 8000efa:	1818      	adds	r0, r3, r0
 8000efc:	07c7      	lsls	r7, r0, #31
 8000efe:	0852      	lsrs	r2, r2, #1
 8000f00:	4317      	orrs	r7, r2
 8000f02:	0846      	lsrs	r6, r0, #1
 8000f04:	0752      	lsls	r2, r2, #29
 8000f06:	d005      	beq.n	8000f14 <__aeabi_dadd+0x4b0>
 8000f08:	220f      	movs	r2, #15
 8000f0a:	000c      	movs	r4, r1
 8000f0c:	403a      	ands	r2, r7
 8000f0e:	2a04      	cmp	r2, #4
 8000f10:	d000      	beq.n	8000f14 <__aeabi_dadd+0x4b0>
 8000f12:	e62c      	b.n	8000b6e <__aeabi_dadd+0x10a>
 8000f14:	0776      	lsls	r6, r6, #29
 8000f16:	08ff      	lsrs	r7, r7, #3
 8000f18:	4337      	orrs	r7, r6
 8000f1a:	0900      	lsrs	r0, r0, #4
 8000f1c:	e6d9      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 8000f1e:	2700      	movs	r7, #0
 8000f20:	2600      	movs	r6, #0
 8000f22:	e6e8      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000f24:	4649      	mov	r1, r9
 8000f26:	1a57      	subs	r7, r2, r1
 8000f28:	42ba      	cmp	r2, r7
 8000f2a:	4192      	sbcs	r2, r2
 8000f2c:	1b9e      	subs	r6, r3, r6
 8000f2e:	4252      	negs	r2, r2
 8000f30:	4665      	mov	r5, ip
 8000f32:	1ab6      	subs	r6, r6, r2
 8000f34:	e5ed      	b.n	8000b12 <__aeabi_dadd+0xae>
 8000f36:	2900      	cmp	r1, #0
 8000f38:	d000      	beq.n	8000f3c <__aeabi_dadd+0x4d8>
 8000f3a:	e0c6      	b.n	80010ca <__aeabi_dadd+0x666>
 8000f3c:	2f00      	cmp	r7, #0
 8000f3e:	d167      	bne.n	8001010 <__aeabi_dadd+0x5ac>
 8000f40:	2680      	movs	r6, #128	@ 0x80
 8000f42:	2500      	movs	r5, #0
 8000f44:	4c7f      	ldr	r4, [pc, #508]	@ (8001144 <__aeabi_dadd+0x6e0>)
 8000f46:	0336      	lsls	r6, r6, #12
 8000f48:	e6d5      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000f4a:	4665      	mov	r5, ip
 8000f4c:	000c      	movs	r4, r1
 8000f4e:	001e      	movs	r6, r3
 8000f50:	08d0      	lsrs	r0, r2, #3
 8000f52:	e6e4      	b.n	8000d1e <__aeabi_dadd+0x2ba>
 8000f54:	444a      	add	r2, r9
 8000f56:	454a      	cmp	r2, r9
 8000f58:	4180      	sbcs	r0, r0
 8000f5a:	18f3      	adds	r3, r6, r3
 8000f5c:	4240      	negs	r0, r0
 8000f5e:	1818      	adds	r0, r3, r0
 8000f60:	0011      	movs	r1, r2
 8000f62:	0203      	lsls	r3, r0, #8
 8000f64:	d400      	bmi.n	8000f68 <__aeabi_dadd+0x504>
 8000f66:	e096      	b.n	8001096 <__aeabi_dadd+0x632>
 8000f68:	4b77      	ldr	r3, [pc, #476]	@ (8001148 <__aeabi_dadd+0x6e4>)
 8000f6a:	0849      	lsrs	r1, r1, #1
 8000f6c:	4018      	ands	r0, r3
 8000f6e:	07c3      	lsls	r3, r0, #31
 8000f70:	430b      	orrs	r3, r1
 8000f72:	0844      	lsrs	r4, r0, #1
 8000f74:	0749      	lsls	r1, r1, #29
 8000f76:	d100      	bne.n	8000f7a <__aeabi_dadd+0x516>
 8000f78:	e129      	b.n	80011ce <__aeabi_dadd+0x76a>
 8000f7a:	220f      	movs	r2, #15
 8000f7c:	401a      	ands	r2, r3
 8000f7e:	2a04      	cmp	r2, #4
 8000f80:	d100      	bne.n	8000f84 <__aeabi_dadd+0x520>
 8000f82:	e0ea      	b.n	800115a <__aeabi_dadd+0x6f6>
 8000f84:	1d1f      	adds	r7, r3, #4
 8000f86:	429f      	cmp	r7, r3
 8000f88:	41b6      	sbcs	r6, r6
 8000f8a:	4276      	negs	r6, r6
 8000f8c:	1936      	adds	r6, r6, r4
 8000f8e:	2402      	movs	r4, #2
 8000f90:	e6c4      	b.n	8000d1c <__aeabi_dadd+0x2b8>
 8000f92:	4649      	mov	r1, r9
 8000f94:	1a8f      	subs	r7, r1, r2
 8000f96:	45b9      	cmp	r9, r7
 8000f98:	4180      	sbcs	r0, r0
 8000f9a:	1af6      	subs	r6, r6, r3
 8000f9c:	4240      	negs	r0, r0
 8000f9e:	1a36      	subs	r6, r6, r0
 8000fa0:	0233      	lsls	r3, r6, #8
 8000fa2:	d406      	bmi.n	8000fb2 <__aeabi_dadd+0x54e>
 8000fa4:	0773      	lsls	r3, r6, #29
 8000fa6:	08ff      	lsrs	r7, r7, #3
 8000fa8:	2101      	movs	r1, #1
 8000faa:	431f      	orrs	r7, r3
 8000fac:	08f0      	lsrs	r0, r6, #3
 8000fae:	e690      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 8000fb0:	4665      	mov	r5, ip
 8000fb2:	2401      	movs	r4, #1
 8000fb4:	e5ab      	b.n	8000b0e <__aeabi_dadd+0xaa>
 8000fb6:	464b      	mov	r3, r9
 8000fb8:	0777      	lsls	r7, r6, #29
 8000fba:	08d8      	lsrs	r0, r3, #3
 8000fbc:	4307      	orrs	r7, r0
 8000fbe:	08f0      	lsrs	r0, r6, #3
 8000fc0:	e6b4      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 8000fc2:	000f      	movs	r7, r1
 8000fc4:	0018      	movs	r0, r3
 8000fc6:	3f20      	subs	r7, #32
 8000fc8:	40f8      	lsrs	r0, r7
 8000fca:	4684      	mov	ip, r0
 8000fcc:	2920      	cmp	r1, #32
 8000fce:	d003      	beq.n	8000fd8 <__aeabi_dadd+0x574>
 8000fd0:	2740      	movs	r7, #64	@ 0x40
 8000fd2:	1a79      	subs	r1, r7, r1
 8000fd4:	408b      	lsls	r3, r1
 8000fd6:	431a      	orrs	r2, r3
 8000fd8:	1e53      	subs	r3, r2, #1
 8000fda:	419a      	sbcs	r2, r3
 8000fdc:	4663      	mov	r3, ip
 8000fde:	0017      	movs	r7, r2
 8000fe0:	431f      	orrs	r7, r3
 8000fe2:	e635      	b.n	8000c50 <__aeabi_dadd+0x1ec>
 8000fe4:	2500      	movs	r5, #0
 8000fe6:	2400      	movs	r4, #0
 8000fe8:	2600      	movs	r6, #0
 8000fea:	e684      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8000fec:	000c      	movs	r4, r1
 8000fee:	0035      	movs	r5, r6
 8000ff0:	3c20      	subs	r4, #32
 8000ff2:	40e5      	lsrs	r5, r4
 8000ff4:	2920      	cmp	r1, #32
 8000ff6:	d005      	beq.n	8001004 <__aeabi_dadd+0x5a0>
 8000ff8:	2440      	movs	r4, #64	@ 0x40
 8000ffa:	1a61      	subs	r1, r4, r1
 8000ffc:	408e      	lsls	r6, r1
 8000ffe:	4649      	mov	r1, r9
 8001000:	4331      	orrs	r1, r6
 8001002:	4689      	mov	r9, r1
 8001004:	4648      	mov	r0, r9
 8001006:	1e41      	subs	r1, r0, #1
 8001008:	4188      	sbcs	r0, r1
 800100a:	0007      	movs	r7, r0
 800100c:	432f      	orrs	r7, r5
 800100e:	e5ef      	b.n	8000bf0 <__aeabi_dadd+0x18c>
 8001010:	08d2      	lsrs	r2, r2, #3
 8001012:	075f      	lsls	r7, r3, #29
 8001014:	4665      	mov	r5, ip
 8001016:	4317      	orrs	r7, r2
 8001018:	08d8      	lsrs	r0, r3, #3
 800101a:	e687      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 800101c:	1a17      	subs	r7, r2, r0
 800101e:	42ba      	cmp	r2, r7
 8001020:	4192      	sbcs	r2, r2
 8001022:	1b9e      	subs	r6, r3, r6
 8001024:	4252      	negs	r2, r2
 8001026:	1ab6      	subs	r6, r6, r2
 8001028:	0233      	lsls	r3, r6, #8
 800102a:	d4c1      	bmi.n	8000fb0 <__aeabi_dadd+0x54c>
 800102c:	0773      	lsls	r3, r6, #29
 800102e:	08ff      	lsrs	r7, r7, #3
 8001030:	4665      	mov	r5, ip
 8001032:	2101      	movs	r1, #1
 8001034:	431f      	orrs	r7, r3
 8001036:	08f0      	lsrs	r0, r6, #3
 8001038:	e64b      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 800103a:	2f00      	cmp	r7, #0
 800103c:	d07b      	beq.n	8001136 <__aeabi_dadd+0x6d2>
 800103e:	4665      	mov	r5, ip
 8001040:	001e      	movs	r6, r3
 8001042:	4691      	mov	r9, r2
 8001044:	e63f      	b.n	8000cc6 <__aeabi_dadd+0x262>
 8001046:	1a81      	subs	r1, r0, r2
 8001048:	4688      	mov	r8, r1
 800104a:	45c1      	cmp	r9, r8
 800104c:	41a4      	sbcs	r4, r4
 800104e:	1af1      	subs	r1, r6, r3
 8001050:	4264      	negs	r4, r4
 8001052:	1b09      	subs	r1, r1, r4
 8001054:	2480      	movs	r4, #128	@ 0x80
 8001056:	0424      	lsls	r4, r4, #16
 8001058:	4221      	tst	r1, r4
 800105a:	d077      	beq.n	800114c <__aeabi_dadd+0x6e8>
 800105c:	1a10      	subs	r0, r2, r0
 800105e:	4282      	cmp	r2, r0
 8001060:	4192      	sbcs	r2, r2
 8001062:	0007      	movs	r7, r0
 8001064:	1b9e      	subs	r6, r3, r6
 8001066:	4252      	negs	r2, r2
 8001068:	1ab6      	subs	r6, r6, r2
 800106a:	4337      	orrs	r7, r6
 800106c:	d000      	beq.n	8001070 <__aeabi_dadd+0x60c>
 800106e:	e0a0      	b.n	80011b2 <__aeabi_dadd+0x74e>
 8001070:	4665      	mov	r5, ip
 8001072:	2400      	movs	r4, #0
 8001074:	2600      	movs	r6, #0
 8001076:	e63e      	b.n	8000cf6 <__aeabi_dadd+0x292>
 8001078:	075f      	lsls	r7, r3, #29
 800107a:	08d2      	lsrs	r2, r2, #3
 800107c:	4665      	mov	r5, ip
 800107e:	4317      	orrs	r7, r2
 8001080:	08d8      	lsrs	r0, r3, #3
 8001082:	e653      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 8001084:	1881      	adds	r1, r0, r2
 8001086:	4291      	cmp	r1, r2
 8001088:	4192      	sbcs	r2, r2
 800108a:	18f0      	adds	r0, r6, r3
 800108c:	4252      	negs	r2, r2
 800108e:	1880      	adds	r0, r0, r2
 8001090:	0203      	lsls	r3, r0, #8
 8001092:	d500      	bpl.n	8001096 <__aeabi_dadd+0x632>
 8001094:	e768      	b.n	8000f68 <__aeabi_dadd+0x504>
 8001096:	0747      	lsls	r7, r0, #29
 8001098:	08c9      	lsrs	r1, r1, #3
 800109a:	430f      	orrs	r7, r1
 800109c:	08c0      	lsrs	r0, r0, #3
 800109e:	2101      	movs	r1, #1
 80010a0:	e617      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 80010a2:	08d2      	lsrs	r2, r2, #3
 80010a4:	075f      	lsls	r7, r3, #29
 80010a6:	4317      	orrs	r7, r2
 80010a8:	08d8      	lsrs	r0, r3, #3
 80010aa:	e63f      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 80010ac:	000c      	movs	r4, r1
 80010ae:	2600      	movs	r6, #0
 80010b0:	2700      	movs	r7, #0
 80010b2:	e620      	b.n	8000cf6 <__aeabi_dadd+0x292>
 80010b4:	2900      	cmp	r1, #0
 80010b6:	d156      	bne.n	8001166 <__aeabi_dadd+0x702>
 80010b8:	075f      	lsls	r7, r3, #29
 80010ba:	08d2      	lsrs	r2, r2, #3
 80010bc:	4317      	orrs	r7, r2
 80010be:	08d8      	lsrs	r0, r3, #3
 80010c0:	e634      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 80010c2:	000c      	movs	r4, r1
 80010c4:	001e      	movs	r6, r3
 80010c6:	08d0      	lsrs	r0, r2, #3
 80010c8:	e629      	b.n	8000d1e <__aeabi_dadd+0x2ba>
 80010ca:	08c1      	lsrs	r1, r0, #3
 80010cc:	0770      	lsls	r0, r6, #29
 80010ce:	4301      	orrs	r1, r0
 80010d0:	08f0      	lsrs	r0, r6, #3
 80010d2:	2f00      	cmp	r7, #0
 80010d4:	d062      	beq.n	800119c <__aeabi_dadd+0x738>
 80010d6:	2480      	movs	r4, #128	@ 0x80
 80010d8:	0324      	lsls	r4, r4, #12
 80010da:	4220      	tst	r0, r4
 80010dc:	d007      	beq.n	80010ee <__aeabi_dadd+0x68a>
 80010de:	08de      	lsrs	r6, r3, #3
 80010e0:	4226      	tst	r6, r4
 80010e2:	d104      	bne.n	80010ee <__aeabi_dadd+0x68a>
 80010e4:	4665      	mov	r5, ip
 80010e6:	0030      	movs	r0, r6
 80010e8:	08d1      	lsrs	r1, r2, #3
 80010ea:	075b      	lsls	r3, r3, #29
 80010ec:	4319      	orrs	r1, r3
 80010ee:	0f4f      	lsrs	r7, r1, #29
 80010f0:	00c9      	lsls	r1, r1, #3
 80010f2:	08c9      	lsrs	r1, r1, #3
 80010f4:	077f      	lsls	r7, r7, #29
 80010f6:	430f      	orrs	r7, r1
 80010f8:	e618      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 80010fa:	000c      	movs	r4, r1
 80010fc:	0030      	movs	r0, r6
 80010fe:	3c20      	subs	r4, #32
 8001100:	40e0      	lsrs	r0, r4
 8001102:	4684      	mov	ip, r0
 8001104:	2920      	cmp	r1, #32
 8001106:	d005      	beq.n	8001114 <__aeabi_dadd+0x6b0>
 8001108:	2440      	movs	r4, #64	@ 0x40
 800110a:	1a61      	subs	r1, r4, r1
 800110c:	408e      	lsls	r6, r1
 800110e:	4649      	mov	r1, r9
 8001110:	4331      	orrs	r1, r6
 8001112:	4689      	mov	r9, r1
 8001114:	4648      	mov	r0, r9
 8001116:	1e41      	subs	r1, r0, #1
 8001118:	4188      	sbcs	r0, r1
 800111a:	4661      	mov	r1, ip
 800111c:	0007      	movs	r7, r0
 800111e:	430f      	orrs	r7, r1
 8001120:	e630      	b.n	8000d84 <__aeabi_dadd+0x320>
 8001122:	2120      	movs	r1, #32
 8001124:	2700      	movs	r7, #0
 8001126:	1a09      	subs	r1, r1, r0
 8001128:	e50e      	b.n	8000b48 <__aeabi_dadd+0xe4>
 800112a:	001e      	movs	r6, r3
 800112c:	2f00      	cmp	r7, #0
 800112e:	d000      	beq.n	8001132 <__aeabi_dadd+0x6ce>
 8001130:	e522      	b.n	8000b78 <__aeabi_dadd+0x114>
 8001132:	2400      	movs	r4, #0
 8001134:	e758      	b.n	8000fe8 <__aeabi_dadd+0x584>
 8001136:	2500      	movs	r5, #0
 8001138:	2400      	movs	r4, #0
 800113a:	2600      	movs	r6, #0
 800113c:	e5db      	b.n	8000cf6 <__aeabi_dadd+0x292>
 800113e:	46c0      	nop			@ (mov r8, r8)
 8001140:	000007fe 	.word	0x000007fe
 8001144:	000007ff 	.word	0x000007ff
 8001148:	ff7fffff 	.word	0xff7fffff
 800114c:	4647      	mov	r7, r8
 800114e:	430f      	orrs	r7, r1
 8001150:	d100      	bne.n	8001154 <__aeabi_dadd+0x6f0>
 8001152:	e747      	b.n	8000fe4 <__aeabi_dadd+0x580>
 8001154:	000e      	movs	r6, r1
 8001156:	46c1      	mov	r9, r8
 8001158:	e5b5      	b.n	8000cc6 <__aeabi_dadd+0x262>
 800115a:	08df      	lsrs	r7, r3, #3
 800115c:	0764      	lsls	r4, r4, #29
 800115e:	2102      	movs	r1, #2
 8001160:	4327      	orrs	r7, r4
 8001162:	0900      	lsrs	r0, r0, #4
 8001164:	e5b5      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 8001166:	0019      	movs	r1, r3
 8001168:	08c0      	lsrs	r0, r0, #3
 800116a:	0777      	lsls	r7, r6, #29
 800116c:	4307      	orrs	r7, r0
 800116e:	4311      	orrs	r1, r2
 8001170:	08f0      	lsrs	r0, r6, #3
 8001172:	2900      	cmp	r1, #0
 8001174:	d100      	bne.n	8001178 <__aeabi_dadd+0x714>
 8001176:	e5d9      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 8001178:	2180      	movs	r1, #128	@ 0x80
 800117a:	0309      	lsls	r1, r1, #12
 800117c:	4208      	tst	r0, r1
 800117e:	d007      	beq.n	8001190 <__aeabi_dadd+0x72c>
 8001180:	08dc      	lsrs	r4, r3, #3
 8001182:	420c      	tst	r4, r1
 8001184:	d104      	bne.n	8001190 <__aeabi_dadd+0x72c>
 8001186:	08d2      	lsrs	r2, r2, #3
 8001188:	075b      	lsls	r3, r3, #29
 800118a:	431a      	orrs	r2, r3
 800118c:	0017      	movs	r7, r2
 800118e:	0020      	movs	r0, r4
 8001190:	0f7b      	lsrs	r3, r7, #29
 8001192:	00ff      	lsls	r7, r7, #3
 8001194:	08ff      	lsrs	r7, r7, #3
 8001196:	075b      	lsls	r3, r3, #29
 8001198:	431f      	orrs	r7, r3
 800119a:	e5c7      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 800119c:	000f      	movs	r7, r1
 800119e:	e5c5      	b.n	8000d2c <__aeabi_dadd+0x2c8>
 80011a0:	4b12      	ldr	r3, [pc, #72]	@ (80011ec <__aeabi_dadd+0x788>)
 80011a2:	08d2      	lsrs	r2, r2, #3
 80011a4:	4033      	ands	r3, r6
 80011a6:	075f      	lsls	r7, r3, #29
 80011a8:	025b      	lsls	r3, r3, #9
 80011aa:	2401      	movs	r4, #1
 80011ac:	4317      	orrs	r7, r2
 80011ae:	0b1e      	lsrs	r6, r3, #12
 80011b0:	e5a1      	b.n	8000cf6 <__aeabi_dadd+0x292>
 80011b2:	4226      	tst	r6, r4
 80011b4:	d012      	beq.n	80011dc <__aeabi_dadd+0x778>
 80011b6:	4b0d      	ldr	r3, [pc, #52]	@ (80011ec <__aeabi_dadd+0x788>)
 80011b8:	4665      	mov	r5, ip
 80011ba:	0002      	movs	r2, r0
 80011bc:	2401      	movs	r4, #1
 80011be:	401e      	ands	r6, r3
 80011c0:	e4e6      	b.n	8000b90 <__aeabi_dadd+0x12c>
 80011c2:	0021      	movs	r1, r4
 80011c4:	e585      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 80011c6:	0017      	movs	r7, r2
 80011c8:	e5a8      	b.n	8000d1c <__aeabi_dadd+0x2b8>
 80011ca:	003a      	movs	r2, r7
 80011cc:	e4d4      	b.n	8000b78 <__aeabi_dadd+0x114>
 80011ce:	08db      	lsrs	r3, r3, #3
 80011d0:	0764      	lsls	r4, r4, #29
 80011d2:	431c      	orrs	r4, r3
 80011d4:	0027      	movs	r7, r4
 80011d6:	2102      	movs	r1, #2
 80011d8:	0900      	lsrs	r0, r0, #4
 80011da:	e57a      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 80011dc:	08c0      	lsrs	r0, r0, #3
 80011de:	0777      	lsls	r7, r6, #29
 80011e0:	4307      	orrs	r7, r0
 80011e2:	4665      	mov	r5, ip
 80011e4:	2100      	movs	r1, #0
 80011e6:	08f0      	lsrs	r0, r6, #3
 80011e8:	e573      	b.n	8000cd2 <__aeabi_dadd+0x26e>
 80011ea:	46c0      	nop			@ (mov r8, r8)
 80011ec:	ff7fffff 	.word	0xff7fffff

080011f0 <__aeabi_dmul>:
 80011f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011f2:	4657      	mov	r7, sl
 80011f4:	464e      	mov	r6, r9
 80011f6:	46de      	mov	lr, fp
 80011f8:	4645      	mov	r5, r8
 80011fa:	b5e0      	push	{r5, r6, r7, lr}
 80011fc:	001f      	movs	r7, r3
 80011fe:	030b      	lsls	r3, r1, #12
 8001200:	0b1b      	lsrs	r3, r3, #12
 8001202:	0016      	movs	r6, r2
 8001204:	469a      	mov	sl, r3
 8001206:	0fca      	lsrs	r2, r1, #31
 8001208:	004b      	lsls	r3, r1, #1
 800120a:	0004      	movs	r4, r0
 800120c:	4691      	mov	r9, r2
 800120e:	b085      	sub	sp, #20
 8001210:	0d5b      	lsrs	r3, r3, #21
 8001212:	d100      	bne.n	8001216 <__aeabi_dmul+0x26>
 8001214:	e1cf      	b.n	80015b6 <__aeabi_dmul+0x3c6>
 8001216:	4acd      	ldr	r2, [pc, #820]	@ (800154c <__aeabi_dmul+0x35c>)
 8001218:	4293      	cmp	r3, r2
 800121a:	d055      	beq.n	80012c8 <__aeabi_dmul+0xd8>
 800121c:	4651      	mov	r1, sl
 800121e:	0f42      	lsrs	r2, r0, #29
 8001220:	00c9      	lsls	r1, r1, #3
 8001222:	430a      	orrs	r2, r1
 8001224:	2180      	movs	r1, #128	@ 0x80
 8001226:	0409      	lsls	r1, r1, #16
 8001228:	4311      	orrs	r1, r2
 800122a:	00c2      	lsls	r2, r0, #3
 800122c:	4690      	mov	r8, r2
 800122e:	4ac8      	ldr	r2, [pc, #800]	@ (8001550 <__aeabi_dmul+0x360>)
 8001230:	468a      	mov	sl, r1
 8001232:	4693      	mov	fp, r2
 8001234:	449b      	add	fp, r3
 8001236:	2300      	movs	r3, #0
 8001238:	2500      	movs	r5, #0
 800123a:	9302      	str	r3, [sp, #8]
 800123c:	033c      	lsls	r4, r7, #12
 800123e:	007b      	lsls	r3, r7, #1
 8001240:	0ffa      	lsrs	r2, r7, #31
 8001242:	9601      	str	r6, [sp, #4]
 8001244:	0b24      	lsrs	r4, r4, #12
 8001246:	0d5b      	lsrs	r3, r3, #21
 8001248:	9200      	str	r2, [sp, #0]
 800124a:	d100      	bne.n	800124e <__aeabi_dmul+0x5e>
 800124c:	e188      	b.n	8001560 <__aeabi_dmul+0x370>
 800124e:	4abf      	ldr	r2, [pc, #764]	@ (800154c <__aeabi_dmul+0x35c>)
 8001250:	4293      	cmp	r3, r2
 8001252:	d100      	bne.n	8001256 <__aeabi_dmul+0x66>
 8001254:	e092      	b.n	800137c <__aeabi_dmul+0x18c>
 8001256:	4abe      	ldr	r2, [pc, #760]	@ (8001550 <__aeabi_dmul+0x360>)
 8001258:	4694      	mov	ip, r2
 800125a:	4463      	add	r3, ip
 800125c:	449b      	add	fp, r3
 800125e:	2d0a      	cmp	r5, #10
 8001260:	dc42      	bgt.n	80012e8 <__aeabi_dmul+0xf8>
 8001262:	00e4      	lsls	r4, r4, #3
 8001264:	0f73      	lsrs	r3, r6, #29
 8001266:	4323      	orrs	r3, r4
 8001268:	2480      	movs	r4, #128	@ 0x80
 800126a:	4649      	mov	r1, r9
 800126c:	0424      	lsls	r4, r4, #16
 800126e:	431c      	orrs	r4, r3
 8001270:	00f3      	lsls	r3, r6, #3
 8001272:	9301      	str	r3, [sp, #4]
 8001274:	9b00      	ldr	r3, [sp, #0]
 8001276:	2000      	movs	r0, #0
 8001278:	4059      	eors	r1, r3
 800127a:	b2cb      	uxtb	r3, r1
 800127c:	9303      	str	r3, [sp, #12]
 800127e:	2d02      	cmp	r5, #2
 8001280:	dc00      	bgt.n	8001284 <__aeabi_dmul+0x94>
 8001282:	e094      	b.n	80013ae <__aeabi_dmul+0x1be>
 8001284:	2301      	movs	r3, #1
 8001286:	40ab      	lsls	r3, r5
 8001288:	001d      	movs	r5, r3
 800128a:	23a6      	movs	r3, #166	@ 0xa6
 800128c:	002a      	movs	r2, r5
 800128e:	00db      	lsls	r3, r3, #3
 8001290:	401a      	ands	r2, r3
 8001292:	421d      	tst	r5, r3
 8001294:	d000      	beq.n	8001298 <__aeabi_dmul+0xa8>
 8001296:	e229      	b.n	80016ec <__aeabi_dmul+0x4fc>
 8001298:	2390      	movs	r3, #144	@ 0x90
 800129a:	009b      	lsls	r3, r3, #2
 800129c:	421d      	tst	r5, r3
 800129e:	d100      	bne.n	80012a2 <__aeabi_dmul+0xb2>
 80012a0:	e24d      	b.n	800173e <__aeabi_dmul+0x54e>
 80012a2:	2300      	movs	r3, #0
 80012a4:	2480      	movs	r4, #128	@ 0x80
 80012a6:	4699      	mov	r9, r3
 80012a8:	0324      	lsls	r4, r4, #12
 80012aa:	4ba8      	ldr	r3, [pc, #672]	@ (800154c <__aeabi_dmul+0x35c>)
 80012ac:	0010      	movs	r0, r2
 80012ae:	464a      	mov	r2, r9
 80012b0:	051b      	lsls	r3, r3, #20
 80012b2:	4323      	orrs	r3, r4
 80012b4:	07d2      	lsls	r2, r2, #31
 80012b6:	4313      	orrs	r3, r2
 80012b8:	0019      	movs	r1, r3
 80012ba:	b005      	add	sp, #20
 80012bc:	bcf0      	pop	{r4, r5, r6, r7}
 80012be:	46bb      	mov	fp, r7
 80012c0:	46b2      	mov	sl, r6
 80012c2:	46a9      	mov	r9, r5
 80012c4:	46a0      	mov	r8, r4
 80012c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012c8:	4652      	mov	r2, sl
 80012ca:	4302      	orrs	r2, r0
 80012cc:	4690      	mov	r8, r2
 80012ce:	d000      	beq.n	80012d2 <__aeabi_dmul+0xe2>
 80012d0:	e1ac      	b.n	800162c <__aeabi_dmul+0x43c>
 80012d2:	469b      	mov	fp, r3
 80012d4:	2302      	movs	r3, #2
 80012d6:	4692      	mov	sl, r2
 80012d8:	2508      	movs	r5, #8
 80012da:	9302      	str	r3, [sp, #8]
 80012dc:	e7ae      	b.n	800123c <__aeabi_dmul+0x4c>
 80012de:	9b00      	ldr	r3, [sp, #0]
 80012e0:	46a2      	mov	sl, r4
 80012e2:	4699      	mov	r9, r3
 80012e4:	9b01      	ldr	r3, [sp, #4]
 80012e6:	4698      	mov	r8, r3
 80012e8:	9b02      	ldr	r3, [sp, #8]
 80012ea:	2b02      	cmp	r3, #2
 80012ec:	d100      	bne.n	80012f0 <__aeabi_dmul+0x100>
 80012ee:	e1ca      	b.n	8001686 <__aeabi_dmul+0x496>
 80012f0:	2b03      	cmp	r3, #3
 80012f2:	d100      	bne.n	80012f6 <__aeabi_dmul+0x106>
 80012f4:	e192      	b.n	800161c <__aeabi_dmul+0x42c>
 80012f6:	2b01      	cmp	r3, #1
 80012f8:	d110      	bne.n	800131c <__aeabi_dmul+0x12c>
 80012fa:	2300      	movs	r3, #0
 80012fc:	2400      	movs	r4, #0
 80012fe:	2200      	movs	r2, #0
 8001300:	e7d4      	b.n	80012ac <__aeabi_dmul+0xbc>
 8001302:	2201      	movs	r2, #1
 8001304:	087b      	lsrs	r3, r7, #1
 8001306:	403a      	ands	r2, r7
 8001308:	4313      	orrs	r3, r2
 800130a:	4652      	mov	r2, sl
 800130c:	07d2      	lsls	r2, r2, #31
 800130e:	4313      	orrs	r3, r2
 8001310:	4698      	mov	r8, r3
 8001312:	4653      	mov	r3, sl
 8001314:	085b      	lsrs	r3, r3, #1
 8001316:	469a      	mov	sl, r3
 8001318:	9b03      	ldr	r3, [sp, #12]
 800131a:	4699      	mov	r9, r3
 800131c:	465b      	mov	r3, fp
 800131e:	1c58      	adds	r0, r3, #1
 8001320:	2380      	movs	r3, #128	@ 0x80
 8001322:	00db      	lsls	r3, r3, #3
 8001324:	445b      	add	r3, fp
 8001326:	2b00      	cmp	r3, #0
 8001328:	dc00      	bgt.n	800132c <__aeabi_dmul+0x13c>
 800132a:	e1b1      	b.n	8001690 <__aeabi_dmul+0x4a0>
 800132c:	4642      	mov	r2, r8
 800132e:	0752      	lsls	r2, r2, #29
 8001330:	d00b      	beq.n	800134a <__aeabi_dmul+0x15a>
 8001332:	220f      	movs	r2, #15
 8001334:	4641      	mov	r1, r8
 8001336:	400a      	ands	r2, r1
 8001338:	2a04      	cmp	r2, #4
 800133a:	d006      	beq.n	800134a <__aeabi_dmul+0x15a>
 800133c:	4642      	mov	r2, r8
 800133e:	1d11      	adds	r1, r2, #4
 8001340:	4541      	cmp	r1, r8
 8001342:	4192      	sbcs	r2, r2
 8001344:	4688      	mov	r8, r1
 8001346:	4252      	negs	r2, r2
 8001348:	4492      	add	sl, r2
 800134a:	4652      	mov	r2, sl
 800134c:	01d2      	lsls	r2, r2, #7
 800134e:	d506      	bpl.n	800135e <__aeabi_dmul+0x16e>
 8001350:	4652      	mov	r2, sl
 8001352:	4b80      	ldr	r3, [pc, #512]	@ (8001554 <__aeabi_dmul+0x364>)
 8001354:	401a      	ands	r2, r3
 8001356:	2380      	movs	r3, #128	@ 0x80
 8001358:	4692      	mov	sl, r2
 800135a:	00db      	lsls	r3, r3, #3
 800135c:	18c3      	adds	r3, r0, r3
 800135e:	4a7e      	ldr	r2, [pc, #504]	@ (8001558 <__aeabi_dmul+0x368>)
 8001360:	4293      	cmp	r3, r2
 8001362:	dd00      	ble.n	8001366 <__aeabi_dmul+0x176>
 8001364:	e18f      	b.n	8001686 <__aeabi_dmul+0x496>
 8001366:	4642      	mov	r2, r8
 8001368:	08d1      	lsrs	r1, r2, #3
 800136a:	4652      	mov	r2, sl
 800136c:	0752      	lsls	r2, r2, #29
 800136e:	430a      	orrs	r2, r1
 8001370:	4651      	mov	r1, sl
 8001372:	055b      	lsls	r3, r3, #21
 8001374:	024c      	lsls	r4, r1, #9
 8001376:	0b24      	lsrs	r4, r4, #12
 8001378:	0d5b      	lsrs	r3, r3, #21
 800137a:	e797      	b.n	80012ac <__aeabi_dmul+0xbc>
 800137c:	4b73      	ldr	r3, [pc, #460]	@ (800154c <__aeabi_dmul+0x35c>)
 800137e:	4326      	orrs	r6, r4
 8001380:	469c      	mov	ip, r3
 8001382:	44e3      	add	fp, ip
 8001384:	2e00      	cmp	r6, #0
 8001386:	d100      	bne.n	800138a <__aeabi_dmul+0x19a>
 8001388:	e16f      	b.n	800166a <__aeabi_dmul+0x47a>
 800138a:	2303      	movs	r3, #3
 800138c:	4649      	mov	r1, r9
 800138e:	431d      	orrs	r5, r3
 8001390:	9b00      	ldr	r3, [sp, #0]
 8001392:	4059      	eors	r1, r3
 8001394:	b2cb      	uxtb	r3, r1
 8001396:	9303      	str	r3, [sp, #12]
 8001398:	2d0a      	cmp	r5, #10
 800139a:	dd00      	ble.n	800139e <__aeabi_dmul+0x1ae>
 800139c:	e133      	b.n	8001606 <__aeabi_dmul+0x416>
 800139e:	2301      	movs	r3, #1
 80013a0:	40ab      	lsls	r3, r5
 80013a2:	001d      	movs	r5, r3
 80013a4:	2303      	movs	r3, #3
 80013a6:	9302      	str	r3, [sp, #8]
 80013a8:	2288      	movs	r2, #136	@ 0x88
 80013aa:	422a      	tst	r2, r5
 80013ac:	d197      	bne.n	80012de <__aeabi_dmul+0xee>
 80013ae:	4642      	mov	r2, r8
 80013b0:	4643      	mov	r3, r8
 80013b2:	0412      	lsls	r2, r2, #16
 80013b4:	0c12      	lsrs	r2, r2, #16
 80013b6:	0016      	movs	r6, r2
 80013b8:	9801      	ldr	r0, [sp, #4]
 80013ba:	0c1d      	lsrs	r5, r3, #16
 80013bc:	0c03      	lsrs	r3, r0, #16
 80013be:	0400      	lsls	r0, r0, #16
 80013c0:	0c00      	lsrs	r0, r0, #16
 80013c2:	4346      	muls	r6, r0
 80013c4:	46b4      	mov	ip, r6
 80013c6:	001e      	movs	r6, r3
 80013c8:	436e      	muls	r6, r5
 80013ca:	9600      	str	r6, [sp, #0]
 80013cc:	0016      	movs	r6, r2
 80013ce:	0007      	movs	r7, r0
 80013d0:	435e      	muls	r6, r3
 80013d2:	4661      	mov	r1, ip
 80013d4:	46b0      	mov	r8, r6
 80013d6:	436f      	muls	r7, r5
 80013d8:	0c0e      	lsrs	r6, r1, #16
 80013da:	44b8      	add	r8, r7
 80013dc:	4446      	add	r6, r8
 80013de:	42b7      	cmp	r7, r6
 80013e0:	d905      	bls.n	80013ee <__aeabi_dmul+0x1fe>
 80013e2:	2180      	movs	r1, #128	@ 0x80
 80013e4:	0249      	lsls	r1, r1, #9
 80013e6:	4688      	mov	r8, r1
 80013e8:	9f00      	ldr	r7, [sp, #0]
 80013ea:	4447      	add	r7, r8
 80013ec:	9700      	str	r7, [sp, #0]
 80013ee:	4661      	mov	r1, ip
 80013f0:	0409      	lsls	r1, r1, #16
 80013f2:	0c09      	lsrs	r1, r1, #16
 80013f4:	0c37      	lsrs	r7, r6, #16
 80013f6:	0436      	lsls	r6, r6, #16
 80013f8:	468c      	mov	ip, r1
 80013fa:	0031      	movs	r1, r6
 80013fc:	4461      	add	r1, ip
 80013fe:	9101      	str	r1, [sp, #4]
 8001400:	0011      	movs	r1, r2
 8001402:	0c26      	lsrs	r6, r4, #16
 8001404:	0424      	lsls	r4, r4, #16
 8001406:	0c24      	lsrs	r4, r4, #16
 8001408:	4361      	muls	r1, r4
 800140a:	468c      	mov	ip, r1
 800140c:	0021      	movs	r1, r4
 800140e:	4369      	muls	r1, r5
 8001410:	4689      	mov	r9, r1
 8001412:	4661      	mov	r1, ip
 8001414:	0c09      	lsrs	r1, r1, #16
 8001416:	4688      	mov	r8, r1
 8001418:	4372      	muls	r2, r6
 800141a:	444a      	add	r2, r9
 800141c:	4442      	add	r2, r8
 800141e:	4375      	muls	r5, r6
 8001420:	4591      	cmp	r9, r2
 8001422:	d903      	bls.n	800142c <__aeabi_dmul+0x23c>
 8001424:	2180      	movs	r1, #128	@ 0x80
 8001426:	0249      	lsls	r1, r1, #9
 8001428:	4688      	mov	r8, r1
 800142a:	4445      	add	r5, r8
 800142c:	0c11      	lsrs	r1, r2, #16
 800142e:	4688      	mov	r8, r1
 8001430:	4661      	mov	r1, ip
 8001432:	0409      	lsls	r1, r1, #16
 8001434:	0c09      	lsrs	r1, r1, #16
 8001436:	468c      	mov	ip, r1
 8001438:	0412      	lsls	r2, r2, #16
 800143a:	4462      	add	r2, ip
 800143c:	18b9      	adds	r1, r7, r2
 800143e:	9102      	str	r1, [sp, #8]
 8001440:	4651      	mov	r1, sl
 8001442:	0c09      	lsrs	r1, r1, #16
 8001444:	468c      	mov	ip, r1
 8001446:	4651      	mov	r1, sl
 8001448:	040f      	lsls	r7, r1, #16
 800144a:	0c3f      	lsrs	r7, r7, #16
 800144c:	0039      	movs	r1, r7
 800144e:	4341      	muls	r1, r0
 8001450:	4445      	add	r5, r8
 8001452:	4688      	mov	r8, r1
 8001454:	4661      	mov	r1, ip
 8001456:	4341      	muls	r1, r0
 8001458:	468a      	mov	sl, r1
 800145a:	4641      	mov	r1, r8
 800145c:	4660      	mov	r0, ip
 800145e:	0c09      	lsrs	r1, r1, #16
 8001460:	4689      	mov	r9, r1
 8001462:	4358      	muls	r0, r3
 8001464:	437b      	muls	r3, r7
 8001466:	4453      	add	r3, sl
 8001468:	444b      	add	r3, r9
 800146a:	459a      	cmp	sl, r3
 800146c:	d903      	bls.n	8001476 <__aeabi_dmul+0x286>
 800146e:	2180      	movs	r1, #128	@ 0x80
 8001470:	0249      	lsls	r1, r1, #9
 8001472:	4689      	mov	r9, r1
 8001474:	4448      	add	r0, r9
 8001476:	0c19      	lsrs	r1, r3, #16
 8001478:	4689      	mov	r9, r1
 800147a:	4641      	mov	r1, r8
 800147c:	0409      	lsls	r1, r1, #16
 800147e:	0c09      	lsrs	r1, r1, #16
 8001480:	4688      	mov	r8, r1
 8001482:	0039      	movs	r1, r7
 8001484:	4361      	muls	r1, r4
 8001486:	041b      	lsls	r3, r3, #16
 8001488:	4443      	add	r3, r8
 800148a:	4688      	mov	r8, r1
 800148c:	4661      	mov	r1, ip
 800148e:	434c      	muls	r4, r1
 8001490:	4371      	muls	r1, r6
 8001492:	468c      	mov	ip, r1
 8001494:	4641      	mov	r1, r8
 8001496:	4377      	muls	r7, r6
 8001498:	0c0e      	lsrs	r6, r1, #16
 800149a:	193f      	adds	r7, r7, r4
 800149c:	19f6      	adds	r6, r6, r7
 800149e:	4448      	add	r0, r9
 80014a0:	42b4      	cmp	r4, r6
 80014a2:	d903      	bls.n	80014ac <__aeabi_dmul+0x2bc>
 80014a4:	2180      	movs	r1, #128	@ 0x80
 80014a6:	0249      	lsls	r1, r1, #9
 80014a8:	4689      	mov	r9, r1
 80014aa:	44cc      	add	ip, r9
 80014ac:	9902      	ldr	r1, [sp, #8]
 80014ae:	9f00      	ldr	r7, [sp, #0]
 80014b0:	4689      	mov	r9, r1
 80014b2:	0431      	lsls	r1, r6, #16
 80014b4:	444f      	add	r7, r9
 80014b6:	4689      	mov	r9, r1
 80014b8:	4641      	mov	r1, r8
 80014ba:	4297      	cmp	r7, r2
 80014bc:	4192      	sbcs	r2, r2
 80014be:	040c      	lsls	r4, r1, #16
 80014c0:	0c24      	lsrs	r4, r4, #16
 80014c2:	444c      	add	r4, r9
 80014c4:	18ff      	adds	r7, r7, r3
 80014c6:	4252      	negs	r2, r2
 80014c8:	1964      	adds	r4, r4, r5
 80014ca:	18a1      	adds	r1, r4, r2
 80014cc:	429f      	cmp	r7, r3
 80014ce:	419b      	sbcs	r3, r3
 80014d0:	4688      	mov	r8, r1
 80014d2:	4682      	mov	sl, r0
 80014d4:	425b      	negs	r3, r3
 80014d6:	4699      	mov	r9, r3
 80014d8:	4590      	cmp	r8, r2
 80014da:	4192      	sbcs	r2, r2
 80014dc:	42ac      	cmp	r4, r5
 80014de:	41a4      	sbcs	r4, r4
 80014e0:	44c2      	add	sl, r8
 80014e2:	44d1      	add	r9, sl
 80014e4:	4252      	negs	r2, r2
 80014e6:	4264      	negs	r4, r4
 80014e8:	4314      	orrs	r4, r2
 80014ea:	4599      	cmp	r9, r3
 80014ec:	419b      	sbcs	r3, r3
 80014ee:	4582      	cmp	sl, r0
 80014f0:	4192      	sbcs	r2, r2
 80014f2:	425b      	negs	r3, r3
 80014f4:	4252      	negs	r2, r2
 80014f6:	4313      	orrs	r3, r2
 80014f8:	464a      	mov	r2, r9
 80014fa:	0c36      	lsrs	r6, r6, #16
 80014fc:	19a4      	adds	r4, r4, r6
 80014fe:	18e3      	adds	r3, r4, r3
 8001500:	4463      	add	r3, ip
 8001502:	025b      	lsls	r3, r3, #9
 8001504:	0dd2      	lsrs	r2, r2, #23
 8001506:	431a      	orrs	r2, r3
 8001508:	9901      	ldr	r1, [sp, #4]
 800150a:	4692      	mov	sl, r2
 800150c:	027a      	lsls	r2, r7, #9
 800150e:	430a      	orrs	r2, r1
 8001510:	1e50      	subs	r0, r2, #1
 8001512:	4182      	sbcs	r2, r0
 8001514:	0dff      	lsrs	r7, r7, #23
 8001516:	4317      	orrs	r7, r2
 8001518:	464a      	mov	r2, r9
 800151a:	0252      	lsls	r2, r2, #9
 800151c:	4317      	orrs	r7, r2
 800151e:	46b8      	mov	r8, r7
 8001520:	01db      	lsls	r3, r3, #7
 8001522:	d500      	bpl.n	8001526 <__aeabi_dmul+0x336>
 8001524:	e6ed      	b.n	8001302 <__aeabi_dmul+0x112>
 8001526:	4b0d      	ldr	r3, [pc, #52]	@ (800155c <__aeabi_dmul+0x36c>)
 8001528:	9a03      	ldr	r2, [sp, #12]
 800152a:	445b      	add	r3, fp
 800152c:	4691      	mov	r9, r2
 800152e:	2b00      	cmp	r3, #0
 8001530:	dc00      	bgt.n	8001534 <__aeabi_dmul+0x344>
 8001532:	e0ac      	b.n	800168e <__aeabi_dmul+0x49e>
 8001534:	003a      	movs	r2, r7
 8001536:	0752      	lsls	r2, r2, #29
 8001538:	d100      	bne.n	800153c <__aeabi_dmul+0x34c>
 800153a:	e710      	b.n	800135e <__aeabi_dmul+0x16e>
 800153c:	220f      	movs	r2, #15
 800153e:	4658      	mov	r0, fp
 8001540:	403a      	ands	r2, r7
 8001542:	2a04      	cmp	r2, #4
 8001544:	d000      	beq.n	8001548 <__aeabi_dmul+0x358>
 8001546:	e6f9      	b.n	800133c <__aeabi_dmul+0x14c>
 8001548:	e709      	b.n	800135e <__aeabi_dmul+0x16e>
 800154a:	46c0      	nop			@ (mov r8, r8)
 800154c:	000007ff 	.word	0x000007ff
 8001550:	fffffc01 	.word	0xfffffc01
 8001554:	feffffff 	.word	0xfeffffff
 8001558:	000007fe 	.word	0x000007fe
 800155c:	000003ff 	.word	0x000003ff
 8001560:	0022      	movs	r2, r4
 8001562:	4332      	orrs	r2, r6
 8001564:	d06f      	beq.n	8001646 <__aeabi_dmul+0x456>
 8001566:	2c00      	cmp	r4, #0
 8001568:	d100      	bne.n	800156c <__aeabi_dmul+0x37c>
 800156a:	e0c2      	b.n	80016f2 <__aeabi_dmul+0x502>
 800156c:	0020      	movs	r0, r4
 800156e:	f000 fa1d 	bl	80019ac <__clzsi2>
 8001572:	0002      	movs	r2, r0
 8001574:	0003      	movs	r3, r0
 8001576:	3a0b      	subs	r2, #11
 8001578:	201d      	movs	r0, #29
 800157a:	1a82      	subs	r2, r0, r2
 800157c:	0030      	movs	r0, r6
 800157e:	0019      	movs	r1, r3
 8001580:	40d0      	lsrs	r0, r2
 8001582:	3908      	subs	r1, #8
 8001584:	408c      	lsls	r4, r1
 8001586:	0002      	movs	r2, r0
 8001588:	4322      	orrs	r2, r4
 800158a:	0034      	movs	r4, r6
 800158c:	408c      	lsls	r4, r1
 800158e:	4659      	mov	r1, fp
 8001590:	1acb      	subs	r3, r1, r3
 8001592:	4986      	ldr	r1, [pc, #536]	@ (80017ac <__aeabi_dmul+0x5bc>)
 8001594:	468b      	mov	fp, r1
 8001596:	449b      	add	fp, r3
 8001598:	2d0a      	cmp	r5, #10
 800159a:	dd00      	ble.n	800159e <__aeabi_dmul+0x3ae>
 800159c:	e6a4      	b.n	80012e8 <__aeabi_dmul+0xf8>
 800159e:	4649      	mov	r1, r9
 80015a0:	9b00      	ldr	r3, [sp, #0]
 80015a2:	9401      	str	r4, [sp, #4]
 80015a4:	4059      	eors	r1, r3
 80015a6:	b2cb      	uxtb	r3, r1
 80015a8:	0014      	movs	r4, r2
 80015aa:	2000      	movs	r0, #0
 80015ac:	9303      	str	r3, [sp, #12]
 80015ae:	2d02      	cmp	r5, #2
 80015b0:	dd00      	ble.n	80015b4 <__aeabi_dmul+0x3c4>
 80015b2:	e667      	b.n	8001284 <__aeabi_dmul+0x94>
 80015b4:	e6fb      	b.n	80013ae <__aeabi_dmul+0x1be>
 80015b6:	4653      	mov	r3, sl
 80015b8:	4303      	orrs	r3, r0
 80015ba:	4698      	mov	r8, r3
 80015bc:	d03c      	beq.n	8001638 <__aeabi_dmul+0x448>
 80015be:	4653      	mov	r3, sl
 80015c0:	2b00      	cmp	r3, #0
 80015c2:	d100      	bne.n	80015c6 <__aeabi_dmul+0x3d6>
 80015c4:	e0a3      	b.n	800170e <__aeabi_dmul+0x51e>
 80015c6:	4650      	mov	r0, sl
 80015c8:	f000 f9f0 	bl	80019ac <__clzsi2>
 80015cc:	230b      	movs	r3, #11
 80015ce:	425b      	negs	r3, r3
 80015d0:	469c      	mov	ip, r3
 80015d2:	0002      	movs	r2, r0
 80015d4:	4484      	add	ip, r0
 80015d6:	0011      	movs	r1, r2
 80015d8:	4650      	mov	r0, sl
 80015da:	3908      	subs	r1, #8
 80015dc:	4088      	lsls	r0, r1
 80015de:	231d      	movs	r3, #29
 80015e0:	4680      	mov	r8, r0
 80015e2:	4660      	mov	r0, ip
 80015e4:	1a1b      	subs	r3, r3, r0
 80015e6:	0020      	movs	r0, r4
 80015e8:	40d8      	lsrs	r0, r3
 80015ea:	0003      	movs	r3, r0
 80015ec:	4640      	mov	r0, r8
 80015ee:	4303      	orrs	r3, r0
 80015f0:	469a      	mov	sl, r3
 80015f2:	0023      	movs	r3, r4
 80015f4:	408b      	lsls	r3, r1
 80015f6:	4698      	mov	r8, r3
 80015f8:	4b6c      	ldr	r3, [pc, #432]	@ (80017ac <__aeabi_dmul+0x5bc>)
 80015fa:	2500      	movs	r5, #0
 80015fc:	1a9b      	subs	r3, r3, r2
 80015fe:	469b      	mov	fp, r3
 8001600:	2300      	movs	r3, #0
 8001602:	9302      	str	r3, [sp, #8]
 8001604:	e61a      	b.n	800123c <__aeabi_dmul+0x4c>
 8001606:	2d0f      	cmp	r5, #15
 8001608:	d000      	beq.n	800160c <__aeabi_dmul+0x41c>
 800160a:	e0c9      	b.n	80017a0 <__aeabi_dmul+0x5b0>
 800160c:	2380      	movs	r3, #128	@ 0x80
 800160e:	4652      	mov	r2, sl
 8001610:	031b      	lsls	r3, r3, #12
 8001612:	421a      	tst	r2, r3
 8001614:	d002      	beq.n	800161c <__aeabi_dmul+0x42c>
 8001616:	421c      	tst	r4, r3
 8001618:	d100      	bne.n	800161c <__aeabi_dmul+0x42c>
 800161a:	e092      	b.n	8001742 <__aeabi_dmul+0x552>
 800161c:	2480      	movs	r4, #128	@ 0x80
 800161e:	4653      	mov	r3, sl
 8001620:	0324      	lsls	r4, r4, #12
 8001622:	431c      	orrs	r4, r3
 8001624:	0324      	lsls	r4, r4, #12
 8001626:	4642      	mov	r2, r8
 8001628:	0b24      	lsrs	r4, r4, #12
 800162a:	e63e      	b.n	80012aa <__aeabi_dmul+0xba>
 800162c:	469b      	mov	fp, r3
 800162e:	2303      	movs	r3, #3
 8001630:	4680      	mov	r8, r0
 8001632:	250c      	movs	r5, #12
 8001634:	9302      	str	r3, [sp, #8]
 8001636:	e601      	b.n	800123c <__aeabi_dmul+0x4c>
 8001638:	2300      	movs	r3, #0
 800163a:	469a      	mov	sl, r3
 800163c:	469b      	mov	fp, r3
 800163e:	3301      	adds	r3, #1
 8001640:	2504      	movs	r5, #4
 8001642:	9302      	str	r3, [sp, #8]
 8001644:	e5fa      	b.n	800123c <__aeabi_dmul+0x4c>
 8001646:	2101      	movs	r1, #1
 8001648:	430d      	orrs	r5, r1
 800164a:	2d0a      	cmp	r5, #10
 800164c:	dd00      	ble.n	8001650 <__aeabi_dmul+0x460>
 800164e:	e64b      	b.n	80012e8 <__aeabi_dmul+0xf8>
 8001650:	4649      	mov	r1, r9
 8001652:	9800      	ldr	r0, [sp, #0]
 8001654:	4041      	eors	r1, r0
 8001656:	b2c9      	uxtb	r1, r1
 8001658:	9103      	str	r1, [sp, #12]
 800165a:	2d02      	cmp	r5, #2
 800165c:	dc00      	bgt.n	8001660 <__aeabi_dmul+0x470>
 800165e:	e096      	b.n	800178e <__aeabi_dmul+0x59e>
 8001660:	2300      	movs	r3, #0
 8001662:	2400      	movs	r4, #0
 8001664:	2001      	movs	r0, #1
 8001666:	9301      	str	r3, [sp, #4]
 8001668:	e60c      	b.n	8001284 <__aeabi_dmul+0x94>
 800166a:	4649      	mov	r1, r9
 800166c:	2302      	movs	r3, #2
 800166e:	9a00      	ldr	r2, [sp, #0]
 8001670:	432b      	orrs	r3, r5
 8001672:	4051      	eors	r1, r2
 8001674:	b2ca      	uxtb	r2, r1
 8001676:	9203      	str	r2, [sp, #12]
 8001678:	2b0a      	cmp	r3, #10
 800167a:	dd00      	ble.n	800167e <__aeabi_dmul+0x48e>
 800167c:	e634      	b.n	80012e8 <__aeabi_dmul+0xf8>
 800167e:	2d00      	cmp	r5, #0
 8001680:	d157      	bne.n	8001732 <__aeabi_dmul+0x542>
 8001682:	9b03      	ldr	r3, [sp, #12]
 8001684:	4699      	mov	r9, r3
 8001686:	2400      	movs	r4, #0
 8001688:	2200      	movs	r2, #0
 800168a:	4b49      	ldr	r3, [pc, #292]	@ (80017b0 <__aeabi_dmul+0x5c0>)
 800168c:	e60e      	b.n	80012ac <__aeabi_dmul+0xbc>
 800168e:	4658      	mov	r0, fp
 8001690:	2101      	movs	r1, #1
 8001692:	1ac9      	subs	r1, r1, r3
 8001694:	2938      	cmp	r1, #56	@ 0x38
 8001696:	dd00      	ble.n	800169a <__aeabi_dmul+0x4aa>
 8001698:	e62f      	b.n	80012fa <__aeabi_dmul+0x10a>
 800169a:	291f      	cmp	r1, #31
 800169c:	dd56      	ble.n	800174c <__aeabi_dmul+0x55c>
 800169e:	221f      	movs	r2, #31
 80016a0:	4654      	mov	r4, sl
 80016a2:	4252      	negs	r2, r2
 80016a4:	1ad3      	subs	r3, r2, r3
 80016a6:	40dc      	lsrs	r4, r3
 80016a8:	2920      	cmp	r1, #32
 80016aa:	d007      	beq.n	80016bc <__aeabi_dmul+0x4cc>
 80016ac:	4b41      	ldr	r3, [pc, #260]	@ (80017b4 <__aeabi_dmul+0x5c4>)
 80016ae:	4642      	mov	r2, r8
 80016b0:	469c      	mov	ip, r3
 80016b2:	4653      	mov	r3, sl
 80016b4:	4460      	add	r0, ip
 80016b6:	4083      	lsls	r3, r0
 80016b8:	431a      	orrs	r2, r3
 80016ba:	4690      	mov	r8, r2
 80016bc:	4642      	mov	r2, r8
 80016be:	2107      	movs	r1, #7
 80016c0:	1e53      	subs	r3, r2, #1
 80016c2:	419a      	sbcs	r2, r3
 80016c4:	000b      	movs	r3, r1
 80016c6:	4322      	orrs	r2, r4
 80016c8:	4013      	ands	r3, r2
 80016ca:	2400      	movs	r4, #0
 80016cc:	4211      	tst	r1, r2
 80016ce:	d009      	beq.n	80016e4 <__aeabi_dmul+0x4f4>
 80016d0:	230f      	movs	r3, #15
 80016d2:	4013      	ands	r3, r2
 80016d4:	2b04      	cmp	r3, #4
 80016d6:	d05d      	beq.n	8001794 <__aeabi_dmul+0x5a4>
 80016d8:	1d11      	adds	r1, r2, #4
 80016da:	4291      	cmp	r1, r2
 80016dc:	419b      	sbcs	r3, r3
 80016de:	000a      	movs	r2, r1
 80016e0:	425b      	negs	r3, r3
 80016e2:	075b      	lsls	r3, r3, #29
 80016e4:	08d2      	lsrs	r2, r2, #3
 80016e6:	431a      	orrs	r2, r3
 80016e8:	2300      	movs	r3, #0
 80016ea:	e5df      	b.n	80012ac <__aeabi_dmul+0xbc>
 80016ec:	9b03      	ldr	r3, [sp, #12]
 80016ee:	4699      	mov	r9, r3
 80016f0:	e5fa      	b.n	80012e8 <__aeabi_dmul+0xf8>
 80016f2:	9801      	ldr	r0, [sp, #4]
 80016f4:	f000 f95a 	bl	80019ac <__clzsi2>
 80016f8:	0002      	movs	r2, r0
 80016fa:	0003      	movs	r3, r0
 80016fc:	3215      	adds	r2, #21
 80016fe:	3320      	adds	r3, #32
 8001700:	2a1c      	cmp	r2, #28
 8001702:	dc00      	bgt.n	8001706 <__aeabi_dmul+0x516>
 8001704:	e738      	b.n	8001578 <__aeabi_dmul+0x388>
 8001706:	9a01      	ldr	r2, [sp, #4]
 8001708:	3808      	subs	r0, #8
 800170a:	4082      	lsls	r2, r0
 800170c:	e73f      	b.n	800158e <__aeabi_dmul+0x39e>
 800170e:	f000 f94d 	bl	80019ac <__clzsi2>
 8001712:	2315      	movs	r3, #21
 8001714:	469c      	mov	ip, r3
 8001716:	4484      	add	ip, r0
 8001718:	0002      	movs	r2, r0
 800171a:	4663      	mov	r3, ip
 800171c:	3220      	adds	r2, #32
 800171e:	2b1c      	cmp	r3, #28
 8001720:	dc00      	bgt.n	8001724 <__aeabi_dmul+0x534>
 8001722:	e758      	b.n	80015d6 <__aeabi_dmul+0x3e6>
 8001724:	2300      	movs	r3, #0
 8001726:	4698      	mov	r8, r3
 8001728:	0023      	movs	r3, r4
 800172a:	3808      	subs	r0, #8
 800172c:	4083      	lsls	r3, r0
 800172e:	469a      	mov	sl, r3
 8001730:	e762      	b.n	80015f8 <__aeabi_dmul+0x408>
 8001732:	001d      	movs	r5, r3
 8001734:	2300      	movs	r3, #0
 8001736:	2400      	movs	r4, #0
 8001738:	2002      	movs	r0, #2
 800173a:	9301      	str	r3, [sp, #4]
 800173c:	e5a2      	b.n	8001284 <__aeabi_dmul+0x94>
 800173e:	9002      	str	r0, [sp, #8]
 8001740:	e632      	b.n	80013a8 <__aeabi_dmul+0x1b8>
 8001742:	431c      	orrs	r4, r3
 8001744:	9b00      	ldr	r3, [sp, #0]
 8001746:	9a01      	ldr	r2, [sp, #4]
 8001748:	4699      	mov	r9, r3
 800174a:	e5ae      	b.n	80012aa <__aeabi_dmul+0xba>
 800174c:	4b1a      	ldr	r3, [pc, #104]	@ (80017b8 <__aeabi_dmul+0x5c8>)
 800174e:	4652      	mov	r2, sl
 8001750:	18c3      	adds	r3, r0, r3
 8001752:	4640      	mov	r0, r8
 8001754:	409a      	lsls	r2, r3
 8001756:	40c8      	lsrs	r0, r1
 8001758:	4302      	orrs	r2, r0
 800175a:	4640      	mov	r0, r8
 800175c:	4098      	lsls	r0, r3
 800175e:	0003      	movs	r3, r0
 8001760:	1e58      	subs	r0, r3, #1
 8001762:	4183      	sbcs	r3, r0
 8001764:	4654      	mov	r4, sl
 8001766:	431a      	orrs	r2, r3
 8001768:	40cc      	lsrs	r4, r1
 800176a:	0753      	lsls	r3, r2, #29
 800176c:	d009      	beq.n	8001782 <__aeabi_dmul+0x592>
 800176e:	230f      	movs	r3, #15
 8001770:	4013      	ands	r3, r2
 8001772:	2b04      	cmp	r3, #4
 8001774:	d005      	beq.n	8001782 <__aeabi_dmul+0x592>
 8001776:	1d13      	adds	r3, r2, #4
 8001778:	4293      	cmp	r3, r2
 800177a:	4192      	sbcs	r2, r2
 800177c:	4252      	negs	r2, r2
 800177e:	18a4      	adds	r4, r4, r2
 8001780:	001a      	movs	r2, r3
 8001782:	0223      	lsls	r3, r4, #8
 8001784:	d508      	bpl.n	8001798 <__aeabi_dmul+0x5a8>
 8001786:	2301      	movs	r3, #1
 8001788:	2400      	movs	r4, #0
 800178a:	2200      	movs	r2, #0
 800178c:	e58e      	b.n	80012ac <__aeabi_dmul+0xbc>
 800178e:	4689      	mov	r9, r1
 8001790:	2400      	movs	r4, #0
 8001792:	e58b      	b.n	80012ac <__aeabi_dmul+0xbc>
 8001794:	2300      	movs	r3, #0
 8001796:	e7a5      	b.n	80016e4 <__aeabi_dmul+0x4f4>
 8001798:	0763      	lsls	r3, r4, #29
 800179a:	0264      	lsls	r4, r4, #9
 800179c:	0b24      	lsrs	r4, r4, #12
 800179e:	e7a1      	b.n	80016e4 <__aeabi_dmul+0x4f4>
 80017a0:	9b00      	ldr	r3, [sp, #0]
 80017a2:	46a2      	mov	sl, r4
 80017a4:	4699      	mov	r9, r3
 80017a6:	9b01      	ldr	r3, [sp, #4]
 80017a8:	4698      	mov	r8, r3
 80017aa:	e737      	b.n	800161c <__aeabi_dmul+0x42c>
 80017ac:	fffffc0d 	.word	0xfffffc0d
 80017b0:	000007ff 	.word	0x000007ff
 80017b4:	0000043e 	.word	0x0000043e
 80017b8:	0000041e 	.word	0x0000041e

080017bc <__aeabi_i2d>:
 80017bc:	b570      	push	{r4, r5, r6, lr}
 80017be:	2800      	cmp	r0, #0
 80017c0:	d016      	beq.n	80017f0 <__aeabi_i2d+0x34>
 80017c2:	17c3      	asrs	r3, r0, #31
 80017c4:	18c5      	adds	r5, r0, r3
 80017c6:	405d      	eors	r5, r3
 80017c8:	0fc4      	lsrs	r4, r0, #31
 80017ca:	0028      	movs	r0, r5
 80017cc:	f000 f8ee 	bl	80019ac <__clzsi2>
 80017d0:	4b10      	ldr	r3, [pc, #64]	@ (8001814 <__aeabi_i2d+0x58>)
 80017d2:	1a1b      	subs	r3, r3, r0
 80017d4:	055b      	lsls	r3, r3, #21
 80017d6:	0d5b      	lsrs	r3, r3, #21
 80017d8:	280a      	cmp	r0, #10
 80017da:	dc14      	bgt.n	8001806 <__aeabi_i2d+0x4a>
 80017dc:	0002      	movs	r2, r0
 80017de:	002e      	movs	r6, r5
 80017e0:	3215      	adds	r2, #21
 80017e2:	4096      	lsls	r6, r2
 80017e4:	220b      	movs	r2, #11
 80017e6:	1a12      	subs	r2, r2, r0
 80017e8:	40d5      	lsrs	r5, r2
 80017ea:	032d      	lsls	r5, r5, #12
 80017ec:	0b2d      	lsrs	r5, r5, #12
 80017ee:	e003      	b.n	80017f8 <__aeabi_i2d+0x3c>
 80017f0:	2400      	movs	r4, #0
 80017f2:	2300      	movs	r3, #0
 80017f4:	2500      	movs	r5, #0
 80017f6:	2600      	movs	r6, #0
 80017f8:	051b      	lsls	r3, r3, #20
 80017fa:	432b      	orrs	r3, r5
 80017fc:	07e4      	lsls	r4, r4, #31
 80017fe:	4323      	orrs	r3, r4
 8001800:	0030      	movs	r0, r6
 8001802:	0019      	movs	r1, r3
 8001804:	bd70      	pop	{r4, r5, r6, pc}
 8001806:	380b      	subs	r0, #11
 8001808:	4085      	lsls	r5, r0
 800180a:	032d      	lsls	r5, r5, #12
 800180c:	2600      	movs	r6, #0
 800180e:	0b2d      	lsrs	r5, r5, #12
 8001810:	e7f2      	b.n	80017f8 <__aeabi_i2d+0x3c>
 8001812:	46c0      	nop			@ (mov r8, r8)
 8001814:	0000041e 	.word	0x0000041e

08001818 <__aeabi_f2d>:
 8001818:	b570      	push	{r4, r5, r6, lr}
 800181a:	0242      	lsls	r2, r0, #9
 800181c:	0043      	lsls	r3, r0, #1
 800181e:	0fc4      	lsrs	r4, r0, #31
 8001820:	20fe      	movs	r0, #254	@ 0xfe
 8001822:	0e1b      	lsrs	r3, r3, #24
 8001824:	1c59      	adds	r1, r3, #1
 8001826:	0a55      	lsrs	r5, r2, #9
 8001828:	4208      	tst	r0, r1
 800182a:	d00c      	beq.n	8001846 <__aeabi_f2d+0x2e>
 800182c:	21e0      	movs	r1, #224	@ 0xe0
 800182e:	0089      	lsls	r1, r1, #2
 8001830:	468c      	mov	ip, r1
 8001832:	076d      	lsls	r5, r5, #29
 8001834:	0b12      	lsrs	r2, r2, #12
 8001836:	4463      	add	r3, ip
 8001838:	051b      	lsls	r3, r3, #20
 800183a:	4313      	orrs	r3, r2
 800183c:	07e4      	lsls	r4, r4, #31
 800183e:	4323      	orrs	r3, r4
 8001840:	0028      	movs	r0, r5
 8001842:	0019      	movs	r1, r3
 8001844:	bd70      	pop	{r4, r5, r6, pc}
 8001846:	2b00      	cmp	r3, #0
 8001848:	d114      	bne.n	8001874 <__aeabi_f2d+0x5c>
 800184a:	2d00      	cmp	r5, #0
 800184c:	d01b      	beq.n	8001886 <__aeabi_f2d+0x6e>
 800184e:	0028      	movs	r0, r5
 8001850:	f000 f8ac 	bl	80019ac <__clzsi2>
 8001854:	280a      	cmp	r0, #10
 8001856:	dc1c      	bgt.n	8001892 <__aeabi_f2d+0x7a>
 8001858:	230b      	movs	r3, #11
 800185a:	002a      	movs	r2, r5
 800185c:	1a1b      	subs	r3, r3, r0
 800185e:	40da      	lsrs	r2, r3
 8001860:	0003      	movs	r3, r0
 8001862:	3315      	adds	r3, #21
 8001864:	409d      	lsls	r5, r3
 8001866:	4b0e      	ldr	r3, [pc, #56]	@ (80018a0 <__aeabi_f2d+0x88>)
 8001868:	0312      	lsls	r2, r2, #12
 800186a:	1a1b      	subs	r3, r3, r0
 800186c:	055b      	lsls	r3, r3, #21
 800186e:	0b12      	lsrs	r2, r2, #12
 8001870:	0d5b      	lsrs	r3, r3, #21
 8001872:	e7e1      	b.n	8001838 <__aeabi_f2d+0x20>
 8001874:	2d00      	cmp	r5, #0
 8001876:	d009      	beq.n	800188c <__aeabi_f2d+0x74>
 8001878:	0b13      	lsrs	r3, r2, #12
 800187a:	2280      	movs	r2, #128	@ 0x80
 800187c:	0312      	lsls	r2, r2, #12
 800187e:	431a      	orrs	r2, r3
 8001880:	076d      	lsls	r5, r5, #29
 8001882:	4b08      	ldr	r3, [pc, #32]	@ (80018a4 <__aeabi_f2d+0x8c>)
 8001884:	e7d8      	b.n	8001838 <__aeabi_f2d+0x20>
 8001886:	2300      	movs	r3, #0
 8001888:	2200      	movs	r2, #0
 800188a:	e7d5      	b.n	8001838 <__aeabi_f2d+0x20>
 800188c:	2200      	movs	r2, #0
 800188e:	4b05      	ldr	r3, [pc, #20]	@ (80018a4 <__aeabi_f2d+0x8c>)
 8001890:	e7d2      	b.n	8001838 <__aeabi_f2d+0x20>
 8001892:	0003      	movs	r3, r0
 8001894:	002a      	movs	r2, r5
 8001896:	3b0b      	subs	r3, #11
 8001898:	409a      	lsls	r2, r3
 800189a:	2500      	movs	r5, #0
 800189c:	e7e3      	b.n	8001866 <__aeabi_f2d+0x4e>
 800189e:	46c0      	nop			@ (mov r8, r8)
 80018a0:	00000389 	.word	0x00000389
 80018a4:	000007ff 	.word	0x000007ff

080018a8 <__aeabi_d2f>:
 80018a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018aa:	004b      	lsls	r3, r1, #1
 80018ac:	030f      	lsls	r7, r1, #12
 80018ae:	0d5b      	lsrs	r3, r3, #21
 80018b0:	4c3a      	ldr	r4, [pc, #232]	@ (800199c <__aeabi_d2f+0xf4>)
 80018b2:	0f45      	lsrs	r5, r0, #29
 80018b4:	b083      	sub	sp, #12
 80018b6:	0a7f      	lsrs	r7, r7, #9
 80018b8:	1c5e      	adds	r6, r3, #1
 80018ba:	432f      	orrs	r7, r5
 80018bc:	9000      	str	r0, [sp, #0]
 80018be:	9101      	str	r1, [sp, #4]
 80018c0:	0fca      	lsrs	r2, r1, #31
 80018c2:	00c5      	lsls	r5, r0, #3
 80018c4:	4226      	tst	r6, r4
 80018c6:	d00b      	beq.n	80018e0 <__aeabi_d2f+0x38>
 80018c8:	4935      	ldr	r1, [pc, #212]	@ (80019a0 <__aeabi_d2f+0xf8>)
 80018ca:	185c      	adds	r4, r3, r1
 80018cc:	2cfe      	cmp	r4, #254	@ 0xfe
 80018ce:	dd13      	ble.n	80018f8 <__aeabi_d2f+0x50>
 80018d0:	20ff      	movs	r0, #255	@ 0xff
 80018d2:	2300      	movs	r3, #0
 80018d4:	05c0      	lsls	r0, r0, #23
 80018d6:	4318      	orrs	r0, r3
 80018d8:	07d2      	lsls	r2, r2, #31
 80018da:	4310      	orrs	r0, r2
 80018dc:	b003      	add	sp, #12
 80018de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018e0:	433d      	orrs	r5, r7
 80018e2:	2b00      	cmp	r3, #0
 80018e4:	d101      	bne.n	80018ea <__aeabi_d2f+0x42>
 80018e6:	2000      	movs	r0, #0
 80018e8:	e7f4      	b.n	80018d4 <__aeabi_d2f+0x2c>
 80018ea:	2d00      	cmp	r5, #0
 80018ec:	d0f0      	beq.n	80018d0 <__aeabi_d2f+0x28>
 80018ee:	2380      	movs	r3, #128	@ 0x80
 80018f0:	03db      	lsls	r3, r3, #15
 80018f2:	20ff      	movs	r0, #255	@ 0xff
 80018f4:	433b      	orrs	r3, r7
 80018f6:	e7ed      	b.n	80018d4 <__aeabi_d2f+0x2c>
 80018f8:	2c00      	cmp	r4, #0
 80018fa:	dd0c      	ble.n	8001916 <__aeabi_d2f+0x6e>
 80018fc:	9b00      	ldr	r3, [sp, #0]
 80018fe:	00ff      	lsls	r7, r7, #3
 8001900:	019b      	lsls	r3, r3, #6
 8001902:	1e58      	subs	r0, r3, #1
 8001904:	4183      	sbcs	r3, r0
 8001906:	0f69      	lsrs	r1, r5, #29
 8001908:	433b      	orrs	r3, r7
 800190a:	430b      	orrs	r3, r1
 800190c:	0759      	lsls	r1, r3, #29
 800190e:	d127      	bne.n	8001960 <__aeabi_d2f+0xb8>
 8001910:	08db      	lsrs	r3, r3, #3
 8001912:	b2e0      	uxtb	r0, r4
 8001914:	e7de      	b.n	80018d4 <__aeabi_d2f+0x2c>
 8001916:	0021      	movs	r1, r4
 8001918:	3117      	adds	r1, #23
 800191a:	db31      	blt.n	8001980 <__aeabi_d2f+0xd8>
 800191c:	2180      	movs	r1, #128	@ 0x80
 800191e:	201e      	movs	r0, #30
 8001920:	0409      	lsls	r1, r1, #16
 8001922:	4339      	orrs	r1, r7
 8001924:	1b00      	subs	r0, r0, r4
 8001926:	281f      	cmp	r0, #31
 8001928:	dd2d      	ble.n	8001986 <__aeabi_d2f+0xde>
 800192a:	2602      	movs	r6, #2
 800192c:	4276      	negs	r6, r6
 800192e:	1b34      	subs	r4, r6, r4
 8001930:	000e      	movs	r6, r1
 8001932:	40e6      	lsrs	r6, r4
 8001934:	0034      	movs	r4, r6
 8001936:	2820      	cmp	r0, #32
 8001938:	d004      	beq.n	8001944 <__aeabi_d2f+0x9c>
 800193a:	481a      	ldr	r0, [pc, #104]	@ (80019a4 <__aeabi_d2f+0xfc>)
 800193c:	4684      	mov	ip, r0
 800193e:	4463      	add	r3, ip
 8001940:	4099      	lsls	r1, r3
 8001942:	430d      	orrs	r5, r1
 8001944:	002b      	movs	r3, r5
 8001946:	1e59      	subs	r1, r3, #1
 8001948:	418b      	sbcs	r3, r1
 800194a:	4323      	orrs	r3, r4
 800194c:	0759      	lsls	r1, r3, #29
 800194e:	d003      	beq.n	8001958 <__aeabi_d2f+0xb0>
 8001950:	210f      	movs	r1, #15
 8001952:	4019      	ands	r1, r3
 8001954:	2904      	cmp	r1, #4
 8001956:	d10b      	bne.n	8001970 <__aeabi_d2f+0xc8>
 8001958:	019b      	lsls	r3, r3, #6
 800195a:	2000      	movs	r0, #0
 800195c:	0a5b      	lsrs	r3, r3, #9
 800195e:	e7b9      	b.n	80018d4 <__aeabi_d2f+0x2c>
 8001960:	210f      	movs	r1, #15
 8001962:	4019      	ands	r1, r3
 8001964:	2904      	cmp	r1, #4
 8001966:	d104      	bne.n	8001972 <__aeabi_d2f+0xca>
 8001968:	019b      	lsls	r3, r3, #6
 800196a:	0a5b      	lsrs	r3, r3, #9
 800196c:	b2e0      	uxtb	r0, r4
 800196e:	e7b1      	b.n	80018d4 <__aeabi_d2f+0x2c>
 8001970:	2400      	movs	r4, #0
 8001972:	3304      	adds	r3, #4
 8001974:	0159      	lsls	r1, r3, #5
 8001976:	d5f7      	bpl.n	8001968 <__aeabi_d2f+0xc0>
 8001978:	3401      	adds	r4, #1
 800197a:	2300      	movs	r3, #0
 800197c:	b2e0      	uxtb	r0, r4
 800197e:	e7a9      	b.n	80018d4 <__aeabi_d2f+0x2c>
 8001980:	2000      	movs	r0, #0
 8001982:	2300      	movs	r3, #0
 8001984:	e7a6      	b.n	80018d4 <__aeabi_d2f+0x2c>
 8001986:	4c08      	ldr	r4, [pc, #32]	@ (80019a8 <__aeabi_d2f+0x100>)
 8001988:	191c      	adds	r4, r3, r4
 800198a:	002b      	movs	r3, r5
 800198c:	40a5      	lsls	r5, r4
 800198e:	40c3      	lsrs	r3, r0
 8001990:	40a1      	lsls	r1, r4
 8001992:	1e68      	subs	r0, r5, #1
 8001994:	4185      	sbcs	r5, r0
 8001996:	4329      	orrs	r1, r5
 8001998:	430b      	orrs	r3, r1
 800199a:	e7d7      	b.n	800194c <__aeabi_d2f+0xa4>
 800199c:	000007fe 	.word	0x000007fe
 80019a0:	fffffc80 	.word	0xfffffc80
 80019a4:	fffffca2 	.word	0xfffffca2
 80019a8:	fffffc82 	.word	0xfffffc82

080019ac <__clzsi2>:
 80019ac:	211c      	movs	r1, #28
 80019ae:	2301      	movs	r3, #1
 80019b0:	041b      	lsls	r3, r3, #16
 80019b2:	4298      	cmp	r0, r3
 80019b4:	d301      	bcc.n	80019ba <__clzsi2+0xe>
 80019b6:	0c00      	lsrs	r0, r0, #16
 80019b8:	3910      	subs	r1, #16
 80019ba:	0a1b      	lsrs	r3, r3, #8
 80019bc:	4298      	cmp	r0, r3
 80019be:	d301      	bcc.n	80019c4 <__clzsi2+0x18>
 80019c0:	0a00      	lsrs	r0, r0, #8
 80019c2:	3908      	subs	r1, #8
 80019c4:	091b      	lsrs	r3, r3, #4
 80019c6:	4298      	cmp	r0, r3
 80019c8:	d301      	bcc.n	80019ce <__clzsi2+0x22>
 80019ca:	0900      	lsrs	r0, r0, #4
 80019cc:	3904      	subs	r1, #4
 80019ce:	a202      	add	r2, pc, #8	@ (adr r2, 80019d8 <__clzsi2+0x2c>)
 80019d0:	5c10      	ldrb	r0, [r2, r0]
 80019d2:	1840      	adds	r0, r0, r1
 80019d4:	4770      	bx	lr
 80019d6:	46c0      	nop			@ (mov r8, r8)
 80019d8:	02020304 	.word	0x02020304
 80019dc:	01010101 	.word	0x01010101
	...

080019e8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80019e8:	b580      	push	{r7, lr}
 80019ea:	b082      	sub	sp, #8
 80019ec:	af00      	add	r7, sp, #0
 80019ee:	0002      	movs	r2, r0
 80019f0:	1dfb      	adds	r3, r7, #7
 80019f2:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80019f4:	1dfb      	adds	r3, r7, #7
 80019f6:	781b      	ldrb	r3, [r3, #0]
 80019f8:	2b7f      	cmp	r3, #127	@ 0x7f
 80019fa:	d809      	bhi.n	8001a10 <__NVIC_EnableIRQ+0x28>
  {
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80019fc:	1dfb      	adds	r3, r7, #7
 80019fe:	781b      	ldrb	r3, [r3, #0]
 8001a00:	001a      	movs	r2, r3
 8001a02:	231f      	movs	r3, #31
 8001a04:	401a      	ands	r2, r3
 8001a06:	4b04      	ldr	r3, [pc, #16]	@ (8001a18 <__NVIC_EnableIRQ+0x30>)
 8001a08:	2101      	movs	r1, #1
 8001a0a:	4091      	lsls	r1, r2
 8001a0c:	000a      	movs	r2, r1
 8001a0e:	601a      	str	r2, [r3, #0]
  }
}
 8001a10:	46c0      	nop			@ (mov r8, r8)
 8001a12:	46bd      	mov	sp, r7
 8001a14:	b002      	add	sp, #8
 8001a16:	bd80      	pop	{r7, pc}
 8001a18:	e000e100 	.word	0xe000e100

08001a1c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001a1c:	b590      	push	{r4, r7, lr}
 8001a1e:	b083      	sub	sp, #12
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	0002      	movs	r2, r0
 8001a24:	6039      	str	r1, [r7, #0]
 8001a26:	1dfb      	adds	r3, r7, #7
 8001a28:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 8001a2a:	1dfb      	adds	r3, r7, #7
 8001a2c:	781b      	ldrb	r3, [r3, #0]
 8001a2e:	2b7f      	cmp	r3, #127	@ 0x7f
 8001a30:	d828      	bhi.n	8001a84 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001a32:	4a2f      	ldr	r2, [pc, #188]	@ (8001af0 <__NVIC_SetPriority+0xd4>)
 8001a34:	1dfb      	adds	r3, r7, #7
 8001a36:	781b      	ldrb	r3, [r3, #0]
 8001a38:	b25b      	sxtb	r3, r3
 8001a3a:	089b      	lsrs	r3, r3, #2
 8001a3c:	33c0      	adds	r3, #192	@ 0xc0
 8001a3e:	009b      	lsls	r3, r3, #2
 8001a40:	589b      	ldr	r3, [r3, r2]
 8001a42:	1dfa      	adds	r2, r7, #7
 8001a44:	7812      	ldrb	r2, [r2, #0]
 8001a46:	0011      	movs	r1, r2
 8001a48:	2203      	movs	r2, #3
 8001a4a:	400a      	ands	r2, r1
 8001a4c:	00d2      	lsls	r2, r2, #3
 8001a4e:	21ff      	movs	r1, #255	@ 0xff
 8001a50:	4091      	lsls	r1, r2
 8001a52:	000a      	movs	r2, r1
 8001a54:	43d2      	mvns	r2, r2
 8001a56:	401a      	ands	r2, r3
 8001a58:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8001a5a:	683b      	ldr	r3, [r7, #0]
 8001a5c:	019b      	lsls	r3, r3, #6
 8001a5e:	22ff      	movs	r2, #255	@ 0xff
 8001a60:	401a      	ands	r2, r3
 8001a62:	1dfb      	adds	r3, r7, #7
 8001a64:	781b      	ldrb	r3, [r3, #0]
 8001a66:	0018      	movs	r0, r3
 8001a68:	2303      	movs	r3, #3
 8001a6a:	4003      	ands	r3, r0
 8001a6c:	00db      	lsls	r3, r3, #3
 8001a6e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001a70:	481f      	ldr	r0, [pc, #124]	@ (8001af0 <__NVIC_SetPriority+0xd4>)
 8001a72:	1dfb      	adds	r3, r7, #7
 8001a74:	781b      	ldrb	r3, [r3, #0]
 8001a76:	b25b      	sxtb	r3, r3
 8001a78:	089b      	lsrs	r3, r3, #2
 8001a7a:	430a      	orrs	r2, r1
 8001a7c:	33c0      	adds	r3, #192	@ 0xc0
 8001a7e:	009b      	lsls	r3, r3, #2
 8001a80:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8001a82:	e031      	b.n	8001ae8 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001a84:	4a1b      	ldr	r2, [pc, #108]	@ (8001af4 <__NVIC_SetPriority+0xd8>)
 8001a86:	1dfb      	adds	r3, r7, #7
 8001a88:	781b      	ldrb	r3, [r3, #0]
 8001a8a:	0019      	movs	r1, r3
 8001a8c:	230f      	movs	r3, #15
 8001a8e:	400b      	ands	r3, r1
 8001a90:	3b08      	subs	r3, #8
 8001a92:	089b      	lsrs	r3, r3, #2
 8001a94:	3306      	adds	r3, #6
 8001a96:	009b      	lsls	r3, r3, #2
 8001a98:	18d3      	adds	r3, r2, r3
 8001a9a:	3304      	adds	r3, #4
 8001a9c:	681b      	ldr	r3, [r3, #0]
 8001a9e:	1dfa      	adds	r2, r7, #7
 8001aa0:	7812      	ldrb	r2, [r2, #0]
 8001aa2:	0011      	movs	r1, r2
 8001aa4:	2203      	movs	r2, #3
 8001aa6:	400a      	ands	r2, r1
 8001aa8:	00d2      	lsls	r2, r2, #3
 8001aaa:	21ff      	movs	r1, #255	@ 0xff
 8001aac:	4091      	lsls	r1, r2
 8001aae:	000a      	movs	r2, r1
 8001ab0:	43d2      	mvns	r2, r2
 8001ab2:	401a      	ands	r2, r3
 8001ab4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8001ab6:	683b      	ldr	r3, [r7, #0]
 8001ab8:	019b      	lsls	r3, r3, #6
 8001aba:	22ff      	movs	r2, #255	@ 0xff
 8001abc:	401a      	ands	r2, r3
 8001abe:	1dfb      	adds	r3, r7, #7
 8001ac0:	781b      	ldrb	r3, [r3, #0]
 8001ac2:	0018      	movs	r0, r3
 8001ac4:	2303      	movs	r3, #3
 8001ac6:	4003      	ands	r3, r0
 8001ac8:	00db      	lsls	r3, r3, #3
 8001aca:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8001acc:	4809      	ldr	r0, [pc, #36]	@ (8001af4 <__NVIC_SetPriority+0xd8>)
 8001ace:	1dfb      	adds	r3, r7, #7
 8001ad0:	781b      	ldrb	r3, [r3, #0]
 8001ad2:	001c      	movs	r4, r3
 8001ad4:	230f      	movs	r3, #15
 8001ad6:	4023      	ands	r3, r4
 8001ad8:	3b08      	subs	r3, #8
 8001ada:	089b      	lsrs	r3, r3, #2
 8001adc:	430a      	orrs	r2, r1
 8001ade:	3306      	adds	r3, #6
 8001ae0:	009b      	lsls	r3, r3, #2
 8001ae2:	18c3      	adds	r3, r0, r3
 8001ae4:	3304      	adds	r3, #4
 8001ae6:	601a      	str	r2, [r3, #0]
}
 8001ae8:	46c0      	nop			@ (mov r8, r8)
 8001aea:	46bd      	mov	sp, r7
 8001aec:	b003      	add	sp, #12
 8001aee:	bd90      	pop	{r4, r7, pc}
 8001af0:	e000e100 	.word	0xe000e100
 8001af4:	e000ed00 	.word	0xe000ed00

08001af8 <main>:
void LED_Init(void);

// System initialization functions
void System_Ready_Indicator(void);

int main(void) {
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b088      	sub	sp, #32
 8001afc:	af02      	add	r7, sp, #8
	USART1_Init_Interrupt();
 8001afe:	f000 f873 	bl	8001be8 <USART1_Init_Interrupt>
	LED_Init();
 8001b02:	f000 f849 	bl	8001b98 <LED_Init>

	System_Ready_Indicator();
 8001b06:	f000 f813 	bl	8001b30 <System_Ready_Indicator>

    // Initialize motor (PWM: PC8, Dir1: PC6, Dir2: PC7, Brake: PC5)
    MotorController motor;
    Motor_Init(&motor, 6, 7, 8, 5);
 8001b0a:	0038      	movs	r0, r7
 8001b0c:	2305      	movs	r3, #5
 8001b0e:	9300      	str	r3, [sp, #0]
 8001b10:	2308      	movs	r3, #8
 8001b12:	2207      	movs	r2, #7
 8001b14:	2106      	movs	r1, #6
 8001b16:	f000 fc89 	bl	800242c <Motor_Init>

    // Test sequence
    while (1) {
    	if (rx_ready == 1) {
 8001b1a:	4b04      	ldr	r3, [pc, #16]	@ (8001b2c <main+0x34>)
 8001b1c:	781b      	ldrb	r3, [r3, #0]
 8001b1e:	b2db      	uxtb	r3, r3
 8001b20:	2b01      	cmp	r3, #1
 8001b22:	d1fa      	bne.n	8001b1a <main+0x22>
    		USART1_HandleMessage();
 8001b24:	f000 f8fa 	bl	8001d1c <USART1_HandleMessage>
    	if (rx_ready == 1) {
 8001b28:	e7f7      	b.n	8001b1a <main+0x22>
 8001b2a:	46c0      	nop			@ (mov r8, r8)
 8001b2c:	2000003e 	.word	0x2000003e

08001b30 <System_Ready_Indicator>:
    	}
    }
}

/* System Initialization Functions */
void System_Ready_Indicator(void) {
 8001b30:	b580      	push	{r7, lr}
 8001b32:	b082      	sub	sp, #8
 8001b34:	af00      	add	r7, sp, #0
    // Blink pattern: 3 fast blinks
    for (int i = 0; i < 3; i++) {
 8001b36:	2300      	movs	r3, #0
 8001b38:	607b      	str	r3, [r7, #4]
 8001b3a:	e015      	b.n	8001b68 <System_Ready_Indicator+0x38>
        GPIOC->ODR |= ((1<<8) | (1<<9));
 8001b3c:	4b12      	ldr	r3, [pc, #72]	@ (8001b88 <System_Ready_Indicator+0x58>)
 8001b3e:	695a      	ldr	r2, [r3, #20]
 8001b40:	4b11      	ldr	r3, [pc, #68]	@ (8001b88 <System_Ready_Indicator+0x58>)
 8001b42:	21c0      	movs	r1, #192	@ 0xc0
 8001b44:	0089      	lsls	r1, r1, #2
 8001b46:	430a      	orrs	r2, r1
 8001b48:	615a      	str	r2, [r3, #20]
        delay_ms(100);
 8001b4a:	2064      	movs	r0, #100	@ 0x64
 8001b4c:	f000 f952 	bl	8001df4 <delay_ms>
        GPIOC->ODR &= ~((1<<8) | (1<<9));
 8001b50:	4b0d      	ldr	r3, [pc, #52]	@ (8001b88 <System_Ready_Indicator+0x58>)
 8001b52:	695a      	ldr	r2, [r3, #20]
 8001b54:	4b0c      	ldr	r3, [pc, #48]	@ (8001b88 <System_Ready_Indicator+0x58>)
 8001b56:	490d      	ldr	r1, [pc, #52]	@ (8001b8c <System_Ready_Indicator+0x5c>)
 8001b58:	400a      	ands	r2, r1
 8001b5a:	615a      	str	r2, [r3, #20]
        delay_ms(100);
 8001b5c:	2064      	movs	r0, #100	@ 0x64
 8001b5e:	f000 f949 	bl	8001df4 <delay_ms>
    for (int i = 0; i < 3; i++) {
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	3301      	adds	r3, #1
 8001b66:	607b      	str	r3, [r7, #4]
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	2b02      	cmp	r3, #2
 8001b6c:	dde6      	ble.n	8001b3c <System_Ready_Indicator+0xc>
    }

    USART1_SendString("\r\n=== STM32 Bluetooth Chassis Demo ===\r\n");
 8001b6e:	4b08      	ldr	r3, [pc, #32]	@ (8001b90 <System_Ready_Indicator+0x60>)
 8001b70:	0018      	movs	r0, r3
 8001b72:	f000 f929 	bl	8001dc8 <USART1_SendString>
    USART1_SendString("Send numbers csv for instructions\r\n");
 8001b76:	4b07      	ldr	r3, [pc, #28]	@ (8001b94 <System_Ready_Indicator+0x64>)
 8001b78:	0018      	movs	r0, r3
 8001b7a:	f000 f925 	bl	8001dc8 <USART1_SendString>
}
 8001b7e:	46c0      	nop			@ (mov r8, r8)
 8001b80:	46bd      	mov	sp, r7
 8001b82:	b002      	add	sp, #8
 8001b84:	bd80      	pop	{r7, pc}
 8001b86:	46c0      	nop			@ (mov r8, r8)
 8001b88:	48000800 	.word	0x48000800
 8001b8c:	fffffcff 	.word	0xfffffcff
 8001b90:	080026e4 	.word	0x080026e4
 8001b94:	08002710 	.word	0x08002710

08001b98 <LED_Init>:

/* Hardware Configuration Functions */
void LED_Init(void) {
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	af00      	add	r7, sp, #0
    // Enable GPIOC clock
    RCC->AHBENR |= (1 << 19);
 8001b9c:	4b0e      	ldr	r3, [pc, #56]	@ (8001bd8 <LED_Init+0x40>)
 8001b9e:	695a      	ldr	r2, [r3, #20]
 8001ba0:	4b0d      	ldr	r3, [pc, #52]	@ (8001bd8 <LED_Init+0x40>)
 8001ba2:	2180      	movs	r1, #128	@ 0x80
 8001ba4:	0309      	lsls	r1, r1, #12
 8001ba6:	430a      	orrs	r2, r1
 8001ba8:	615a      	str	r2, [r3, #20]

    // Configure PC8 (Blue) and PC9 (Green) as outputs
    // Configure PC7 (Blue / even) and PC6 (Red / odd) as outputs
    GPIOC->MODER &= ~( (3 << (2 * 8)) | (3 << (2 * 9)) | (3 << (2 * 7)) | (3 << (2 * 6)) );
 8001baa:	4b0c      	ldr	r3, [pc, #48]	@ (8001bdc <LED_Init+0x44>)
 8001bac:	681a      	ldr	r2, [r3, #0]
 8001bae:	4b0b      	ldr	r3, [pc, #44]	@ (8001bdc <LED_Init+0x44>)
 8001bb0:	490b      	ldr	r1, [pc, #44]	@ (8001be0 <LED_Init+0x48>)
 8001bb2:	400a      	ands	r2, r1
 8001bb4:	601a      	str	r2, [r3, #0]
    GPIOC->MODER |=  ( (1 << (2 * 8)) | (1 << (2 * 9)) | (1 << (2 * 7)) | (1 << (2 * 6)) );
 8001bb6:	4b09      	ldr	r3, [pc, #36]	@ (8001bdc <LED_Init+0x44>)
 8001bb8:	681a      	ldr	r2, [r3, #0]
 8001bba:	4b08      	ldr	r3, [pc, #32]	@ (8001bdc <LED_Init+0x44>)
 8001bbc:	21aa      	movs	r1, #170	@ 0xaa
 8001bbe:	02c9      	lsls	r1, r1, #11
 8001bc0:	430a      	orrs	r2, r1
 8001bc2:	601a      	str	r2, [r3, #0]


    // Turn off LEDs initially
    GPIOC->ODR &= ~((1 << 8) | (1 << 9) | (1 << 7) | (1 << 6));
 8001bc4:	4b05      	ldr	r3, [pc, #20]	@ (8001bdc <LED_Init+0x44>)
 8001bc6:	695a      	ldr	r2, [r3, #20]
 8001bc8:	4b04      	ldr	r3, [pc, #16]	@ (8001bdc <LED_Init+0x44>)
 8001bca:	4906      	ldr	r1, [pc, #24]	@ (8001be4 <LED_Init+0x4c>)
 8001bcc:	400a      	ands	r2, r1
 8001bce:	615a      	str	r2, [r3, #20]
}
 8001bd0:	46c0      	nop			@ (mov r8, r8)
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bd80      	pop	{r7, pc}
 8001bd6:	46c0      	nop			@ (mov r8, r8)
 8001bd8:	40021000 	.word	0x40021000
 8001bdc:	48000800 	.word	0x48000800
 8001be0:	fff00fff 	.word	0xfff00fff
 8001be4:	fffffc3f 	.word	0xfffffc3f

08001be8 <USART1_Init_Interrupt>:

void USART1_Init_Interrupt(void) {
 8001be8:	b580      	push	{r7, lr}
 8001bea:	af00      	add	r7, sp, #0
	// Enable clocks
    RCC->AHBENR  |= (1 << 17);  // GPIOA
 8001bec:	4b26      	ldr	r3, [pc, #152]	@ (8001c88 <USART1_Init_Interrupt+0xa0>)
 8001bee:	695a      	ldr	r2, [r3, #20]
 8001bf0:	4b25      	ldr	r3, [pc, #148]	@ (8001c88 <USART1_Init_Interrupt+0xa0>)
 8001bf2:	2180      	movs	r1, #128	@ 0x80
 8001bf4:	0289      	lsls	r1, r1, #10
 8001bf6:	430a      	orrs	r2, r1
 8001bf8:	615a      	str	r2, [r3, #20]
    RCC->APB2ENR |= (1 << 14);  // USART1
 8001bfa:	4b23      	ldr	r3, [pc, #140]	@ (8001c88 <USART1_Init_Interrupt+0xa0>)
 8001bfc:	699a      	ldr	r2, [r3, #24]
 8001bfe:	4b22      	ldr	r3, [pc, #136]	@ (8001c88 <USART1_Init_Interrupt+0xa0>)
 8001c00:	2180      	movs	r1, #128	@ 0x80
 8001c02:	01c9      	lsls	r1, r1, #7
 8001c04:	430a      	orrs	r2, r1
 8001c06:	619a      	str	r2, [r3, #24]

    // Configure PA9 (TX) and PA10 (RX)
    GPIOA->MODER &= ~((3 << 18) | (3 << 20));
 8001c08:	2390      	movs	r3, #144	@ 0x90
 8001c0a:	05db      	lsls	r3, r3, #23
 8001c0c:	681a      	ldr	r2, [r3, #0]
 8001c0e:	2390      	movs	r3, #144	@ 0x90
 8001c10:	05db      	lsls	r3, r3, #23
 8001c12:	491e      	ldr	r1, [pc, #120]	@ (8001c8c <USART1_Init_Interrupt+0xa4>)
 8001c14:	400a      	ands	r2, r1
 8001c16:	601a      	str	r2, [r3, #0]
    GPIOA->MODER |=  ((2 << 18) | (2 << 20));  // Alternate function mode
 8001c18:	2390      	movs	r3, #144	@ 0x90
 8001c1a:	05db      	lsls	r3, r3, #23
 8001c1c:	681a      	ldr	r2, [r3, #0]
 8001c1e:	2390      	movs	r3, #144	@ 0x90
 8001c20:	05db      	lsls	r3, r3, #23
 8001c22:	21a0      	movs	r1, #160	@ 0xa0
 8001c24:	0389      	lsls	r1, r1, #14
 8001c26:	430a      	orrs	r2, r1
 8001c28:	601a      	str	r2, [r3, #0]

    // Set AF1 for USART1
    GPIOA->AFR[1] &= ~((0xF << 4) | (0xF << 8));
 8001c2a:	2390      	movs	r3, #144	@ 0x90
 8001c2c:	05db      	lsls	r3, r3, #23
 8001c2e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001c30:	2390      	movs	r3, #144	@ 0x90
 8001c32:	05db      	lsls	r3, r3, #23
 8001c34:	4916      	ldr	r1, [pc, #88]	@ (8001c90 <USART1_Init_Interrupt+0xa8>)
 8001c36:	400a      	ands	r2, r1
 8001c38:	625a      	str	r2, [r3, #36]	@ 0x24
    GPIOA->AFR[1] |=  ((1 << 4) | (1 << 8));
 8001c3a:	2390      	movs	r3, #144	@ 0x90
 8001c3c:	05db      	lsls	r3, r3, #23
 8001c3e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001c40:	2390      	movs	r3, #144	@ 0x90
 8001c42:	05db      	lsls	r3, r3, #23
 8001c44:	2188      	movs	r1, #136	@ 0x88
 8001c46:	0049      	lsls	r1, r1, #1
 8001c48:	430a      	orrs	r2, r1
 8001c4a:	625a      	str	r2, [r3, #36]	@ 0x24

    // Baud rate 9600 (8MHz clock)
    USART1->BRR = (8000000 / 9600);
 8001c4c:	4b11      	ldr	r3, [pc, #68]	@ (8001c94 <USART1_Init_Interrupt+0xac>)
 8001c4e:	4a12      	ldr	r2, [pc, #72]	@ (8001c98 <USART1_Init_Interrupt+0xb0>)
 8001c50:	60da      	str	r2, [r3, #12]

    // Enable USART with interrupts
    USART1->CR1 |= (1 << 0) | (1 << 2) | (1 << 3) | (1 << 5);
 8001c52:	4b10      	ldr	r3, [pc, #64]	@ (8001c94 <USART1_Init_Interrupt+0xac>)
 8001c54:	681a      	ldr	r2, [r3, #0]
 8001c56:	4b0f      	ldr	r3, [pc, #60]	@ (8001c94 <USART1_Init_Interrupt+0xac>)
 8001c58:	212d      	movs	r1, #45	@ 0x2d
 8001c5a:	430a      	orrs	r2, r1
 8001c5c:	601a      	str	r2, [r3, #0]
    // UE: USART Enable
    // RE: Receiver Enable
    // TE: Transmitter Enable
    // RXNEIE: RX Not Empty Interrupt Enable
    USART1->CR1 &= ~(1 << 6);  // Disable TC interrupt, no interruptions when TX is used
 8001c5e:	4b0d      	ldr	r3, [pc, #52]	@ (8001c94 <USART1_Init_Interrupt+0xac>)
 8001c60:	681a      	ldr	r2, [r3, #0]
 8001c62:	4b0c      	ldr	r3, [pc, #48]	@ (8001c94 <USART1_Init_Interrupt+0xac>)
 8001c64:	2140      	movs	r1, #64	@ 0x40
 8001c66:	438a      	bics	r2, r1
 8001c68:	601a      	str	r2, [r3, #0]

    // NVIC configuration
    USART1->ICR = 0xFFFFFFFF;			//Clear all interrups flags
 8001c6a:	4b0a      	ldr	r3, [pc, #40]	@ (8001c94 <USART1_Init_Interrupt+0xac>)
 8001c6c:	2201      	movs	r2, #1
 8001c6e:	4252      	negs	r2, r2
 8001c70:	621a      	str	r2, [r3, #32]
    NVIC_EnableIRQ(USART1_IRQn);		//Enable USART1 global interrupt
 8001c72:	201b      	movs	r0, #27
 8001c74:	f7ff feb8 	bl	80019e8 <__NVIC_EnableIRQ>
    NVIC_SetPriority(USART1_IRQn, 0);	//Set priority
 8001c78:	2100      	movs	r1, #0
 8001c7a:	201b      	movs	r0, #27
 8001c7c:	f7ff fece 	bl	8001a1c <__NVIC_SetPriority>
}
 8001c80:	46c0      	nop			@ (mov r8, r8)
 8001c82:	46bd      	mov	sp, r7
 8001c84:	bd80      	pop	{r7, pc}
 8001c86:	46c0      	nop			@ (mov r8, r8)
 8001c88:	40021000 	.word	0x40021000
 8001c8c:	ffc3ffff 	.word	0xffc3ffff
 8001c90:	fffff00f 	.word	0xfffff00f
 8001c94:	40013800 	.word	0x40013800
 8001c98:	00000341 	.word	0x00000341

08001c9c <USART1_IRQHandler>:

/* Communication Functions */
void USART1_IRQHandler(void){
 8001c9c:	b580      	push	{r7, lr}
 8001c9e:	b082      	sub	sp, #8
 8001ca0:	af00      	add	r7, sp, #0
    if(USART1->ISR & (1 << 5)) {
 8001ca2:	4b1a      	ldr	r3, [pc, #104]	@ (8001d0c <USART1_IRQHandler+0x70>)
 8001ca4:	69db      	ldr	r3, [r3, #28]
 8001ca6:	2220      	movs	r2, #32
 8001ca8:	4013      	ands	r3, r2
 8001caa:	d02b      	beq.n	8001d04 <USART1_IRQHandler+0x68>
        uint8_t c = USART1->RDR; // Read and clear RXNE flag
 8001cac:	4b17      	ldr	r3, [pc, #92]	@ (8001d0c <USART1_IRQHandler+0x70>)
 8001cae:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8001cb0:	b29a      	uxth	r2, r3
 8001cb2:	1dfb      	adds	r3, r7, #7
 8001cb4:	701a      	strb	r2, [r3, #0]

        if(rx_pos < RX_BUF_SIZE-1) {
 8001cb6:	4b16      	ldr	r3, [pc, #88]	@ (8001d10 <USART1_IRQHandler+0x74>)
 8001cb8:	881b      	ldrh	r3, [r3, #0]
 8001cba:	b29b      	uxth	r3, r3
 8001cbc:	2b1e      	cmp	r3, #30
 8001cbe:	d81e      	bhi.n	8001cfe <USART1_IRQHandler+0x62>
            rx_buf[rx_pos++] = c;
 8001cc0:	4b13      	ldr	r3, [pc, #76]	@ (8001d10 <USART1_IRQHandler+0x74>)
 8001cc2:	881b      	ldrh	r3, [r3, #0]
 8001cc4:	b29b      	uxth	r3, r3
 8001cc6:	1c5a      	adds	r2, r3, #1
 8001cc8:	b291      	uxth	r1, r2
 8001cca:	4a11      	ldr	r2, [pc, #68]	@ (8001d10 <USART1_IRQHandler+0x74>)
 8001ccc:	8011      	strh	r1, [r2, #0]
 8001cce:	0019      	movs	r1, r3
 8001cd0:	4b10      	ldr	r3, [pc, #64]	@ (8001d14 <USART1_IRQHandler+0x78>)
 8001cd2:	1dfa      	adds	r2, r7, #7
 8001cd4:	7812      	ldrb	r2, [r2, #0]
 8001cd6:	545a      	strb	r2, [r3, r1]
            if(c == '\n' || c == '\r') {
 8001cd8:	1dfb      	adds	r3, r7, #7
 8001cda:	781b      	ldrb	r3, [r3, #0]
 8001cdc:	2b0a      	cmp	r3, #10
 8001cde:	d003      	beq.n	8001ce8 <USART1_IRQHandler+0x4c>
 8001ce0:	1dfb      	adds	r3, r7, #7
 8001ce2:	781b      	ldrb	r3, [r3, #0]
 8001ce4:	2b0d      	cmp	r3, #13
 8001ce6:	d10d      	bne.n	8001d04 <USART1_IRQHandler+0x68>
                rx_buf[rx_pos] = '\0';
 8001ce8:	4b09      	ldr	r3, [pc, #36]	@ (8001d10 <USART1_IRQHandler+0x74>)
 8001cea:	881b      	ldrh	r3, [r3, #0]
 8001cec:	b29b      	uxth	r3, r3
 8001cee:	001a      	movs	r2, r3
 8001cf0:	4b08      	ldr	r3, [pc, #32]	@ (8001d14 <USART1_IRQHandler+0x78>)
 8001cf2:	2100      	movs	r1, #0
 8001cf4:	5499      	strb	r1, [r3, r2]
                rx_ready = 1;
 8001cf6:	4b08      	ldr	r3, [pc, #32]	@ (8001d18 <USART1_IRQHandler+0x7c>)
 8001cf8:	2201      	movs	r2, #1
 8001cfa:	701a      	strb	r2, [r3, #0]
            rx_pos = 0; // Reset on overflow
        }
    }
    // Also clear any other potential flags
	//USART1->ICR = 0xFFFFFFFF;
}
 8001cfc:	e002      	b.n	8001d04 <USART1_IRQHandler+0x68>
            rx_pos = 0; // Reset on overflow
 8001cfe:	4b04      	ldr	r3, [pc, #16]	@ (8001d10 <USART1_IRQHandler+0x74>)
 8001d00:	2200      	movs	r2, #0
 8001d02:	801a      	strh	r2, [r3, #0]
}
 8001d04:	46c0      	nop			@ (mov r8, r8)
 8001d06:	46bd      	mov	sp, r7
 8001d08:	b002      	add	sp, #8
 8001d0a:	bd80      	pop	{r7, pc}
 8001d0c:	40013800 	.word	0x40013800
 8001d10:	2000003c 	.word	0x2000003c
 8001d14:	2000001c 	.word	0x2000001c
 8001d18:	2000003e 	.word	0x2000003e

08001d1c <USART1_HandleMessage>:

void USART1_HandleMessage(void) {
 8001d1c:	b590      	push	{r4, r7, lr}
 8001d1e:	b083      	sub	sp, #12
 8001d20:	af00      	add	r7, sp, #0
	USART1_SendString("Echo: ");
 8001d22:	4b17      	ldr	r3, [pc, #92]	@ (8001d80 <USART1_HandleMessage+0x64>)
 8001d24:	0018      	movs	r0, r3
 8001d26:	f000 f84f 	bl	8001dc8 <USART1_SendString>
	USART1_SendString((char*)rx_buf);
 8001d2a:	4b16      	ldr	r3, [pc, #88]	@ (8001d84 <USART1_HandleMessage+0x68>)
 8001d2c:	0018      	movs	r0, r3
 8001d2e:	f000 f84b 	bl	8001dc8 <USART1_SendString>

	uint8_t numArrays = parseCSV(rx_buf, rx_pos, parsedArrays);
 8001d32:	4b15      	ldr	r3, [pc, #84]	@ (8001d88 <USART1_HandleMessage+0x6c>)
 8001d34:	881b      	ldrh	r3, [r3, #0]
 8001d36:	b299      	uxth	r1, r3
 8001d38:	1dfc      	adds	r4, r7, #7
 8001d3a:	4a14      	ldr	r2, [pc, #80]	@ (8001d8c <USART1_HandleMessage+0x70>)
 8001d3c:	4b11      	ldr	r3, [pc, #68]	@ (8001d84 <USART1_HandleMessage+0x68>)
 8001d3e:	0018      	movs	r0, r3
 8001d40:	f000 f956 	bl	8001ff0 <parseCSV>
 8001d44:	0003      	movs	r3, r0
 8001d46:	7023      	strb	r3, [r4, #0]
	uint8_t numArrayIntFloat = arrayToArrayIntOrFloat(parsedArrays, numArrays, indicacionesArray);
 8001d48:	1dbc      	adds	r4, r7, #6
 8001d4a:	4a11      	ldr	r2, [pc, #68]	@ (8001d90 <USART1_HandleMessage+0x74>)
 8001d4c:	1dfb      	adds	r3, r7, #7
 8001d4e:	7819      	ldrb	r1, [r3, #0]
 8001d50:	4b0e      	ldr	r3, [pc, #56]	@ (8001d8c <USART1_HandleMessage+0x70>)
 8001d52:	0018      	movs	r0, r3
 8001d54:	f000 fa7c 	bl	8002250 <arrayToArrayIntOrFloat>
 8001d58:	0003      	movs	r3, r0
 8001d5a:	7023      	strb	r3, [r4, #0]
	decideNegPos(indicacionesArray, numArrayIntFloat);
 8001d5c:	1dbb      	adds	r3, r7, #6
 8001d5e:	781a      	ldrb	r2, [r3, #0]
 8001d60:	4b0b      	ldr	r3, [pc, #44]	@ (8001d90 <USART1_HandleMessage+0x74>)
 8001d62:	0011      	movs	r1, r2
 8001d64:	0018      	movs	r0, r3
 8001d66:	f000 faeb 	bl	8002340 <decideNegPos>

	// Reset for next message
	rx_pos = 0;
 8001d6a:	4b07      	ldr	r3, [pc, #28]	@ (8001d88 <USART1_HandleMessage+0x6c>)
 8001d6c:	2200      	movs	r2, #0
 8001d6e:	801a      	strh	r2, [r3, #0]
	rx_ready = 0;
 8001d70:	4b08      	ldr	r3, [pc, #32]	@ (8001d94 <USART1_HandleMessage+0x78>)
 8001d72:	2200      	movs	r2, #0
 8001d74:	701a      	strb	r2, [r3, #0]
}
 8001d76:	46c0      	nop			@ (mov r8, r8)
 8001d78:	46bd      	mov	sp, r7
 8001d7a:	b003      	add	sp, #12
 8001d7c:	bd90      	pop	{r4, r7, pc}
 8001d7e:	46c0      	nop			@ (mov r8, r8)
 8001d80:	08002734 	.word	0x08002734
 8001d84:	2000001c 	.word	0x2000001c
 8001d88:	2000003c 	.word	0x2000003c
 8001d8c:	20000040 	.word	0x20000040
 8001d90:	20000088 	.word	0x20000088
 8001d94:	2000003e 	.word	0x2000003e

08001d98 <USART1_SendChar>:

void USART1_SendChar(char c) {
 8001d98:	b580      	push	{r7, lr}
 8001d9a:	b082      	sub	sp, #8
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	0002      	movs	r2, r0
 8001da0:	1dfb      	adds	r3, r7, #7
 8001da2:	701a      	strb	r2, [r3, #0]
    while (!(USART1->ISR & (1 << 7)));
 8001da4:	46c0      	nop			@ (mov r8, r8)
 8001da6:	4b07      	ldr	r3, [pc, #28]	@ (8001dc4 <USART1_SendChar+0x2c>)
 8001da8:	69db      	ldr	r3, [r3, #28]
 8001daa:	2280      	movs	r2, #128	@ 0x80
 8001dac:	4013      	ands	r3, r2
 8001dae:	d0fa      	beq.n	8001da6 <USART1_SendChar+0xe>
    USART1->TDR = c;
 8001db0:	4a04      	ldr	r2, [pc, #16]	@ (8001dc4 <USART1_SendChar+0x2c>)
 8001db2:	1dfb      	adds	r3, r7, #7
 8001db4:	781b      	ldrb	r3, [r3, #0]
 8001db6:	b29b      	uxth	r3, r3
 8001db8:	8513      	strh	r3, [r2, #40]	@ 0x28
}
 8001dba:	46c0      	nop			@ (mov r8, r8)
 8001dbc:	46bd      	mov	sp, r7
 8001dbe:	b002      	add	sp, #8
 8001dc0:	bd80      	pop	{r7, pc}
 8001dc2:	46c0      	nop			@ (mov r8, r8)
 8001dc4:	40013800 	.word	0x40013800

08001dc8 <USART1_SendString>:

void USART1_SendString(const char *str) {
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b082      	sub	sp, #8
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	6078      	str	r0, [r7, #4]
    while (*str) USART1_SendChar(*str++);
 8001dd0:	e006      	b.n	8001de0 <USART1_SendString+0x18>
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	1c5a      	adds	r2, r3, #1
 8001dd6:	607a      	str	r2, [r7, #4]
 8001dd8:	781b      	ldrb	r3, [r3, #0]
 8001dda:	0018      	movs	r0, r3
 8001ddc:	f7ff ffdc 	bl	8001d98 <USART1_SendChar>
 8001de0:	687b      	ldr	r3, [r7, #4]
 8001de2:	781b      	ldrb	r3, [r3, #0]
 8001de4:	2b00      	cmp	r3, #0
 8001de6:	d1f4      	bne.n	8001dd2 <USART1_SendString+0xa>
}
 8001de8:	46c0      	nop			@ (mov r8, r8)
 8001dea:	46c0      	nop			@ (mov r8, r8)
 8001dec:	46bd      	mov	sp, r7
 8001dee:	b002      	add	sp, #8
 8001df0:	bd80      	pop	{r7, pc}
	...

08001df4 <delay_ms>:
        }
    }
}

/* Utility Functions */
void delay_ms(uint32_t ms) {
 8001df4:	b580      	push	{r7, lr}
 8001df6:	b082      	sub	sp, #8
 8001df8:	af00      	add	r7, sp, #0
 8001dfa:	6078      	str	r0, [r7, #4]
	/**/
    RCC->APB1ENR |= (1<<0); //Enable clock for TIM2
 8001dfc:	4b1d      	ldr	r3, [pc, #116]	@ (8001e74 <delay_ms+0x80>)
 8001dfe:	69da      	ldr	r2, [r3, #28]
 8001e00:	4b1c      	ldr	r3, [pc, #112]	@ (8001e74 <delay_ms+0x80>)
 8001e02:	2101      	movs	r1, #1
 8001e04:	430a      	orrs	r2, r1
 8001e06:	61da      	str	r2, [r3, #28]

    TIM2->PSC = 8000000/1000 - 1; //Set 1kHz period
 8001e08:	2380      	movs	r3, #128	@ 0x80
 8001e0a:	05db      	lsls	r3, r3, #23
 8001e0c:	4a1a      	ldr	r2, [pc, #104]	@ (8001e78 <delay_ms+0x84>)
 8001e0e:	629a      	str	r2, [r3, #40]	@ 0x28

    TIM2->ARR = ms;	//Set goal, user defined, by miliseconds
 8001e10:	2380      	movs	r3, #128	@ 0x80
 8001e12:	05db      	lsls	r3, r3, #23
 8001e14:	687a      	ldr	r2, [r7, #4]
 8001e16:	62da      	str	r2, [r3, #44]	@ 0x2c

    TIM2->CNT = 0; //Clears the counter
 8001e18:	2380      	movs	r3, #128	@ 0x80
 8001e1a:	05db      	lsls	r3, r3, #23
 8001e1c:	2200      	movs	r2, #0
 8001e1e:	625a      	str	r2, [r3, #36]	@ 0x24

    TIM2->CR1 |= (1<<0); //Count enable
 8001e20:	2380      	movs	r3, #128	@ 0x80
 8001e22:	05db      	lsls	r3, r3, #23
 8001e24:	681a      	ldr	r2, [r3, #0]
 8001e26:	2380      	movs	r3, #128	@ 0x80
 8001e28:	05db      	lsls	r3, r3, #23
 8001e2a:	2101      	movs	r1, #1
 8001e2c:	430a      	orrs	r2, r1
 8001e2e:	601a      	str	r2, [r3, #0]

    while (!(TIM2->SR & TIM_SR_UIF)); //Bit set by hardware when the registers are updated
 8001e30:	46c0      	nop			@ (mov r8, r8)
 8001e32:	2380      	movs	r3, #128	@ 0x80
 8001e34:	05db      	lsls	r3, r3, #23
 8001e36:	691b      	ldr	r3, [r3, #16]
 8001e38:	2201      	movs	r2, #1
 8001e3a:	4013      	ands	r3, r2
 8001e3c:	d0f9      	beq.n	8001e32 <delay_ms+0x3e>

    TIM2->SR &= ~(1<<0); //Cleared by software
 8001e3e:	2380      	movs	r3, #128	@ 0x80
 8001e40:	05db      	lsls	r3, r3, #23
 8001e42:	691a      	ldr	r2, [r3, #16]
 8001e44:	2380      	movs	r3, #128	@ 0x80
 8001e46:	05db      	lsls	r3, r3, #23
 8001e48:	2101      	movs	r1, #1
 8001e4a:	438a      	bics	r2, r1
 8001e4c:	611a      	str	r2, [r3, #16]
    TIM2->CR1 &= ~(1<<0); //Disable counter
 8001e4e:	2380      	movs	r3, #128	@ 0x80
 8001e50:	05db      	lsls	r3, r3, #23
 8001e52:	681a      	ldr	r2, [r3, #0]
 8001e54:	2380      	movs	r3, #128	@ 0x80
 8001e56:	05db      	lsls	r3, r3, #23
 8001e58:	2101      	movs	r1, #1
 8001e5a:	438a      	bics	r2, r1
 8001e5c:	601a      	str	r2, [r3, #0]
    RCC->APB1ENR &= ~(1<<0); //Disable timer TIM2
 8001e5e:	4b05      	ldr	r3, [pc, #20]	@ (8001e74 <delay_ms+0x80>)
 8001e60:	69da      	ldr	r2, [r3, #28]
 8001e62:	4b04      	ldr	r3, [pc, #16]	@ (8001e74 <delay_ms+0x80>)
 8001e64:	2101      	movs	r1, #1
 8001e66:	438a      	bics	r2, r1
 8001e68:	61da      	str	r2, [r3, #28]
}
 8001e6a:	46c0      	nop			@ (mov r8, r8)
 8001e6c:	46bd      	mov	sp, r7
 8001e6e:	b002      	add	sp, #8
 8001e70:	bd80      	pop	{r7, pc}
 8001e72:	46c0      	nop			@ (mov r8, r8)
 8001e74:	40021000 	.word	0x40021000
 8001e78:	00001f3f 	.word	0x00001f3f

08001e7c <atof>:
    str[i] = '\0';
    return str;
}

// Array to float
float atof(uint8_t* data, int size) {
 8001e7c:	b5b0      	push	{r4, r5, r7, lr}
 8001e7e:	b086      	sub	sp, #24
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	6078      	str	r0, [r7, #4]
 8001e84:	6039      	str	r1, [r7, #0]
    float result = 0.0;
 8001e86:	2300      	movs	r3, #0
 8001e88:	617b      	str	r3, [r7, #20]
    bool isNegative = false;
 8001e8a:	2313      	movs	r3, #19
 8001e8c:	18fb      	adds	r3, r7, r3
 8001e8e:	2200      	movs	r2, #0
 8001e90:	701a      	strb	r2, [r3, #0]
    bool hasDecimal = false;
 8001e92:	2312      	movs	r3, #18
 8001e94:	18fb      	adds	r3, r7, r3
 8001e96:	2200      	movs	r2, #0
 8001e98:	701a      	strb	r2, [r3, #0]
    float fractionMultiplier = 0.1;
 8001e9a:	4b51      	ldr	r3, [pc, #324]	@ (8001fe0 <atof+0x164>)
 8001e9c:	60fb      	str	r3, [r7, #12]
    int i = 0;
 8001e9e:	2300      	movs	r3, #0
 8001ea0:	60bb      	str	r3, [r7, #8]

    if (size == 0) {
 8001ea2:	683b      	ldr	r3, [r7, #0]
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d101      	bne.n	8001eac <atof+0x30>
        return 0.0;  // Empty buffer
 8001ea8:	2300      	movs	r3, #0
 8001eaa:	e095      	b.n	8001fd8 <atof+0x15c>
    }

    // Check for sign
    if (data[0] == '-') {
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	781b      	ldrb	r3, [r3, #0]
 8001eb0:	2b2d      	cmp	r3, #45	@ 0x2d
 8001eb2:	d000      	beq.n	8001eb6 <atof+0x3a>
 8001eb4:	e081      	b.n	8001fba <atof+0x13e>
        isNegative = true;
 8001eb6:	2313      	movs	r3, #19
 8001eb8:	18fb      	adds	r3, r7, r3
 8001eba:	2201      	movs	r2, #1
 8001ebc:	701a      	strb	r2, [r3, #0]
        i = 1;
 8001ebe:	2301      	movs	r3, #1
 8001ec0:	60bb      	str	r3, [r7, #8]
    }

    // Process each byte
    for (; i < size; ++i) {
 8001ec2:	e07a      	b.n	8001fba <atof+0x13e>
        // If we find a line terminator, stop
        if (data[i] == '\n' || data[i] == '\r') {
 8001ec4:	68bb      	ldr	r3, [r7, #8]
 8001ec6:	687a      	ldr	r2, [r7, #4]
 8001ec8:	18d3      	adds	r3, r2, r3
 8001eca:	781b      	ldrb	r3, [r3, #0]
 8001ecc:	2b0a      	cmp	r3, #10
 8001ece:	d100      	bne.n	8001ed2 <atof+0x56>
 8001ed0:	e077      	b.n	8001fc2 <atof+0x146>
 8001ed2:	68bb      	ldr	r3, [r7, #8]
 8001ed4:	687a      	ldr	r2, [r7, #4]
 8001ed6:	18d3      	adds	r3, r2, r3
 8001ed8:	781b      	ldrb	r3, [r3, #0]
 8001eda:	2b0d      	cmp	r3, #13
 8001edc:	d100      	bne.n	8001ee0 <atof+0x64>
 8001ede:	e070      	b.n	8001fc2 <atof+0x146>
            break;
        }

        // Check for decimal point
        if (data[i] == '.') {
 8001ee0:	68bb      	ldr	r3, [r7, #8]
 8001ee2:	687a      	ldr	r2, [r7, #4]
 8001ee4:	18d3      	adds	r3, r2, r3
 8001ee6:	781b      	ldrb	r3, [r3, #0]
 8001ee8:	2b2e      	cmp	r3, #46	@ 0x2e
 8001eea:	d10b      	bne.n	8001f04 <atof+0x88>
            if (hasDecimal) {
 8001eec:	2312      	movs	r3, #18
 8001eee:	18fb      	adds	r3, r7, r3
 8001ef0:	781b      	ldrb	r3, [r3, #0]
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d001      	beq.n	8001efa <atof+0x7e>
                return 0.0;  // Multiple decimal points, invalid
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	e06e      	b.n	8001fd8 <atof+0x15c>
            }
            hasDecimal = true;
 8001efa:	2312      	movs	r3, #18
 8001efc:	18fb      	adds	r3, r7, r3
 8001efe:	2201      	movs	r2, #1
 8001f00:	701a      	strb	r2, [r3, #0]
            continue;
 8001f02:	e057      	b.n	8001fb4 <atof+0x138>
        }

        // Verify it's a valid digit
        if (data[i] < '0' || data[i] > '9') {
 8001f04:	68bb      	ldr	r3, [r7, #8]
 8001f06:	687a      	ldr	r2, [r7, #4]
 8001f08:	18d3      	adds	r3, r2, r3
 8001f0a:	781b      	ldrb	r3, [r3, #0]
 8001f0c:	2b2f      	cmp	r3, #47	@ 0x2f
 8001f0e:	d905      	bls.n	8001f1c <atof+0xa0>
 8001f10:	68bb      	ldr	r3, [r7, #8]
 8001f12:	687a      	ldr	r2, [r7, #4]
 8001f14:	18d3      	adds	r3, r2, r3
 8001f16:	781b      	ldrb	r3, [r3, #0]
 8001f18:	2b39      	cmp	r3, #57	@ 0x39
 8001f1a:	d901      	bls.n	8001f20 <atof+0xa4>
            return 0.0;  // Invalid character
 8001f1c:	2300      	movs	r3, #0
 8001f1e:	e05b      	b.n	8001fd8 <atof+0x15c>
        }

        if (hasDecimal) {
 8001f20:	2312      	movs	r3, #18
 8001f22:	18fb      	adds	r3, r7, r3
 8001f24:	781b      	ldrb	r3, [r3, #0]
 8001f26:	2b00      	cmp	r3, #0
 8001f28:	d023      	beq.n	8001f72 <atof+0xf6>
            // Fractional part
            result += (data[i] - '0') * fractionMultiplier;
 8001f2a:	68bb      	ldr	r3, [r7, #8]
 8001f2c:	687a      	ldr	r2, [r7, #4]
 8001f2e:	18d3      	adds	r3, r2, r3
 8001f30:	781b      	ldrb	r3, [r3, #0]
 8001f32:	3b30      	subs	r3, #48	@ 0x30
 8001f34:	0018      	movs	r0, r3
 8001f36:	f7fe fd45 	bl	80009c4 <__aeabi_i2f>
 8001f3a:	1c03      	adds	r3, r0, #0
 8001f3c:	68f9      	ldr	r1, [r7, #12]
 8001f3e:	1c18      	adds	r0, r3, #0
 8001f40:	f7fe fbc6 	bl	80006d0 <__aeabi_fmul>
 8001f44:	1c03      	adds	r3, r0, #0
 8001f46:	1c19      	adds	r1, r3, #0
 8001f48:	6978      	ldr	r0, [r7, #20]
 8001f4a:	f7fe f917 	bl	800017c <__aeabi_fadd>
 8001f4e:	1c03      	adds	r3, r0, #0
 8001f50:	617b      	str	r3, [r7, #20]
            fractionMultiplier *= 0.1;
 8001f52:	68f8      	ldr	r0, [r7, #12]
 8001f54:	f7ff fc60 	bl	8001818 <__aeabi_f2d>
 8001f58:	4a22      	ldr	r2, [pc, #136]	@ (8001fe4 <atof+0x168>)
 8001f5a:	4b23      	ldr	r3, [pc, #140]	@ (8001fe8 <atof+0x16c>)
 8001f5c:	f7ff f948 	bl	80011f0 <__aeabi_dmul>
 8001f60:	0002      	movs	r2, r0
 8001f62:	000b      	movs	r3, r1
 8001f64:	0010      	movs	r0, r2
 8001f66:	0019      	movs	r1, r3
 8001f68:	f7ff fc9e 	bl	80018a8 <__aeabi_d2f>
 8001f6c:	1c03      	adds	r3, r0, #0
 8001f6e:	60fb      	str	r3, [r7, #12]
 8001f70:	e020      	b.n	8001fb4 <atof+0x138>
        } else {
            // Integer part
            result = result * 10.0 + (data[i] - '0');
 8001f72:	6978      	ldr	r0, [r7, #20]
 8001f74:	f7ff fc50 	bl	8001818 <__aeabi_f2d>
 8001f78:	2200      	movs	r2, #0
 8001f7a:	4b1c      	ldr	r3, [pc, #112]	@ (8001fec <atof+0x170>)
 8001f7c:	f7ff f938 	bl	80011f0 <__aeabi_dmul>
 8001f80:	0002      	movs	r2, r0
 8001f82:	000b      	movs	r3, r1
 8001f84:	0014      	movs	r4, r2
 8001f86:	001d      	movs	r5, r3
 8001f88:	68bb      	ldr	r3, [r7, #8]
 8001f8a:	687a      	ldr	r2, [r7, #4]
 8001f8c:	18d3      	adds	r3, r2, r3
 8001f8e:	781b      	ldrb	r3, [r3, #0]
 8001f90:	3b30      	subs	r3, #48	@ 0x30
 8001f92:	0018      	movs	r0, r3
 8001f94:	f7ff fc12 	bl	80017bc <__aeabi_i2d>
 8001f98:	0002      	movs	r2, r0
 8001f9a:	000b      	movs	r3, r1
 8001f9c:	0020      	movs	r0, r4
 8001f9e:	0029      	movs	r1, r5
 8001fa0:	f7fe fd60 	bl	8000a64 <__aeabi_dadd>
 8001fa4:	0002      	movs	r2, r0
 8001fa6:	000b      	movs	r3, r1
 8001fa8:	0010      	movs	r0, r2
 8001faa:	0019      	movs	r1, r3
 8001fac:	f7ff fc7c 	bl	80018a8 <__aeabi_d2f>
 8001fb0:	1c03      	adds	r3, r0, #0
 8001fb2:	617b      	str	r3, [r7, #20]
    for (; i < size; ++i) {
 8001fb4:	68bb      	ldr	r3, [r7, #8]
 8001fb6:	3301      	adds	r3, #1
 8001fb8:	60bb      	str	r3, [r7, #8]
 8001fba:	68ba      	ldr	r2, [r7, #8]
 8001fbc:	683b      	ldr	r3, [r7, #0]
 8001fbe:	429a      	cmp	r2, r3
 8001fc0:	db80      	blt.n	8001ec4 <atof+0x48>
        }
    }

    if (isNegative) {
 8001fc2:	2313      	movs	r3, #19
 8001fc4:	18fb      	adds	r3, r7, r3
 8001fc6:	781b      	ldrb	r3, [r3, #0]
 8001fc8:	2b00      	cmp	r3, #0
 8001fca:	d004      	beq.n	8001fd6 <atof+0x15a>
        result = -result;
 8001fcc:	697b      	ldr	r3, [r7, #20]
 8001fce:	2280      	movs	r2, #128	@ 0x80
 8001fd0:	0612      	lsls	r2, r2, #24
 8001fd2:	4053      	eors	r3, r2
 8001fd4:	617b      	str	r3, [r7, #20]
    }

    return result;
 8001fd6:	697b      	ldr	r3, [r7, #20]
}
 8001fd8:	1c18      	adds	r0, r3, #0
 8001fda:	46bd      	mov	sp, r7
 8001fdc:	b006      	add	sp, #24
 8001fde:	bdb0      	pop	{r4, r5, r7, pc}
 8001fe0:	3dcccccd 	.word	0x3dcccccd
 8001fe4:	9999999a 	.word	0x9999999a
 8001fe8:	3fb99999 	.word	0x3fb99999
 8001fec:	40240000 	.word	0x40240000

08001ff0 <parseCSV>:
    }
    return *(unsigned char *)s1 - *(unsigned char *)s2;
}

// Function to parse rx_buf into separate arrays
uint8_t parseCSV(const volatile uint8_t* rx_received, uint16_t buf_size, volatile NumberArray* result){
 8001ff0:	b5b0      	push	{r4, r5, r7, lr}
 8001ff2:	b086      	sub	sp, #24
 8001ff4:	af00      	add	r7, sp, #0
 8001ff6:	60f8      	str	r0, [r7, #12]
 8001ff8:	607a      	str	r2, [r7, #4]
 8001ffa:	230a      	movs	r3, #10
 8001ffc:	18fb      	adds	r3, r7, r3
 8001ffe:	1c0a      	adds	r2, r1, #0
 8002000:	801a      	strh	r2, [r3, #0]
	uint8_t array_count = 0;
 8002002:	2117      	movs	r1, #23
 8002004:	187b      	adds	r3, r7, r1
 8002006:	2200      	movs	r2, #0
 8002008:	701a      	strb	r2, [r3, #0]
	uint8_t digit_pos = 0;
 800200a:	2316      	movs	r3, #22
 800200c:	18fb      	adds	r3, r7, r3
 800200e:	2200      	movs	r2, #0
 8002010:	701a      	strb	r2, [r3, #0]
	bool new_number = true;
 8002012:	2315      	movs	r3, #21
 8002014:	18fb      	adds	r3, r7, r3
 8002016:	2201      	movs	r2, #1
 8002018:	701a      	strb	r2, [r3, #0]

	// Initialize first array
	result[array_count].length = 0;
 800201a:	187b      	adds	r3, r7, r1
 800201c:	781a      	ldrb	r2, [r3, #0]
 800201e:	0013      	movs	r3, r2
 8002020:	00db      	lsls	r3, r3, #3
 8002022:	1a9b      	subs	r3, r3, r2
 8002024:	687a      	ldr	r2, [r7, #4]
 8002026:	18d3      	adds	r3, r2, r3
 8002028:	2200      	movs	r2, #0
 800202a:	719a      	strb	r2, [r3, #6]

	for (uint16_t i = 0; i < buf_size; i++) {
 800202c:	2312      	movs	r3, #18
 800202e:	18fb      	adds	r3, r7, r3
 8002030:	2200      	movs	r2, #0
 8002032:	801a      	strh	r2, [r3, #0]
 8002034:	e0ce      	b.n	80021d4 <parseCSV+0x1e4>
		uint8_t c = rx_received[i];
 8002036:	2312      	movs	r3, #18
 8002038:	18fb      	adds	r3, r7, r3
 800203a:	881b      	ldrh	r3, [r3, #0]
 800203c:	68fa      	ldr	r2, [r7, #12]
 800203e:	18d2      	adds	r2, r2, r3
 8002040:	2111      	movs	r1, #17
 8002042:	187b      	adds	r3, r7, r1
 8002044:	7812      	ldrb	r2, [r2, #0]
 8002046:	701a      	strb	r2, [r3, #0]

		// Skip leading whitespace (optional)
		if (c == ' ' && new_number) continue;
 8002048:	187b      	adds	r3, r7, r1
 800204a:	781b      	ldrb	r3, [r3, #0]
 800204c:	2b20      	cmp	r3, #32
 800204e:	d105      	bne.n	800205c <parseCSV+0x6c>
 8002050:	2315      	movs	r3, #21
 8002052:	18fb      	adds	r3, r7, r3
 8002054:	781b      	ldrb	r3, [r3, #0]
 8002056:	2b00      	cmp	r3, #0
 8002058:	d000      	beq.n	800205c <parseCSV+0x6c>
 800205a:	e0b4      	b.n	80021c6 <parseCSV+0x1d6>

		// Handle digits
		if ((c >= '0' && c <= '9')||(c=='.')||(c=='-')) {
 800205c:	2211      	movs	r2, #17
 800205e:	18bb      	adds	r3, r7, r2
 8002060:	781b      	ldrb	r3, [r3, #0]
 8002062:	2b2f      	cmp	r3, #47	@ 0x2f
 8002064:	d903      	bls.n	800206e <parseCSV+0x7e>
 8002066:	18bb      	adds	r3, r7, r2
 8002068:	781b      	ldrb	r3, [r3, #0]
 800206a:	2b39      	cmp	r3, #57	@ 0x39
 800206c:	d908      	bls.n	8002080 <parseCSV+0x90>
 800206e:	2211      	movs	r2, #17
 8002070:	18bb      	adds	r3, r7, r2
 8002072:	781b      	ldrb	r3, [r3, #0]
 8002074:	2b2e      	cmp	r3, #46	@ 0x2e
 8002076:	d003      	beq.n	8002080 <parseCSV+0x90>
 8002078:	18bb      	adds	r3, r7, r2
 800207a:	781b      	ldrb	r3, [r3, #0]
 800207c:	2b2d      	cmp	r3, #45	@ 0x2d
 800207e:	d11c      	bne.n	80020ba <parseCSV+0xca>
			if (digit_pos < MAX_DIGITS) {
 8002080:	2116      	movs	r1, #22
 8002082:	187b      	adds	r3, r7, r1
 8002084:	781b      	ldrb	r3, [r3, #0]
 8002086:	2b04      	cmp	r3, #4
 8002088:	d900      	bls.n	800208c <parseCSV+0x9c>
 800208a:	e09d      	b.n	80021c8 <parseCSV+0x1d8>
				result[array_count].array[digit_pos++] = c;
 800208c:	2317      	movs	r3, #23
 800208e:	18fb      	adds	r3, r7, r3
 8002090:	781a      	ldrb	r2, [r3, #0]
 8002092:	0013      	movs	r3, r2
 8002094:	00db      	lsls	r3, r3, #3
 8002096:	1a9b      	subs	r3, r3, r2
 8002098:	687a      	ldr	r2, [r7, #4]
 800209a:	18d2      	adds	r2, r2, r3
 800209c:	187b      	adds	r3, r7, r1
 800209e:	781b      	ldrb	r3, [r3, #0]
 80020a0:	1879      	adds	r1, r7, r1
 80020a2:	1c58      	adds	r0, r3, #1
 80020a4:	7008      	strb	r0, [r1, #0]
 80020a6:	0019      	movs	r1, r3
 80020a8:	2311      	movs	r3, #17
 80020aa:	18fb      	adds	r3, r7, r3
 80020ac:	781b      	ldrb	r3, [r3, #0]
 80020ae:	5453      	strb	r3, [r2, r1]
				new_number = false;
 80020b0:	2315      	movs	r3, #21
 80020b2:	18fb      	adds	r3, r7, r3
 80020b4:	2200      	movs	r2, #0
 80020b6:	701a      	strb	r2, [r3, #0]
			if (digit_pos < MAX_DIGITS) {
 80020b8:	e086      	b.n	80021c8 <parseCSV+0x1d8>
			}
		}
		// Handle comma or newline
		else if (c == ',' || c == '\n' || c == '\r') {
 80020ba:	2211      	movs	r2, #17
 80020bc:	18bb      	adds	r3, r7, r2
 80020be:	781b      	ldrb	r3, [r3, #0]
 80020c0:	2b2c      	cmp	r3, #44	@ 0x2c
 80020c2:	d008      	beq.n	80020d6 <parseCSV+0xe6>
 80020c4:	18bb      	adds	r3, r7, r2
 80020c6:	781b      	ldrb	r3, [r3, #0]
 80020c8:	2b0a      	cmp	r3, #10
 80020ca:	d004      	beq.n	80020d6 <parseCSV+0xe6>
 80020cc:	18bb      	adds	r3, r7, r2
 80020ce:	781b      	ldrb	r3, [r3, #0]
 80020d0:	2b0d      	cmp	r3, #13
 80020d2:	d000      	beq.n	80020d6 <parseCSV+0xe6>
 80020d4:	e078      	b.n	80021c8 <parseCSV+0x1d8>
			if (!new_number) {  // Only close array if we have a number
 80020d6:	2515      	movs	r5, #21
 80020d8:	197b      	adds	r3, r7, r5
 80020da:	781b      	ldrb	r3, [r3, #0]
 80020dc:	2201      	movs	r2, #1
 80020de:	4053      	eors	r3, r2
 80020e0:	b2db      	uxtb	r3, r3
 80020e2:	2b00      	cmp	r3, #0
 80020e4:	d032      	beq.n	800214c <parseCSV+0x15c>
				// Add terminator
				result[array_count].array[digit_pos] = '\n';
 80020e6:	2017      	movs	r0, #23
 80020e8:	183b      	adds	r3, r7, r0
 80020ea:	781a      	ldrb	r2, [r3, #0]
 80020ec:	0013      	movs	r3, r2
 80020ee:	00db      	lsls	r3, r3, #3
 80020f0:	1a9b      	subs	r3, r3, r2
 80020f2:	687a      	ldr	r2, [r7, #4]
 80020f4:	18d2      	adds	r2, r2, r3
 80020f6:	2416      	movs	r4, #22
 80020f8:	193b      	adds	r3, r7, r4
 80020fa:	781b      	ldrb	r3, [r3, #0]
 80020fc:	210a      	movs	r1, #10
 80020fe:	54d1      	strb	r1, [r2, r3]
				result[array_count].length = digit_pos + 1;
 8002100:	0001      	movs	r1, r0
 8002102:	187b      	adds	r3, r7, r1
 8002104:	781a      	ldrb	r2, [r3, #0]
 8002106:	0013      	movs	r3, r2
 8002108:	00db      	lsls	r3, r3, #3
 800210a:	1a9b      	subs	r3, r3, r2
 800210c:	687a      	ldr	r2, [r7, #4]
 800210e:	18d3      	adds	r3, r2, r3
 8002110:	0020      	movs	r0, r4
 8002112:	183a      	adds	r2, r7, r0
 8002114:	7812      	ldrb	r2, [r2, #0]
 8002116:	3201      	adds	r2, #1
 8002118:	b2d2      	uxtb	r2, r2
 800211a:	719a      	strb	r2, [r3, #6]
				array_count++;
 800211c:	187b      	adds	r3, r7, r1
 800211e:	781a      	ldrb	r2, [r3, #0]
 8002120:	187b      	adds	r3, r7, r1
 8002122:	3201      	adds	r2, #1
 8002124:	701a      	strb	r2, [r3, #0]

				// Prepare next array
				if (array_count < MAX_ARRAYS) {
 8002126:	187b      	adds	r3, r7, r1
 8002128:	781b      	ldrb	r3, [r3, #0]
 800212a:	2b09      	cmp	r3, #9
 800212c:	d85c      	bhi.n	80021e8 <parseCSV+0x1f8>
					digit_pos = 0;
 800212e:	183b      	adds	r3, r7, r0
 8002130:	2200      	movs	r2, #0
 8002132:	701a      	strb	r2, [r3, #0]
					result[array_count].length = 0;
 8002134:	187b      	adds	r3, r7, r1
 8002136:	781a      	ldrb	r2, [r3, #0]
 8002138:	0013      	movs	r3, r2
 800213a:	00db      	lsls	r3, r3, #3
 800213c:	1a9b      	subs	r3, r3, r2
 800213e:	687a      	ldr	r2, [r7, #4]
 8002140:	18d3      	adds	r3, r2, r3
 8002142:	2200      	movs	r2, #0
 8002144:	719a      	strb	r2, [r3, #6]
					new_number = true;
 8002146:	197b      	adds	r3, r7, r5
 8002148:	2201      	movs	r2, #1
 800214a:	701a      	strb	r2, [r3, #0]
				} else {
					break;  // Reached maximum arrays
				}
			}

			if (c == '\n' || c == '\r') {
 800214c:	2211      	movs	r2, #17
 800214e:	18bb      	adds	r3, r7, r2
 8002150:	781b      	ldrb	r3, [r3, #0]
 8002152:	2b0a      	cmp	r3, #10
 8002154:	d003      	beq.n	800215e <parseCSV+0x16e>
 8002156:	18bb      	adds	r3, r7, r2
 8002158:	781b      	ldrb	r3, [r3, #0]
 800215a:	2b0d      	cmp	r3, #13
 800215c:	d134      	bne.n	80021c8 <parseCSV+0x1d8>
				// Ensure we create a new array even if no digits before newline
				if (array_count > 0 && result[array_count-1].array[result[array_count-1].length-1] != '\n') {
 800215e:	2017      	movs	r0, #23
 8002160:	183b      	adds	r3, r7, r0
 8002162:	781b      	ldrb	r3, [r3, #0]
 8002164:	2b00      	cmp	r3, #0
 8002166:	d02f      	beq.n	80021c8 <parseCSV+0x1d8>
 8002168:	183b      	adds	r3, r7, r0
 800216a:	781a      	ldrb	r2, [r3, #0]
 800216c:	0013      	movs	r3, r2
 800216e:	00db      	lsls	r3, r3, #3
 8002170:	1a9b      	subs	r3, r3, r2
 8002172:	3b07      	subs	r3, #7
 8002174:	687a      	ldr	r2, [r7, #4]
 8002176:	18d1      	adds	r1, r2, r3
 8002178:	183b      	adds	r3, r7, r0
 800217a:	781a      	ldrb	r2, [r3, #0]
 800217c:	0013      	movs	r3, r2
 800217e:	00db      	lsls	r3, r3, #3
 8002180:	1a9b      	subs	r3, r3, r2
 8002182:	3b07      	subs	r3, #7
 8002184:	687a      	ldr	r2, [r7, #4]
 8002186:	18d3      	adds	r3, r2, r3
 8002188:	799b      	ldrb	r3, [r3, #6]
 800218a:	b2db      	uxtb	r3, r3
 800218c:	3b01      	subs	r3, #1
 800218e:	5ccb      	ldrb	r3, [r1, r3]
 8002190:	b2db      	uxtb	r3, r3
 8002192:	2b0a      	cmp	r3, #10
 8002194:	d018      	beq.n	80021c8 <parseCSV+0x1d8>
					result[array_count].array[0] = '\n';
 8002196:	183b      	adds	r3, r7, r0
 8002198:	781a      	ldrb	r2, [r3, #0]
 800219a:	0013      	movs	r3, r2
 800219c:	00db      	lsls	r3, r3, #3
 800219e:	1a9b      	subs	r3, r3, r2
 80021a0:	687a      	ldr	r2, [r7, #4]
 80021a2:	18d3      	adds	r3, r2, r3
 80021a4:	220a      	movs	r2, #10
 80021a6:	701a      	strb	r2, [r3, #0]
					result[array_count].length = 1;
 80021a8:	183b      	adds	r3, r7, r0
 80021aa:	781a      	ldrb	r2, [r3, #0]
 80021ac:	0013      	movs	r3, r2
 80021ae:	00db      	lsls	r3, r3, #3
 80021b0:	1a9b      	subs	r3, r3, r2
 80021b2:	687a      	ldr	r2, [r7, #4]
 80021b4:	18d3      	adds	r3, r2, r3
 80021b6:	2201      	movs	r2, #1
 80021b8:	719a      	strb	r2, [r3, #6]
					array_count++;
 80021ba:	183b      	adds	r3, r7, r0
 80021bc:	781a      	ldrb	r2, [r3, #0]
 80021be:	183b      	adds	r3, r7, r0
 80021c0:	3201      	adds	r2, #1
 80021c2:	701a      	strb	r2, [r3, #0]
 80021c4:	e000      	b.n	80021c8 <parseCSV+0x1d8>
		if (c == ' ' && new_number) continue;
 80021c6:	46c0      	nop			@ (mov r8, r8)
	for (uint16_t i = 0; i < buf_size; i++) {
 80021c8:	2112      	movs	r1, #18
 80021ca:	187b      	adds	r3, r7, r1
 80021cc:	881a      	ldrh	r2, [r3, #0]
 80021ce:	187b      	adds	r3, r7, r1
 80021d0:	3201      	adds	r2, #1
 80021d2:	801a      	strh	r2, [r3, #0]
 80021d4:	2312      	movs	r3, #18
 80021d6:	18fa      	adds	r2, r7, r3
 80021d8:	230a      	movs	r3, #10
 80021da:	18fb      	adds	r3, r7, r3
 80021dc:	8812      	ldrh	r2, [r2, #0]
 80021de:	881b      	ldrh	r3, [r3, #0]
 80021e0:	429a      	cmp	r2, r3
 80021e2:	d200      	bcs.n	80021e6 <parseCSV+0x1f6>
 80021e4:	e727      	b.n	8002036 <parseCSV+0x46>
 80021e6:	e000      	b.n	80021ea <parseCSV+0x1fa>
					break;  // Reached maximum arrays
 80021e8:	46c0      	nop			@ (mov r8, r8)
			}
		}
	}

	// Handle last number if buffer ends without comma/newline
	if (!new_number && array_count < MAX_ARRAYS) {
 80021ea:	2315      	movs	r3, #21
 80021ec:	18fb      	adds	r3, r7, r3
 80021ee:	781b      	ldrb	r3, [r3, #0]
 80021f0:	2201      	movs	r2, #1
 80021f2:	4053      	eors	r3, r2
 80021f4:	b2db      	uxtb	r3, r3
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d022      	beq.n	8002240 <parseCSV+0x250>
 80021fa:	2017      	movs	r0, #23
 80021fc:	183b      	adds	r3, r7, r0
 80021fe:	781b      	ldrb	r3, [r3, #0]
 8002200:	2b09      	cmp	r3, #9
 8002202:	d81d      	bhi.n	8002240 <parseCSV+0x250>
		result[array_count].array[digit_pos] = '\n';
 8002204:	183b      	adds	r3, r7, r0
 8002206:	781a      	ldrb	r2, [r3, #0]
 8002208:	0013      	movs	r3, r2
 800220a:	00db      	lsls	r3, r3, #3
 800220c:	1a9b      	subs	r3, r3, r2
 800220e:	687a      	ldr	r2, [r7, #4]
 8002210:	18d2      	adds	r2, r2, r3
 8002212:	2416      	movs	r4, #22
 8002214:	193b      	adds	r3, r7, r4
 8002216:	781b      	ldrb	r3, [r3, #0]
 8002218:	210a      	movs	r1, #10
 800221a:	54d1      	strb	r1, [r2, r3]
		result[array_count].length = digit_pos + 1;
 800221c:	0001      	movs	r1, r0
 800221e:	187b      	adds	r3, r7, r1
 8002220:	781a      	ldrb	r2, [r3, #0]
 8002222:	0013      	movs	r3, r2
 8002224:	00db      	lsls	r3, r3, #3
 8002226:	1a9b      	subs	r3, r3, r2
 8002228:	687a      	ldr	r2, [r7, #4]
 800222a:	18d3      	adds	r3, r2, r3
 800222c:	193a      	adds	r2, r7, r4
 800222e:	7812      	ldrb	r2, [r2, #0]
 8002230:	3201      	adds	r2, #1
 8002232:	b2d2      	uxtb	r2, r2
 8002234:	719a      	strb	r2, [r3, #6]
		array_count++;
 8002236:	187b      	adds	r3, r7, r1
 8002238:	781a      	ldrb	r2, [r3, #0]
 800223a:	187b      	adds	r3, r7, r1
 800223c:	3201      	adds	r2, #1
 800223e:	701a      	strb	r2, [r3, #0]
	}

	return array_count;
 8002240:	2317      	movs	r3, #23
 8002242:	18fb      	adds	r3, r7, r3
 8002244:	781b      	ldrb	r3, [r3, #0]
}
 8002246:	0018      	movs	r0, r3
 8002248:	46bd      	mov	sp, r7
 800224a:	b006      	add	sp, #24
 800224c:	bdb0      	pop	{r4, r5, r7, pc}
	...

08002250 <arrayToArrayIntOrFloat>:

// Turn texts array for USART communication to int and floats array for motor controlling
uint8_t arrayToArrayIntOrFloat(volatile NumberArray* numbersAsArray, uint8_t numberOfArrays, volatile Numeros* result){
 8002250:	b590      	push	{r4, r7, lr}
 8002252:	b087      	sub	sp, #28
 8002254:	af00      	add	r7, sp, #0
 8002256:	60f8      	str	r0, [r7, #12]
 8002258:	607a      	str	r2, [r7, #4]
 800225a:	230b      	movs	r3, #11
 800225c:	18fb      	adds	r3, r7, r3
 800225e:	1c0a      	adds	r2, r1, #0
 8002260:	701a      	strb	r2, [r3, #0]
	uint8_t array_count = 0;
 8002262:	2317      	movs	r3, #23
 8002264:	18fb      	adds	r3, r7, r3
 8002266:	2200      	movs	r2, #0
 8002268:	701a      	strb	r2, [r3, #0]
	float numero;

	// Process the parsed arrays
	for (uint8_t i = 0; i < numberOfArrays; i++) {
 800226a:	2316      	movs	r3, #22
 800226c:	18fb      	adds	r3, r7, r3
 800226e:	2200      	movs	r2, #0
 8002270:	701a      	strb	r2, [r3, #0]
 8002272:	e052      	b.n	800231a <arrayToArrayIntOrFloat+0xca>
		USART1_SendString("Number ");
 8002274:	4b30      	ldr	r3, [pc, #192]	@ (8002338 <arrayToArrayIntOrFloat+0xe8>)
 8002276:	0018      	movs	r0, r3
 8002278:	f7ff fda6 	bl	8001dc8 <USART1_SendString>
		USART1_SendChar('0' + i);
 800227c:	2416      	movs	r4, #22
 800227e:	193b      	adds	r3, r7, r4
 8002280:	781b      	ldrb	r3, [r3, #0]
 8002282:	3330      	adds	r3, #48	@ 0x30
 8002284:	b2db      	uxtb	r3, r3
 8002286:	0018      	movs	r0, r3
 8002288:	f7ff fd86 	bl	8001d98 <USART1_SendChar>
		USART1_SendString(": ");
 800228c:	4b2b      	ldr	r3, [pc, #172]	@ (800233c <arrayToArrayIntOrFloat+0xec>)
 800228e:	0018      	movs	r0, r3
 8002290:	f7ff fd9a 	bl	8001dc8 <USART1_SendString>
		USART1_SendString((const char*)numbersAsArray[i].array);
 8002294:	193b      	adds	r3, r7, r4
 8002296:	781a      	ldrb	r2, [r3, #0]
 8002298:	0013      	movs	r3, r2
 800229a:	00db      	lsls	r3, r3, #3
 800229c:	1a9b      	subs	r3, r3, r2
 800229e:	68fa      	ldr	r2, [r7, #12]
 80022a0:	18d3      	adds	r3, r2, r3
 80022a2:	0018      	movs	r0, r3
 80022a4:	f7ff fd90 	bl	8001dc8 <USART1_SendString>

		numero = atof(numbersAsArray[i].array, numbersAsArray[i].length);
 80022a8:	193b      	adds	r3, r7, r4
 80022aa:	781a      	ldrb	r2, [r3, #0]
 80022ac:	0013      	movs	r3, r2
 80022ae:	00db      	lsls	r3, r3, #3
 80022b0:	1a9b      	subs	r3, r3, r2
 80022b2:	68fa      	ldr	r2, [r7, #12]
 80022b4:	18d3      	adds	r3, r2, r3
 80022b6:	0018      	movs	r0, r3
 80022b8:	193b      	adds	r3, r7, r4
 80022ba:	781a      	ldrb	r2, [r3, #0]
 80022bc:	0013      	movs	r3, r2
 80022be:	00db      	lsls	r3, r3, #3
 80022c0:	1a9b      	subs	r3, r3, r2
 80022c2:	68fa      	ldr	r2, [r7, #12]
 80022c4:	18d3      	adds	r3, r2, r3
 80022c6:	799b      	ldrb	r3, [r3, #6]
 80022c8:	b2db      	uxtb	r3, r3
 80022ca:	0019      	movs	r1, r3
 80022cc:	f7ff fdd6 	bl	8001e7c <atof>
 80022d0:	1c03      	adds	r3, r0, #0
 80022d2:	613b      	str	r3, [r7, #16]

		if (i == 0){
 80022d4:	193b      	adds	r3, r7, r4
 80022d6:	781b      	ldrb	r3, [r3, #0]
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d10a      	bne.n	80022f2 <arrayToArrayIntOrFloat+0xa2>
			result[i].i = (int)numero;
 80022dc:	193b      	adds	r3, r7, r4
 80022de:	781b      	ldrb	r3, [r3, #0]
 80022e0:	009b      	lsls	r3, r3, #2
 80022e2:	687a      	ldr	r2, [r7, #4]
 80022e4:	18d4      	adds	r4, r2, r3
 80022e6:	6938      	ldr	r0, [r7, #16]
 80022e8:	f7fe fb4c 	bl	8000984 <__aeabi_f2iz>
 80022ec:	0003      	movs	r3, r0
 80022ee:	6023      	str	r3, [r4, #0]
 80022f0:	e007      	b.n	8002302 <arrayToArrayIntOrFloat+0xb2>
		} else {
			result[i].f = numero;
 80022f2:	2316      	movs	r3, #22
 80022f4:	18fb      	adds	r3, r7, r3
 80022f6:	781b      	ldrb	r3, [r3, #0]
 80022f8:	009b      	lsls	r3, r3, #2
 80022fa:	687a      	ldr	r2, [r7, #4]
 80022fc:	18d3      	adds	r3, r2, r3
 80022fe:	693a      	ldr	r2, [r7, #16]
 8002300:	601a      	str	r2, [r3, #0]
		}
		array_count++;
 8002302:	2117      	movs	r1, #23
 8002304:	187b      	adds	r3, r7, r1
 8002306:	781a      	ldrb	r2, [r3, #0]
 8002308:	187b      	adds	r3, r7, r1
 800230a:	3201      	adds	r2, #1
 800230c:	701a      	strb	r2, [r3, #0]
	for (uint8_t i = 0; i < numberOfArrays; i++) {
 800230e:	2116      	movs	r1, #22
 8002310:	187b      	adds	r3, r7, r1
 8002312:	781a      	ldrb	r2, [r3, #0]
 8002314:	187b      	adds	r3, r7, r1
 8002316:	3201      	adds	r2, #1
 8002318:	701a      	strb	r2, [r3, #0]
 800231a:	2316      	movs	r3, #22
 800231c:	18fa      	adds	r2, r7, r3
 800231e:	230b      	movs	r3, #11
 8002320:	18fb      	adds	r3, r7, r3
 8002322:	7812      	ldrb	r2, [r2, #0]
 8002324:	781b      	ldrb	r3, [r3, #0]
 8002326:	429a      	cmp	r2, r3
 8002328:	d3a4      	bcc.n	8002274 <arrayToArrayIntOrFloat+0x24>
	}
	return array_count;
 800232a:	2317      	movs	r3, #23
 800232c:	18fb      	adds	r3, r7, r3
 800232e:	781b      	ldrb	r3, [r3, #0]
}
 8002330:	0018      	movs	r0, r3
 8002332:	46bd      	mov	sp, r7
 8002334:	b007      	add	sp, #28
 8002336:	bd90      	pop	{r4, r7, pc}
 8002338:	0800273c 	.word	0x0800273c
 800233c:	08002744 	.word	0x08002744

08002340 <decideNegPos>:

//Decide if negative o positive
void decideNegPos(volatile Numeros* numeros, uint8_t count) {
 8002340:	b580      	push	{r7, lr}
 8002342:	b084      	sub	sp, #16
 8002344:	af00      	add	r7, sp, #0
 8002346:	6078      	str	r0, [r7, #4]
 8002348:	000a      	movs	r2, r1
 800234a:	1cfb      	adds	r3, r7, #3
 800234c:	701a      	strb	r2, [r3, #0]
 	for (uint8_t i = 0; i < count; i++){
 800234e:	230f      	movs	r3, #15
 8002350:	18fb      	adds	r3, r7, r3
 8002352:	2200      	movs	r2, #0
 8002354:	701a      	strb	r2, [r3, #0]
 8002356:	e057      	b.n	8002408 <decideNegPos+0xc8>
 		float value;

 		if (i==0){
 8002358:	220f      	movs	r2, #15
 800235a:	18bb      	adds	r3, r7, r2
 800235c:	781b      	ldrb	r3, [r3, #0]
 800235e:	2b00      	cmp	r3, #0
 8002360:	d10b      	bne.n	800237a <decideNegPos+0x3a>
 			value = (float)numeros[i].i;
 8002362:	18bb      	adds	r3, r7, r2
 8002364:	781b      	ldrb	r3, [r3, #0]
 8002366:	009b      	lsls	r3, r3, #2
 8002368:	687a      	ldr	r2, [r7, #4]
 800236a:	18d3      	adds	r3, r2, r3
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	0018      	movs	r0, r3
 8002370:	f7fe fb28 	bl	80009c4 <__aeabi_i2f>
 8002374:	1c03      	adds	r3, r0, #0
 8002376:	60bb      	str	r3, [r7, #8]
 8002378:	e007      	b.n	800238a <decideNegPos+0x4a>
 		} else {
 			value = numeros[i].f;
 800237a:	230f      	movs	r3, #15
 800237c:	18fb      	adds	r3, r7, r3
 800237e:	781b      	ldrb	r3, [r3, #0]
 8002380:	009b      	lsls	r3, r3, #2
 8002382:	687a      	ldr	r2, [r7, #4]
 8002384:	18d3      	adds	r3, r2, r3
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	60bb      	str	r3, [r7, #8]
 		}

		if (value < 0) {
 800238a:	2100      	movs	r1, #0
 800238c:	68b8      	ldr	r0, [r7, #8]
 800238e:	f7fd fecd 	bl	800012c <__aeabi_fcmplt>
 8002392:	1e03      	subs	r3, r0, #0
 8002394:	d010      	beq.n	80023b8 <decideNegPos+0x78>
			GPIOC->ODR |= (1<<7);
 8002396:	4b22      	ldr	r3, [pc, #136]	@ (8002420 <decideNegPos+0xe0>)
 8002398:	695a      	ldr	r2, [r3, #20]
 800239a:	4b21      	ldr	r3, [pc, #132]	@ (8002420 <decideNegPos+0xe0>)
 800239c:	2180      	movs	r1, #128	@ 0x80
 800239e:	430a      	orrs	r2, r1
 80023a0:	615a      	str	r2, [r3, #20]
			GPIOC->ODR &= ~(1<<6);
 80023a2:	4b1f      	ldr	r3, [pc, #124]	@ (8002420 <decideNegPos+0xe0>)
 80023a4:	695a      	ldr	r2, [r3, #20]
 80023a6:	4b1e      	ldr	r3, [pc, #120]	@ (8002420 <decideNegPos+0xe0>)
 80023a8:	2140      	movs	r1, #64	@ 0x40
 80023aa:	438a      	bics	r2, r1
 80023ac:	615a      	str	r2, [r3, #20]
			USART1_SendString("NEGATIVE\r\n");
 80023ae:	4b1d      	ldr	r3, [pc, #116]	@ (8002424 <decideNegPos+0xe4>)
 80023b0:	0018      	movs	r0, r3
 80023b2:	f7ff fd09 	bl	8001dc8 <USART1_SendString>
 80023b6:	e00f      	b.n	80023d8 <decideNegPos+0x98>
		} else {
			GPIOC->ODR |= (1<<6);
 80023b8:	4b19      	ldr	r3, [pc, #100]	@ (8002420 <decideNegPos+0xe0>)
 80023ba:	695a      	ldr	r2, [r3, #20]
 80023bc:	4b18      	ldr	r3, [pc, #96]	@ (8002420 <decideNegPos+0xe0>)
 80023be:	2140      	movs	r1, #64	@ 0x40
 80023c0:	430a      	orrs	r2, r1
 80023c2:	615a      	str	r2, [r3, #20]
			GPIOC->ODR &= ~(1<<7);
 80023c4:	4b16      	ldr	r3, [pc, #88]	@ (8002420 <decideNegPos+0xe0>)
 80023c6:	695a      	ldr	r2, [r3, #20]
 80023c8:	4b15      	ldr	r3, [pc, #84]	@ (8002420 <decideNegPos+0xe0>)
 80023ca:	2180      	movs	r1, #128	@ 0x80
 80023cc:	438a      	bics	r2, r1
 80023ce:	615a      	str	r2, [r3, #20]
			USART1_SendString("POSITIVE\r\n");
 80023d0:	4b15      	ldr	r3, [pc, #84]	@ (8002428 <decideNegPos+0xe8>)
 80023d2:	0018      	movs	r0, r3
 80023d4:	f7ff fcf8 	bl	8001dc8 <USART1_SendString>
		}
		delay_ms(200);
 80023d8:	20c8      	movs	r0, #200	@ 0xc8
 80023da:	f7ff fd0b 	bl	8001df4 <delay_ms>
		GPIOC->ODR &= ~(1<<7);
 80023de:	4b10      	ldr	r3, [pc, #64]	@ (8002420 <decideNegPos+0xe0>)
 80023e0:	695a      	ldr	r2, [r3, #20]
 80023e2:	4b0f      	ldr	r3, [pc, #60]	@ (8002420 <decideNegPos+0xe0>)
 80023e4:	2180      	movs	r1, #128	@ 0x80
 80023e6:	438a      	bics	r2, r1
 80023e8:	615a      	str	r2, [r3, #20]
		GPIOC->ODR &= ~(1<<6);
 80023ea:	4b0d      	ldr	r3, [pc, #52]	@ (8002420 <decideNegPos+0xe0>)
 80023ec:	695a      	ldr	r2, [r3, #20]
 80023ee:	4b0c      	ldr	r3, [pc, #48]	@ (8002420 <decideNegPos+0xe0>)
 80023f0:	2140      	movs	r1, #64	@ 0x40
 80023f2:	438a      	bics	r2, r1
 80023f4:	615a      	str	r2, [r3, #20]
		delay_ms(200);
 80023f6:	20c8      	movs	r0, #200	@ 0xc8
 80023f8:	f7ff fcfc 	bl	8001df4 <delay_ms>
 	for (uint8_t i = 0; i < count; i++){
 80023fc:	210f      	movs	r1, #15
 80023fe:	187b      	adds	r3, r7, r1
 8002400:	781a      	ldrb	r2, [r3, #0]
 8002402:	187b      	adds	r3, r7, r1
 8002404:	3201      	adds	r2, #1
 8002406:	701a      	strb	r2, [r3, #0]
 8002408:	230f      	movs	r3, #15
 800240a:	18fa      	adds	r2, r7, r3
 800240c:	1cfb      	adds	r3, r7, #3
 800240e:	7812      	ldrb	r2, [r2, #0]
 8002410:	781b      	ldrb	r3, [r3, #0]
 8002412:	429a      	cmp	r2, r3
 8002414:	d3a0      	bcc.n	8002358 <decideNegPos+0x18>
	}
}
 8002416:	46c0      	nop			@ (mov r8, r8)
 8002418:	46c0      	nop			@ (mov r8, r8)
 800241a:	46bd      	mov	sp, r7
 800241c:	b004      	add	sp, #16
 800241e:	bd80      	pop	{r7, pc}
 8002420:	48000800 	.word	0x48000800
 8002424:	08002748 	.word	0x08002748
 8002428:	08002754 	.word	0x08002754

0800242c <Motor_Init>:
//Initializes peripherals in correspondent mode
//Peripherals C
//PWM should be either 8 or 9
//Directions peripherals (6, 7) or (10, 11) are suggested
//Brake peripherals 5 or 12 are suggested
void Motor_Init(MotorController* motor, int dir1, int dir2, int pwmpin, int brakepin){
 800242c:	b580      	push	{r7, lr}
 800242e:	b084      	sub	sp, #16
 8002430:	af00      	add	r7, sp, #0
 8002432:	60f8      	str	r0, [r7, #12]
 8002434:	60b9      	str	r1, [r7, #8]
 8002436:	607a      	str	r2, [r7, #4]
 8002438:	603b      	str	r3, [r7, #0]
	// Validate PWM pin (must be 8 or 9 for TIM3)
	if (pwmpin != 8 && pwmpin != 9) return;
 800243a:	683b      	ldr	r3, [r7, #0]
 800243c:	2b08      	cmp	r3, #8
 800243e:	d003      	beq.n	8002448 <Motor_Init+0x1c>
 8002440:	683b      	ldr	r3, [r7, #0]
 8002442:	2b09      	cmp	r3, #9
 8002444:	d000      	beq.n	8002448 <Motor_Init+0x1c>
 8002446:	e0e3      	b.n	8002610 <Motor_Init+0x1e4>
	if ((dir1 > 15) || (dir2 > 15) || (brakepin > 15)) return; // Prevent invalid pins
 8002448:	68bb      	ldr	r3, [r7, #8]
 800244a:	2b0f      	cmp	r3, #15
 800244c:	dd00      	ble.n	8002450 <Motor_Init+0x24>
 800244e:	e0e1      	b.n	8002614 <Motor_Init+0x1e8>
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	2b0f      	cmp	r3, #15
 8002454:	dd00      	ble.n	8002458 <Motor_Init+0x2c>
 8002456:	e0dd      	b.n	8002614 <Motor_Init+0x1e8>
 8002458:	69bb      	ldr	r3, [r7, #24]
 800245a:	2b0f      	cmp	r3, #15
 800245c:	dd00      	ble.n	8002460 <Motor_Init+0x34>
 800245e:	e0d9      	b.n	8002614 <Motor_Init+0x1e8>

    motor->dirPin1 = dir1;
 8002460:	68fb      	ldr	r3, [r7, #12]
 8002462:	68ba      	ldr	r2, [r7, #8]
 8002464:	601a      	str	r2, [r3, #0]
    motor->dirPin2 = dir2;
 8002466:	68fb      	ldr	r3, [r7, #12]
 8002468:	687a      	ldr	r2, [r7, #4]
 800246a:	605a      	str	r2, [r3, #4]
    motor->pwmPin = pwmpin;
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	683a      	ldr	r2, [r7, #0]
 8002470:	609a      	str	r2, [r3, #8]
    motor->brakeRelayPin = brakepin;
 8002472:	68fb      	ldr	r3, [r7, #12]
 8002474:	69ba      	ldr	r2, [r7, #24]
 8002476:	60da      	str	r2, [r3, #12]
    motor->currentSpeed = 0.0;
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	2200      	movs	r2, #0
 800247c:	611a      	str	r2, [r3, #16]
    motor->inverted = false;
 800247e:	68fb      	ldr	r3, [r7, #12]
 8002480:	2200      	movs	r2, #0
 8002482:	751a      	strb	r2, [r3, #20]
    motor->brakeEnabled = false;
 8002484:	68fb      	ldr	r3, [r7, #12]
 8002486:	2200      	movs	r2, #0
 8002488:	755a      	strb	r2, [r3, #21]

	// Enable GPIOC clock
	RCC->AHBENR |= (1 << 19);
 800248a:	4b64      	ldr	r3, [pc, #400]	@ (800261c <Motor_Init+0x1f0>)
 800248c:	695a      	ldr	r2, [r3, #20]
 800248e:	4b63      	ldr	r3, [pc, #396]	@ (800261c <Motor_Init+0x1f0>)
 8002490:	2180      	movs	r1, #128	@ 0x80
 8002492:	0309      	lsls	r1, r1, #12
 8002494:	430a      	orrs	r2, r1
 8002496:	615a      	str	r2, [r3, #20]
	//Enable TIM3
	RCC->APB1ENR |= (1<<1);
 8002498:	4b60      	ldr	r3, [pc, #384]	@ (800261c <Motor_Init+0x1f0>)
 800249a:	69da      	ldr	r2, [r3, #28]
 800249c:	4b5f      	ldr	r3, [pc, #380]	@ (800261c <Motor_Init+0x1f0>)
 800249e:	2102      	movs	r1, #2
 80024a0:	430a      	orrs	r2, r1
 80024a2:	61da      	str	r2, [r3, #28]

	//Configure brake peripherals
	GPIOC->MODER &= ~( 3 << (2 * brakepin));
 80024a4:	4b5e      	ldr	r3, [pc, #376]	@ (8002620 <Motor_Init+0x1f4>)
 80024a6:	681a      	ldr	r2, [r3, #0]
 80024a8:	69bb      	ldr	r3, [r7, #24]
 80024aa:	005b      	lsls	r3, r3, #1
 80024ac:	2103      	movs	r1, #3
 80024ae:	4099      	lsls	r1, r3
 80024b0:	000b      	movs	r3, r1
 80024b2:	43db      	mvns	r3, r3
 80024b4:	0019      	movs	r1, r3
 80024b6:	4b5a      	ldr	r3, [pc, #360]	@ (8002620 <Motor_Init+0x1f4>)
 80024b8:	400a      	ands	r2, r1
 80024ba:	601a      	str	r2, [r3, #0]
	GPIOC->MODER |= ( 1 << (2 * brakepin));
 80024bc:	4b58      	ldr	r3, [pc, #352]	@ (8002620 <Motor_Init+0x1f4>)
 80024be:	681a      	ldr	r2, [r3, #0]
 80024c0:	69bb      	ldr	r3, [r7, #24]
 80024c2:	005b      	lsls	r3, r3, #1
 80024c4:	2101      	movs	r1, #1
 80024c6:	4099      	lsls	r1, r3
 80024c8:	000b      	movs	r3, r1
 80024ca:	0019      	movs	r1, r3
 80024cc:	4b54      	ldr	r3, [pc, #336]	@ (8002620 <Motor_Init+0x1f4>)
 80024ce:	430a      	orrs	r2, r1
 80024d0:	601a      	str	r2, [r3, #0]

	GPIOC->ODR &= ~( 1 << (brakepin)); // Turn on motor brakes
 80024d2:	4b53      	ldr	r3, [pc, #332]	@ (8002620 <Motor_Init+0x1f4>)
 80024d4:	695a      	ldr	r2, [r3, #20]
 80024d6:	2101      	movs	r1, #1
 80024d8:	69bb      	ldr	r3, [r7, #24]
 80024da:	4099      	lsls	r1, r3
 80024dc:	000b      	movs	r3, r1
 80024de:	43db      	mvns	r3, r3
 80024e0:	0019      	movs	r1, r3
 80024e2:	4b4f      	ldr	r3, [pc, #316]	@ (8002620 <Motor_Init+0x1f4>)
 80024e4:	400a      	ands	r2, r1
 80024e6:	615a      	str	r2, [r3, #20]

	//Configure direction and pwm peripherals
	GPIOC->MODER &= ~(    (3 << (2 * dir1)) | (3 << (2 * dir2)) | (3 << (2 * pwmpin))    ); // Clean registers to be used
 80024e8:	4b4d      	ldr	r3, [pc, #308]	@ (8002620 <Motor_Init+0x1f4>)
 80024ea:	681a      	ldr	r2, [r3, #0]
 80024ec:	68bb      	ldr	r3, [r7, #8]
 80024ee:	005b      	lsls	r3, r3, #1
 80024f0:	2103      	movs	r1, #3
 80024f2:	4099      	lsls	r1, r3
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	005b      	lsls	r3, r3, #1
 80024f8:	2003      	movs	r0, #3
 80024fa:	4098      	lsls	r0, r3
 80024fc:	0003      	movs	r3, r0
 80024fe:	4319      	orrs	r1, r3
 8002500:	683b      	ldr	r3, [r7, #0]
 8002502:	005b      	lsls	r3, r3, #1
 8002504:	2003      	movs	r0, #3
 8002506:	4098      	lsls	r0, r3
 8002508:	0003      	movs	r3, r0
 800250a:	430b      	orrs	r3, r1
 800250c:	43db      	mvns	r3, r3
 800250e:	0019      	movs	r1, r3
 8002510:	4b43      	ldr	r3, [pc, #268]	@ (8002620 <Motor_Init+0x1f4>)
 8002512:	400a      	ands	r2, r1
 8002514:	601a      	str	r2, [r3, #0]
	GPIOC->MODER |=  (    (1 << (2 * dir1)) | (1 << (2 * dir2)) | (2 << (2 * pwmpin))   ); // Set direction peripherals as outputs and PWM as alternate function
 8002516:	4b42      	ldr	r3, [pc, #264]	@ (8002620 <Motor_Init+0x1f4>)
 8002518:	681a      	ldr	r2, [r3, #0]
 800251a:	68bb      	ldr	r3, [r7, #8]
 800251c:	005b      	lsls	r3, r3, #1
 800251e:	2101      	movs	r1, #1
 8002520:	4099      	lsls	r1, r3
 8002522:	687b      	ldr	r3, [r7, #4]
 8002524:	005b      	lsls	r3, r3, #1
 8002526:	2001      	movs	r0, #1
 8002528:	4098      	lsls	r0, r3
 800252a:	0003      	movs	r3, r0
 800252c:	4319      	orrs	r1, r3
 800252e:	683b      	ldr	r3, [r7, #0]
 8002530:	005b      	lsls	r3, r3, #1
 8002532:	2002      	movs	r0, #2
 8002534:	4098      	lsls	r0, r3
 8002536:	0003      	movs	r3, r0
 8002538:	430b      	orrs	r3, r1
 800253a:	0019      	movs	r1, r3
 800253c:	4b38      	ldr	r3, [pc, #224]	@ (8002620 <Motor_Init+0x1f4>)
 800253e:	430a      	orrs	r2, r1
 8002540:	601a      	str	r2, [r3, #0]

	GPIOC->ODR &= ~(1 << (dir1) | 1 << (dir2)); // Turn off direction for motor controllers
 8002542:	4b37      	ldr	r3, [pc, #220]	@ (8002620 <Motor_Init+0x1f4>)
 8002544:	695a      	ldr	r2, [r3, #20]
 8002546:	2101      	movs	r1, #1
 8002548:	68bb      	ldr	r3, [r7, #8]
 800254a:	4099      	lsls	r1, r3
 800254c:	2001      	movs	r0, #1
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	4098      	lsls	r0, r3
 8002552:	0003      	movs	r3, r0
 8002554:	430b      	orrs	r3, r1
 8002556:	43db      	mvns	r3, r3
 8002558:	0019      	movs	r1, r3
 800255a:	4b31      	ldr	r3, [pc, #196]	@ (8002620 <Motor_Init+0x1f4>)
 800255c:	400a      	ands	r2, r1
 800255e:	615a      	str	r2, [r3, #20]

	//AF0, in AFRH works for PC8 or greater
	GPIOC->AFR[1] &= ~(0xF << ((pwmpin-8)*4));
 8002560:	4b2f      	ldr	r3, [pc, #188]	@ (8002620 <Motor_Init+0x1f4>)
 8002562:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002564:	683b      	ldr	r3, [r7, #0]
 8002566:	3b08      	subs	r3, #8
 8002568:	009b      	lsls	r3, r3, #2
 800256a:	210f      	movs	r1, #15
 800256c:	4099      	lsls	r1, r3
 800256e:	000b      	movs	r3, r1
 8002570:	43db      	mvns	r3, r3
 8002572:	0019      	movs	r1, r3
 8002574:	4b2a      	ldr	r3, [pc, #168]	@ (8002620 <Motor_Init+0x1f4>)
 8002576:	400a      	ands	r2, r1
 8002578:	625a      	str	r2, [r3, #36]	@ 0x24

    TIM3->PSC = PWM_TIMER_PRESCALER;
 800257a:	4b2a      	ldr	r3, [pc, #168]	@ (8002624 <Motor_Init+0x1f8>)
 800257c:	4a2a      	ldr	r2, [pc, #168]	@ (8002628 <Motor_Init+0x1fc>)
 800257e:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM3->ARR = PWM_TIMER_PERIOD;
 8002580:	4b28      	ldr	r3, [pc, #160]	@ (8002624 <Motor_Init+0x1f8>)
 8002582:	4a2a      	ldr	r2, [pc, #168]	@ (800262c <Motor_Init+0x200>)
 8002584:	62da      	str	r2, [r3, #44]	@ 0x2c
    TIM3->CR1 |= 1<<7; //Enable autoreload preload
 8002586:	4b27      	ldr	r3, [pc, #156]	@ (8002624 <Motor_Init+0x1f8>)
 8002588:	681a      	ldr	r2, [r3, #0]
 800258a:	4b26      	ldr	r3, [pc, #152]	@ (8002624 <Motor_Init+0x1f8>)
 800258c:	2180      	movs	r1, #128	@ 0x80
 800258e:	430a      	orrs	r2, r1
 8002590:	601a      	str	r2, [r3, #0]

	if (pwmpin == 8) {
 8002592:	683b      	ldr	r3, [r7, #0]
 8002594:	2b08      	cmp	r3, #8
 8002596:	d116      	bne.n	80025c6 <Motor_Init+0x19a>
		TIM3->CCR3 = 0; // Turn off completly PWM
 8002598:	4b22      	ldr	r3, [pc, #136]	@ (8002624 <Motor_Init+0x1f8>)
 800259a:	2200      	movs	r2, #0
 800259c:	63da      	str	r2, [r3, #60]	@ 0x3c
		TIM3->CCMR2 |= 3<<5; //Mode 1 Bits 6:5 110
 800259e:	4b21      	ldr	r3, [pc, #132]	@ (8002624 <Motor_Init+0x1f8>)
 80025a0:	69da      	ldr	r2, [r3, #28]
 80025a2:	4b20      	ldr	r3, [pc, #128]	@ (8002624 <Motor_Init+0x1f8>)
 80025a4:	2160      	movs	r1, #96	@ 0x60
 80025a6:	430a      	orrs	r2, r1
 80025a8:	61da      	str	r2, [r3, #28]
		TIM3->CCMR2 |= 1<<3; //Bit 3 Output compare preload enable
 80025aa:	4b1e      	ldr	r3, [pc, #120]	@ (8002624 <Motor_Init+0x1f8>)
 80025ac:	69da      	ldr	r2, [r3, #28]
 80025ae:	4b1d      	ldr	r3, [pc, #116]	@ (8002624 <Motor_Init+0x1f8>)
 80025b0:	2108      	movs	r1, #8
 80025b2:	430a      	orrs	r2, r1
 80025b4:	61da      	str	r2, [r3, #28]
		TIM3->CCER |= 1<<8; //Enable CC3 output
 80025b6:	4b1b      	ldr	r3, [pc, #108]	@ (8002624 <Motor_Init+0x1f8>)
 80025b8:	6a1a      	ldr	r2, [r3, #32]
 80025ba:	4b1a      	ldr	r3, [pc, #104]	@ (8002624 <Motor_Init+0x1f8>)
 80025bc:	2180      	movs	r1, #128	@ 0x80
 80025be:	0049      	lsls	r1, r1, #1
 80025c0:	430a      	orrs	r2, r1
 80025c2:	621a      	str	r2, [r3, #32]
 80025c4:	e017      	b.n	80025f6 <Motor_Init+0x1ca>
	} else {
		TIM3->CCR4 = 0; // Turn off completly PWM
 80025c6:	4b17      	ldr	r3, [pc, #92]	@ (8002624 <Motor_Init+0x1f8>)
 80025c8:	2200      	movs	r2, #0
 80025ca:	641a      	str	r2, [r3, #64]	@ 0x40
		TIM3->CCMR2 |= 3<<13; //Mode 1 Bits 6:5 110
 80025cc:	4b15      	ldr	r3, [pc, #84]	@ (8002624 <Motor_Init+0x1f8>)
 80025ce:	69da      	ldr	r2, [r3, #28]
 80025d0:	4b14      	ldr	r3, [pc, #80]	@ (8002624 <Motor_Init+0x1f8>)
 80025d2:	21c0      	movs	r1, #192	@ 0xc0
 80025d4:	01c9      	lsls	r1, r1, #7
 80025d6:	430a      	orrs	r2, r1
 80025d8:	61da      	str	r2, [r3, #28]
		TIM3->CCMR2 |= 1<<11; //Bit 3 Output compare preload enable
 80025da:	4b12      	ldr	r3, [pc, #72]	@ (8002624 <Motor_Init+0x1f8>)
 80025dc:	69da      	ldr	r2, [r3, #28]
 80025de:	4b11      	ldr	r3, [pc, #68]	@ (8002624 <Motor_Init+0x1f8>)
 80025e0:	2180      	movs	r1, #128	@ 0x80
 80025e2:	0109      	lsls	r1, r1, #4
 80025e4:	430a      	orrs	r2, r1
 80025e6:	61da      	str	r2, [r3, #28]
		TIM3->CCER |= 1<<12; //Enable CC4 output
 80025e8:	4b0e      	ldr	r3, [pc, #56]	@ (8002624 <Motor_Init+0x1f8>)
 80025ea:	6a1a      	ldr	r2, [r3, #32]
 80025ec:	4b0d      	ldr	r3, [pc, #52]	@ (8002624 <Motor_Init+0x1f8>)
 80025ee:	2180      	movs	r1, #128	@ 0x80
 80025f0:	0149      	lsls	r1, r1, #5
 80025f2:	430a      	orrs	r2, r1
 80025f4:	621a      	str	r2, [r3, #32]
	}

	TIM3->EGR |= 1<<0; // Force register updates
 80025f6:	4b0b      	ldr	r3, [pc, #44]	@ (8002624 <Motor_Init+0x1f8>)
 80025f8:	695a      	ldr	r2, [r3, #20]
 80025fa:	4b0a      	ldr	r3, [pc, #40]	@ (8002624 <Motor_Init+0x1f8>)
 80025fc:	2101      	movs	r1, #1
 80025fe:	430a      	orrs	r2, r1
 8002600:	615a      	str	r2, [r3, #20]
	TIM3->CR1 |= 1<<0; //Enable counter enable
 8002602:	4b08      	ldr	r3, [pc, #32]	@ (8002624 <Motor_Init+0x1f8>)
 8002604:	681a      	ldr	r2, [r3, #0]
 8002606:	4b07      	ldr	r3, [pc, #28]	@ (8002624 <Motor_Init+0x1f8>)
 8002608:	2101      	movs	r1, #1
 800260a:	430a      	orrs	r2, r1
 800260c:	601a      	str	r2, [r3, #0]
 800260e:	e002      	b.n	8002616 <Motor_Init+0x1ea>
	if (pwmpin != 8 && pwmpin != 9) return;
 8002610:	46c0      	nop			@ (mov r8, r8)
 8002612:	e000      	b.n	8002616 <Motor_Init+0x1ea>
	if ((dir1 > 15) || (dir2 > 15) || (brakepin > 15)) return; // Prevent invalid pins
 8002614:	46c0      	nop			@ (mov r8, r8)
}
 8002616:	46bd      	mov	sp, r7
 8002618:	b004      	add	sp, #16
 800261a:	bd80      	pop	{r7, pc}
 800261c:	40021000 	.word	0x40021000
 8002620:	48000800 	.word	0x48000800
 8002624:	40000400 	.word	0x40000400
 8002628:	007a11ff 	.word	0x007a11ff
 800262c:	000003e7 	.word	0x000003e7

08002630 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002630:	480d      	ldr	r0, [pc, #52]	@ (8002668 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002632:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8002634:	e000      	b.n	8002638 <Reset_Handler+0x8>
 8002636:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002638:	480c      	ldr	r0, [pc, #48]	@ (800266c <LoopForever+0x6>)
  ldr r1, =_edata
 800263a:	490d      	ldr	r1, [pc, #52]	@ (8002670 <LoopForever+0xa>)
  ldr r2, =_sidata
 800263c:	4a0d      	ldr	r2, [pc, #52]	@ (8002674 <LoopForever+0xe>)
  movs r3, #0
 800263e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002640:	e002      	b.n	8002648 <LoopCopyDataInit>

08002642 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002642:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002644:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8002646:	3304      	adds	r3, #4

08002648 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002648:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800264a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800264c:	d3f9      	bcc.n	8002642 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800264e:	4a0a      	ldr	r2, [pc, #40]	@ (8002678 <LoopForever+0x12>)
  ldr r4, =_ebss
 8002650:	4c0a      	ldr	r4, [pc, #40]	@ (800267c <LoopForever+0x16>)
  movs r3, #0
 8002652:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002654:	e001      	b.n	800265a <LoopFillZerobss>

08002656 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002656:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002658:	3204      	adds	r2, #4

0800265a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800265a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800265c:	d3fb      	bcc.n	8002656 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800265e:	f000 f811 	bl	8002684 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8002662:	f7ff fa49 	bl	8001af8 <main>

08002666 <LoopForever>:

LoopForever:
  b LoopForever
 8002666:	e7fe      	b.n	8002666 <LoopForever>
  ldr   r0, =_estack
 8002668:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800266c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002670:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8002674:	08002768 	.word	0x08002768
  ldr r2, =_sbss
 8002678:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800267c:	200000b0 	.word	0x200000b0

08002680 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8002680:	e7fe      	b.n	8002680 <ADC_COMP_IRQHandler>
	...

08002684 <__libc_init_array>:
 8002684:	b570      	push	{r4, r5, r6, lr}
 8002686:	2600      	movs	r6, #0
 8002688:	4c0c      	ldr	r4, [pc, #48]	@ (80026bc <__libc_init_array+0x38>)
 800268a:	4d0d      	ldr	r5, [pc, #52]	@ (80026c0 <__libc_init_array+0x3c>)
 800268c:	1b64      	subs	r4, r4, r5
 800268e:	10a4      	asrs	r4, r4, #2
 8002690:	42a6      	cmp	r6, r4
 8002692:	d109      	bne.n	80026a8 <__libc_init_array+0x24>
 8002694:	2600      	movs	r6, #0
 8002696:	f000 f819 	bl	80026cc <_init>
 800269a:	4c0a      	ldr	r4, [pc, #40]	@ (80026c4 <__libc_init_array+0x40>)
 800269c:	4d0a      	ldr	r5, [pc, #40]	@ (80026c8 <__libc_init_array+0x44>)
 800269e:	1b64      	subs	r4, r4, r5
 80026a0:	10a4      	asrs	r4, r4, #2
 80026a2:	42a6      	cmp	r6, r4
 80026a4:	d105      	bne.n	80026b2 <__libc_init_array+0x2e>
 80026a6:	bd70      	pop	{r4, r5, r6, pc}
 80026a8:	00b3      	lsls	r3, r6, #2
 80026aa:	58eb      	ldr	r3, [r5, r3]
 80026ac:	4798      	blx	r3
 80026ae:	3601      	adds	r6, #1
 80026b0:	e7ee      	b.n	8002690 <__libc_init_array+0xc>
 80026b2:	00b3      	lsls	r3, r6, #2
 80026b4:	58eb      	ldr	r3, [r5, r3]
 80026b6:	4798      	blx	r3
 80026b8:	3601      	adds	r6, #1
 80026ba:	e7f2      	b.n	80026a2 <__libc_init_array+0x1e>
 80026bc:	08002760 	.word	0x08002760
 80026c0:	08002760 	.word	0x08002760
 80026c4:	08002764 	.word	0x08002764
 80026c8:	08002760 	.word	0x08002760

080026cc <_init>:
 80026cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026ce:	46c0      	nop			@ (mov r8, r8)
 80026d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80026d2:	bc08      	pop	{r3}
 80026d4:	469e      	mov	lr, r3
 80026d6:	4770      	bx	lr

080026d8 <_fini>:
 80026d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80026da:	46c0      	nop			@ (mov r8, r8)
 80026dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80026de:	bc08      	pop	{r3}
 80026e0:	469e      	mov	lr, r3
 80026e2:	4770      	bx	lr
